import daisy.lang._
import Real._
import daisy.lang.Vector._

object avg {

	def avg(x: Vector): Real = {
require(x >= -62.54 && x <= 15.02 && x.size(1000)
	 && x.specV(Set(((0, 0),(-52.69, -49.35)), ((1, 10),(-50.82, 7.64)), ((11, 14),(-51.2, 0.01)),
((15, 15),(1.56, 13.49)), ((16, 16),(-35.36, -11.56)), ((17, 19),(-52.38, -19.99)),
((20, 22),(-61.44, 12.76)), ((23, 23),(-21.7, -12.15)), ((24, 33),(-28.89, 9.87)),
((37, 38),(1.54, 5.07)), ((39, 48),(-46.17, -43.01)), ((66, 75),(-43.88, -39.82)),
((90, 91),(-42.42, -17.06)), ((95, 99),(-52.37, -30.04)), ((100, 100),(-35.1, 8.04)),
((101, 101),(-27.01, -17.3)), ((102, 109),(-29.92, 7.6)), ((110, 111),(-23.63, 8.64)),
((112, 114),(-21.94, -21.29)), ((115, 115),(-61.09, -28.4)), ((116, 125),(-62.23, -48.34)),
((126, 129),(-49.17, -0.56)), ((130, 134),(-25.82, -6.29)), ((137, 146),(-37.26, -19.38)),
((147, 148),(-22.34, -19.46)), ((149, 150),(-54.31, -1.71)), ((151, 152),(-43.27, -19.08)),
((153, 153),(-41.06, -2.64)), ((154, 163),(-23.16, -18.97)), ((164, 164),(-3.59, 8.23)),
((165, 167),(-28.16, -15.03)), ((168, 177),(-23.33, -22.82)), ((190, 191),(-27.46, -8.81)),
((192, 192),(-25.46, -21.18)), ((193, 202),(-8.31, 10.48)), ((203, 203),(5.44, 10.54)),
((204, 205),(-42.41, -19.14)), ((206, 208),(2.61, 10.62)), ((209, 209),(-53.11, -51.9)),
((210, 211),(-56.91, -28.25)), ((213, 222),(-56.87, -43.88)), ((227, 236),(-10.62, -1.74)),
((243, 252),(-50.56, 7.03)), ((261, 270),(-11.33, -7.0)), ((279, 286),(-51.45, 5.93)),
((287, 287),(-45.51, 12.5)), ((288, 289),(-31.65, 11.34)), ((290, 292),(-24.75, 14.23)),
((293, 293),(-50.02, 2.02)), ((294, 297),(-29.07, -22.55)), ((298, 300),(-47.36, -36.24)),
((301, 308),(-37.84, -6.53)), ((315, 324),(-61.03, -19.57)), ((414, 423),(-61.14, -28.38)),
((436, 445),(-36.83, -14.15)), ((731, 740),(-57.55, -22.81)), ((741, 742),(-1.39, 13.86)),
((743, 743),(-54.41, 12.82)), ((744, 746),(-59.47, -41.94)), ((747, 756),(-41.56, -2.12)),
((757, 757),(-52.49, -29.79)), ((758, 759),(0.98, 8.15)), ((760, 769),(-50.96, -42.48)),
((770, 770),(-18.28, 8.75)), ((771, 771),(-55.6, -8.22)), ((772, 781),(-58.08, -9.16)),
((782, 783),(-56.92, -29.55)), ((784, 784),(-13.33, 10.24)), ((785, 794),(-56.04, -0.37)),
((799, 800),(-57.37, 3.87)), ((801, 810),(-27.35, 4.38)), ((827, 836),(-36.24, -19.64)),
((838, 839),(-41.76, 9.33)), ((848, 856),(-52.52, -21.67)), ((857, 866),(-54.05, -44.05)),
((867, 868),(-58.63, -50.02)), ((869, 878),(-46.89, -38.34)), ((879, 888),(-38.88, -3.63)),
((889, 898),(-40.05, -23.75)), ((900, 907),(-48.74, -35.63)), ((908, 909),(-61.13, -43.12)),
((910, 919),(-61.35, -5.68)), ((920, 920),(-47.85, -19.8)), ((921, 921),(-25.72, 9.95)),
((922, 923),(-54.3, 0.98)), ((924, 925),(-29.02, -24.15)), ((926, 926),(-32.05, 2.19)),
((929, 930),(-23.24, -9.2)), ((957, 966),(-35.96, 13.66)), ((967, 968),(-7.73, 2.01)),
((969, 971),(-31.15, -13.21)), ((972, 972),(-58.32, -35.58)), ((973, 974),(-57.05, -52.47)),
((975, 975),(-42.72, -5.08)), ((976, 985),(-55.99, -49.88)), ((989, 989),(2.71, 4.98)),
((990, 991),(-40.67, -10.53)), ((992, 992),(-43.75, -39.81)), ((993, 995),(-50.32, -26.9)),
((996, 996),(-42.12, -27.96)), ((34, 36),(-12.89, 3.02)), ((49, 49),(-50.11, -50.05)),
((50, 52),(-34.18, -20.49)), ((53, 54),(-25.03, 1.0)), ((55, 55),(-9.36, 0.63)),
((56, 57),(-52.08, 3.88)), ((58, 58),(-42.12, -37.2)), ((59, 61),(-51.14, -23.35)),
((62, 63),(-38.6, -16.43)), ((64, 64),(-12.1, -11.15)), ((65, 65),(-56.32, -25.95)),
((76, 78),(-11.59, 2.04)), ((79, 79),(-52.01, -24.99)), ((80, 80),(-27.37, 10.6)),
((84, 85),(-62.14, 14.12)), ((86, 88),(-48.25, -20.56)), ((89, 89),(-47.82, -15.82)),
((92, 92),(-21.4, 0.2)), ((93, 94),(-47.36, -11.51)), ((135, 135),(-18.03, 3.03)),
((136, 136),(-39.48, 6.21)), ((178, 179),(-53.58, -28.08)), ((180, 180),(-53.54, -18.83)),
((181, 183),(9.82, 12.65)), ((184, 184),(-40.96, 13.3)), ((185, 186),(-47.24, -31.12)),
((187, 187),(-53.54, -30.24)), ((188, 189),(-42.91, -30.67)), ((212, 212),(-29.6, -21.41)),
((223, 223),(-49.91, 4.46)), ((224, 224),(-50.9, -11.2)), ((225, 226),(-51.52, -2.04)),
((237, 238),(-8.58, 14.41)), ((239, 239),(-24.26, 11.36)), ((240, 240),(-48.2, -46.5)),
((241, 242),(-32.24, -26.17)), ((253, 254),(-37.77, -8.69)), ((255, 257),(-11.23, 13.27)),
((258, 260),(-57.6, 9.53)), ((271, 273),(-61.16, -10.26)), ((274, 274),(-17.98, 11.82)),
((275, 276),(-54.39, -3.99)), ((277, 277),(-33.85, 9.99)), ((278, 278),(-29.88, 12.2)),
((309, 309),(-33.52, -5.89)), ((310, 310),(-19.08, -18.7)), ((311, 313),(-8.78, 14.82)),
((314, 314),(-49.96, -9.68)), ((325, 325),(-0.41, 8.02)), ((326, 328),(-59.06, 9.31)),
((329, 330),(-46.67, -39.34)), ((331, 331),(-49.79, -31.65)), ((332, 332),(-29.14, 7.92)),
((333, 334),(-26.14, -5.48)), ((335, 337),(-56.95, -1.56)), ((339, 341),(-41.73, -30.51)),
((342, 344),(-39.15, 12.61)), ((345, 345),(-28.64, -5.29)), ((346, 348),(-7.46, 4.45)),
((349, 351),(-59.2, -8.55)), ((352, 354),(-23.95, -23.72)), ((355, 355),(-49.84, -11.85)),
((356, 357),(-39.37, 2.15)), ((358, 360),(-56.73, -24.58)), ((361, 362),(-28.46, 5.85)),
((363, 363),(-25.46, 12.72)), ((364, 366),(-41.05, -36.3)), ((370, 370),(-26.97, -14.54)),
((380, 382),(-55.87, -13.99)), ((383, 385),(-50.88, -34.1)), ((388, 389),(-37.66, -2.12)),
((390, 392),(-30.58, -15.62)), ((424, 424),(-50.97, 1.1)), ((425, 425),(7.69, 12.39)),
((426, 428),(-45.1, -36.88)), ((429, 431),(-52.4, -18.78)), ((432, 433),(-22.26, -17.24)),
((434, 434),(-59.37, -16.57)), ((435, 435),(-44.25, 2.31)), ((446, 446),(-9.02, -6.67)),
((447, 449),(-51.46, 15.01)), ((450, 450),(-18.75, 7.27)), ((451, 453),(-38.62, -30.24)),
((454, 454),(-33.38, -24.54)), ((455, 456),(-46.88, -23.39)), ((457, 458),(-44.5, -22.48)),
((459, 461),(-48.72, -24.96)), ((462, 464),(-20.07, -4.93)), ((465, 466),(-26.15, 10.93)),
((467, 469),(4.61, 14.29)), ((512, 514),(-23.33, -9.02)), ((521, 523),(-57.05, -42.71)),
((524, 524),(-54.75, -3.12)), ((525, 527),(-45.14, -24.36)), ((531, 533),(-56.46, 5.46)),
((537, 539),(-33.96, 3.54)), ((543, 545),(-52.74, 8.21)), ((551, 552),(-8.39, 1.86)),
((553, 554),(-46.92, -23.97)), ((555, 557),(-45.13, -15.84)), ((568, 570),(-62.07, -41.9)),
((573, 575),(-31.7, -6.49)), ((576, 578),(-44.35, -6.19)), ((579, 579),(-40.49, 3.25)),
((580, 582),(-54.3, -39.94)), ((583, 584),(-43.14, 3.59)), ((585, 585),(-13.17, 8.2)),
((586, 587),(-14.75, -12.56)), ((593, 595),(8.39, 11.43)), ((601, 601),(-61.8, -52.17)),
((603, 604),(-46.29, -1.49)), ((605, 607),(-40.41, -35.8)), ((608, 610),(-58.54, 9.64)),
((611, 612),(-37.92, -26.56)), ((613, 613),(-44.67, -42.81)), ((614, 616),(-50.43, -2.08)),
((617, 618),(-53.74, 5.21)), ((619, 621),(-43.41, 12.98)), ((622, 622),(-45.74, 4.94)),
((623, 625),(-49.59, -38.19)), ((626, 628),(-37.42, -33.16)), ((629, 629),(-50.66, -48.46)),
((630, 630),(-31.28, 11.49)), ((631, 632),(-25.07, -2.64)), ((633, 633),(-57.48, -56.1)),
((634, 636),(-50.11, 14.67)), ((637, 638),(-54.43, -5.12)), ((639, 641),(-44.29, -37.45)),
((642, 643),(-11.92, -2.63)), ((644, 644),(-22.14, 12.29)), ((645, 645),(-54.95, -8.45)),
((646, 648),(-52.84, 1.05)), ((649, 649),(-25.79, -23.1)), ((650, 650),(-4.66, 2.32)),
((651, 653),(-55.27, -37.13)), ((654, 654),(-55.87, -31.49)), ((655, 655),(-44.29, -36.37)),
((656, 657),(-19.41, -16.4)), ((658, 660),(-58.9, -36.75)), ((661, 663),(-35.14, -13.97)),
((664, 666),(-0.27, 1.33)), ((667, 669),(-43.67, 11.64)), ((677, 679),(-45.91, -24.62)),
((680, 682),(-62.17, -8.84)), ((683, 685),(-52.14, -2.95)), ((686, 686),(-9.0, 11.77)),
((687, 689),(-56.54, -48.93)), ((690, 690),(-46.3, -18.04)), ((691, 693),(-55.26, 8.59)),
((694, 695),(-44.0, -36.46)), ((696, 697),(1.74, 13.58)), ((698, 699),(-48.47, -47.38)),
((700, 702),(-29.86, -23.21)), ((703, 705),(-59.69, -54.71)), ((707, 707),(-58.69, -48.7)),
((711, 713),(-40.15, -5.11)), ((714, 715),(-33.17, -5.75)), ((716, 718),(-31.6, -25.59)),
((719, 721),(-60.02, 8.07)), ((722, 722),(-57.12, -27.54)), ((723, 725),(-58.05, -9.93)),
((726, 727),(-33.0, -26.58)), ((728, 730),(-29.74, -15.81)), ((795, 795),(-58.48, 2.67)),
((796, 798),(-61.57, -17.35)), ((811, 812),(-50.88, 4.87)), ((813, 813),(-42.29, -21.14)),
((814, 814),(-23.88, 4.58)), ((815, 816),(-55.35, 8.19)), ((817, 818),(-53.66, -52.4)),
((819, 821),(-60.28, 4.7)), ((822, 824),(-32.67, 0.54)), ((825, 825),(-43.95, -36.99)),
((826, 826),(-51.95, -39.19)), ((837, 837),(-33.75, -9.84)), ((840, 840),(-38.55, -17.04)),
((841, 841),(-60.52, -14.27)), ((842, 843),(-39.28, 5.98)), ((844, 844),(-42.13, -14.68)),
((845, 846),(-39.42, -33.22)), ((847, 847),(-55.62, -44.73)), ((899, 899),(-26.86, -1.58)),
((927, 927),(-53.46, -22.51)), ((928, 928),(-39.07, 4.03)), ((931, 931),(-24.61, -12.4)),
((932, 934),(-24.94, -8.14)), ((935, 936),(-61.16, -29.89)), ((937, 937),(-60.08, -35.25)),
((938, 940),(-58.39, 10.87)), ((941, 941),(-37.59, -32.05)), ((942, 944),(-55.84, 11.94)),
((945, 945),(-61.03, -20.09)), ((946, 946),(-43.17, -34.81)), ((947, 947),(-50.11, -32.19)),
((948, 948),(-33.57, -32.99)), ((949, 950),(-54.64, -14.41)), ((986, 987),(-59.18, -32.83)),
((988, 988),(-61.15, -22.17)), ((997, 998),(-51.16, -35.8)), ((999, 999),(-55.63, -9.91))))
	)

        val n: Real = x.length()
        val z = x.fold(0.0)((acc: Real, i: Real) => acc + i)
        z / n
    }


}