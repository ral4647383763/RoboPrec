import daisy.lang._
import Real._
import daisy.lang.Vector._

object goubault {

	def goubault(x:Vector, y: Real): Real = {
require(54.86 <= y && y <= 359.03
	 && x >= -270.01 && x <= 385.38 && x.size(1000)
	 && x.specV(Set(((0, 0),(199.97, 299.87)), ((1, 10),(-240.41, -189.36)), ((11, 11),(53.49, 58.18)),
((12, 17),(-190.03, -86.75)), ((18, 18),(-180.25, -4.15)), ((19, 24),(117.86, 294.34)),
((25, 25),(-173.52, 105.42)), ((26, 27),(-162.31, 219.29)), ((28, 36),(271.35, 344.47)),
((37, 44),(-15.23, 5.57)), ((45, 45),(74.47, 280.34)), ((46, 46),(-10.72, 346.9)),
((47, 56),(-48.13, 239.17)), ((57, 58),(-112.47, -50.4)), ((59, 59),(15.47, 373.07)),
((60, 60),(257.17, 328.21)), ((61, 61),(264.16, 285.52)), ((62, 63),(-234.91, 69.07)),
((64, 66),(342.34, 357.76)), ((67, 67),(-106.63, 6.65)), ((68, 69),(-31.16, 144.65)),
((70, 70),(-224.61, 77.87)), ((71, 71),(13.8, 60.81)), ((72, 73),(-256.36, -178.64)),
((74, 83),(238.95, 365.52)), ((84, 84),(144.99, 344.05)), ((85, 94),(260.38, 309.6)),
((95, 95),(-247.48, 309.78)), ((96, 105),(-95.83, 150.47)), ((106, 107),(-90.8, 174.63)),
((108, 108),(85.38, 335.82)), ((109, 118),(-105.78, 137.16)), ((210, 219),(14.23, 70.99)),
((222, 225),(-81.57, 353.18)), ((228, 237),(-69.85, 154.37)), ((269, 278),(-191.11, 119.48)),
((279, 279),(66.72, 356.6)), ((280, 289),(-94.1, 35.68)), ((290, 292),(-172.75, 79.86)),
((293, 294),(-188.79, -183.91)), ((295, 295),(-77.59, -3.57)), ((296, 297),(-110.49, -81.06)),
((298, 298),(-212.44, 88.04)), ((299, 308),(129.75, 280.35)), ((309, 309),(103.68, 156.23)),
((310, 310),(-138.15, 195.55)), ((311, 312),(32.05, 89.16)), ((313, 315),(37.35, 131.61)),
((316, 316),(-111.24, -66.51)), ((317, 322),(-124.79, 65.84)), ((325, 328),(-18.88, 113.84)),
((329, 329),(-262.23, -38.88)), ((330, 339),(-113.67, 294.85)), ((345, 345),(52.05, 94.81)),
((347, 356),(-83.34, 377.19)), ((363, 372),(-76.34, 236.04)), ((393, 402),(-226.23, -166.09)),
((403, 405),(18.35, 301.01)), ((406, 415),(-229.36, -15.79)), ((416, 417),(18.29, 211.97)),
((418, 419),(-198.41, -122.44)), ((488, 497),(214.09, 358.71)), ((498, 501),(-168.74, -49.13)),
((502, 503),(-39.02, 172.6)), ((504, 513),(133.9, 287.07)), ((514, 514),(69.33, 268.19)),
((515, 515),(214.17, 217.13)), ((516, 516),(41.46, 227.89)), ((517, 517),(194.37, 244.43)),
((518, 518),(-186.6, 329.48)), ((519, 520),(-267.18, 300.72)), ((521, 530),(113.94, 231.81)),
((531, 531),(56.3, 360.96)), ((532, 532),(3.88, 104.85)), ((533, 534),(243.61, 301.99)),
((535, 535),(-21.25, 128.03)), ((536, 537),(26.41, 30.09)), ((538, 540),(-78.03, 203.88)),
((541, 544),(-13.96, 93.96)), ((545, 554),(-58.98, -18.01)), ((555, 556),(245.83, 286.79)),
((557, 562),(21.0, 57.39)), ((563, 564),(-149.28, -70.75)), ((565, 566),(-174.98, 107.12)),
((567, 574),(-212.38, 111.15)), ((575, 584),(-57.75, 333.05)), ((586, 586),(279.31, 282.74)),
((587, 591),(-136.11, 358.35)), ((603, 612),(9.48, 326.77)), ((639, 648),(-263.0, -238.92)),
((649, 658),(55.94, 100.24)), ((659, 661),(236.92, 333.15)), ((686, 695),(82.92, 384.28)),
((696, 696),(69.0, 69.12)), ((697, 706),(-14.72, 179.08)), ((707, 711),(-35.57, 119.76)),
((714, 714),(-39.9, 351.23)), ((715, 724),(74.23, 173.35)), ((735, 736),(-205.15, -24.62)),
((745, 754),(-7.27, 97.89))))
	)

        x.fold(y)((acc: Real, xi: Real) => {0.75 * xi - 0.125 * acc})
    }


}