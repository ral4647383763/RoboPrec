import daisy.lang._
import Real._
import daisy.lang.Vector._

object variance {

	def variance(x: Vector): Real = {
require(x >= -252.68 && x <= 72.42 && x.size(100)
	 && x.specV(Set(((0, 2),(-3.44, 11.24)), ((3, 3),(-241.35, -239.46)), ((4, 4),(-232.34, 46.44)),
((5, 14),(-169.12, -9.74)), ((15, 16),(-142.45, 39.44)), ((17, 17),(-164.15, 58.66)),
((18, 18),(-167.45, -52.1)), ((19, 20),(-149.79, -19.7)), ((21, 31),(-251.45, -163.07)),
((63, 73),(-7.02, 45.26)), ((36, 38),(-190.78, -81.21)), ((44, 46),(-217.8, -146.05)),
((48, 49),(-233.34, 30.73)), ((50, 52),(-157.42, -118.47)), ((57, 59),(-233.88, -156.52)),
((74, 75),(-109.28, -28.64)), ((76, 76),(-168.42, -129.34)), ((77, 79),(-46.33, 40.07)),
((80, 81),(-183.7, -107.87)), ((82, 82),(2.73, 49.84)), ((83, 84),(-174.73, 23.9)),
((85, 87),(-131.11, -97.03)), ((88, 89),(-244.33, -173.78)), ((90, 92),(-186.78, -174.44)),
((93, 94),(15.84, 56.48)), ((95, 95),(-149.05, 8.1)), ((96, 96),(-154.72, -63.79)),
((97, 97),(-189.45, 42.9)), ((98, 98),(-85.13, -60.75)), ((99, 99),(-82.43, 5.5))))
	)

        val n: Real = x.length()
        val y = x.fold(0.0)((acc: Real, i: Real) => acc + i)
        val avg = y / n

        val z = x.fold(0.0)((acc: Real, i: Real) => acc + pow(i - avg, 2))
        z / n
    }


}