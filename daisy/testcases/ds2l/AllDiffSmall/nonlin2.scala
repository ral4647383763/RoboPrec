import daisy.lang._
import Real._
import daisy.lang.Vector._

object nonlin2 {

	def nonlin2(x: Vector, y: Vector): Vector = {
require(x >= 0.0 && x <= 1.0 && x.size(100)
	 && x.specV(Set(((0, 0),(0.74, 0.93)), ((1, 1),(0.53, 0.69)), ((2, 2),(0.45, 0.69)),
((3, 3),(0.55, 0.83)), ((4, 4),(0.77, 0.9)), ((5, 5),(0.2, 0.65)),
((6, 6),(0.57, 0.65)), ((7, 7),(0.03, 0.84)), ((8, 8),(0.59, 0.9)),
((9, 9),(0.08, 0.84)), ((10, 10),(0.46, 0.67)), ((11, 11),(0.01, 0.1)),
((12, 12),(0.18, 0.2)), ((13, 13),(0.34, 0.98)), ((14, 14),(0.23, 0.81)),
((15, 15),(0.01, 0.43)), ((16, 16),(0.37, 0.94)), ((17, 17),(0.22, 0.25)),
((18, 18),(0.27, 0.99)), ((19, 19),(0.09, 0.93)), ((20, 20),(0.1, 0.95)),
((21, 21),(0.45, 0.48)), ((22, 22),(0.14, 0.15)), ((23, 23),(0.55, 0.86)),
((24, 24),(0.2, 0.88)), ((25, 25),(0.06, 0.65)), ((26, 26),(0.01, 0.06)),
((27, 27),(0.47, 0.65)), ((28, 28),(0.25, 0.84)), ((29, 29),(0.77, 0.78)),
((30, 30),(0.4, 0.89)), ((31, 31),(0.61, 0.86)), ((32, 32),(0.23, 0.6)),
((33, 33),(0.28, 0.59)), ((34, 34),(0.85, 0.96)), ((35, 35),(0.33, 0.45)),
((36, 36),(0.28, 0.57)), ((37, 37),(0.08, 0.08)), ((38, 38),(0.69, 0.8)),
((39, 39),(0.04, 0.69)), ((40, 40),(0.44, 0.86)), ((41, 41),(0.31, 0.8)),
((42, 42),(0.28, 1.0)), ((43, 43),(0.26, 0.73)), ((44, 44),(0.0, 0.86)),
((45, 45),(0.12, 0.65)), ((46, 46),(0.11, 0.26)), ((47, 47),(0.43, 0.52)),
((48, 48),(0.66, 0.97)), ((49, 49),(0.36, 0.62)), ((50, 50),(0.6, 0.68)),
((51, 51),(0.27, 0.66)), ((52, 52),(0.25, 0.39)), ((53, 53),(0.02, 0.35)),
((54, 54),(0.26, 0.39)), ((55, 55),(0.35, 0.72)), ((56, 56),(0.06, 0.92)),
((57, 57),(0.56, 0.87)), ((58, 58),(0.9, 0.94)), ((59, 59),(0.12, 0.76)),
((60, 60),(0.2, 0.56)), ((61, 61),(0.59, 0.67)), ((62, 62),(0.13, 0.4)),
((63, 63),(0.36, 0.97)), ((64, 64),(0.31, 0.84)), ((65, 65),(0.15, 0.62)),
((66, 66),(0.6, 0.75)), ((67, 67),(0.24, 0.74)), ((68, 68),(0.23, 0.47)),
((69, 69),(0.5, 0.88)), ((70, 70),(0.44, 0.71)), ((71, 71),(0.11, 0.95)),
((72, 72),(0.34, 0.94)), ((73, 73),(0.37, 0.59)), ((74, 74),(0.02, 0.76)),
((75, 75),(0.19, 0.91)), ((76, 76),(0.51, 0.81)), ((77, 77),(0.66, 0.83)),
((78, 78),(0.23, 0.78)), ((79, 79),(0.4, 0.94)), ((80, 80),(0.64, 0.86)),
((81, 81),(0.54, 0.64)), ((82, 82),(0.67, 0.77)), ((83, 83),(0.5, 0.85)),
((84, 84),(0.74, 0.82)), ((85, 85),(0.14, 0.16)), ((86, 86),(0.35, 0.9)),
((87, 87),(0.62, 0.94)), ((88, 88),(0.43, 0.67)), ((89, 89),(0.41, 0.6)),
((90, 90),(0.37, 0.62)), ((91, 91),(0.23, 0.47)), ((92, 92),(0.57, 0.96)),
((93, 93),(0.08, 0.82)), ((94, 94),(0.04, 0.5)), ((95, 95),(0.36, 0.4)),
((96, 96),(0.64, 0.79)), ((97, 97),(0.65, 0.82)), ((98, 98),(0.38, 0.41)),
((99, 99),(0.06, 0.63))))
	 && y >= 0.0 && y <= 1.0 && y.size(100)
	 && y.specV(Set(((0, 0),(0.52, 0.8)), ((1, 1),(0.2, 0.48)), ((2, 2),(0.12, 0.51)),
((3, 3),(0.51, 0.72)), ((4, 4),(0.02, 0.36)), ((5, 5),(0.39, 0.99)),
((6, 6),(0.93, 0.98)), ((7, 7),(0.08, 0.71)), ((8, 8),(0.63, 0.9)),
((9, 9),(0.46, 0.88)), ((10, 10),(0.19, 0.81)), ((11, 11),(0.33, 0.63)),
((12, 12),(0.57, 0.9)), ((13, 13),(0.07, 0.78)), ((14, 14),(0.28, 0.97)),
((15, 15),(0.5, 0.75)), ((16, 16),(0.28, 0.93)), ((17, 17),(0.08, 0.08)),
((18, 18),(0.16, 0.55)), ((19, 19),(0.24, 0.53)), ((20, 20),(0.37, 0.81)),
((21, 21),(0.14, 0.86)), ((22, 22),(0.03, 0.35)), ((23, 23),(0.73, 0.87)),
((24, 24),(0.69, 0.94)), ((25, 25),(0.08, 0.27)), ((26, 26),(0.48, 0.86)),
((27, 27),(0.04, 0.64)), ((28, 28),(0.06, 0.35)), ((29, 29),(0.25, 0.77)),
((30, 30),(0.13, 0.23)), ((31, 31),(0.37, 0.66)), ((32, 32),(0.24, 0.68)),
((33, 33),(0.17, 0.2)), ((34, 34),(0.05, 0.72)), ((35, 35),(0.1, 0.62)),
((36, 36),(0.27, 0.89)), ((37, 37),(0.35, 0.49)), ((38, 38),(0.43, 0.99)),
((39, 39),(0.1, 0.42)), ((40, 40),(0.03, 0.29)), ((41, 41),(0.24, 0.43)),
((42, 42),(0.06, 0.86)), ((43, 43),(0.1, 0.56)), ((44, 44),(0.41, 0.62)),
((45, 45),(0.62, 0.92)), ((46, 46),(0.16, 0.24)), ((47, 47),(0.3, 0.94)),
((48, 48),(0.63, 0.73)), ((49, 49),(0.23, 0.75)), ((50, 50),(0.12, 0.47)),
((51, 51),(0.57, 0.75)), ((52, 52),(0.82, 0.95)), ((53, 53),(0.45, 0.79)),
((54, 54),(0.13, 0.17)), ((55, 55),(0.77, 0.95)), ((56, 56),(0.39, 0.41)),
((57, 57),(0.3, 0.78)), ((58, 58),(0.74, 0.94)), ((59, 59),(0.27, 0.82)),
((60, 60),(0.17, 0.94)), ((61, 61),(0.93, 0.96)), ((62, 62),(0.02, 0.9)),
((63, 63),(0.5, 0.87)), ((64, 64),(0.11, 0.29)), ((65, 65),(0.6, 0.63)),
((66, 66),(0.7, 0.73)), ((67, 67),(0.32, 0.88)), ((68, 68),(0.19, 0.3)),
((69, 69),(0.17, 0.45)), ((70, 70),(0.11, 0.11)), ((71, 71),(0.07, 0.23)),
((72, 72),(0.51, 0.57)), ((73, 73),(0.12, 0.77)), ((74, 74),(0.21, 0.22)),
((75, 75),(0.02, 0.6)), ((76, 76),(0.68, 0.87)), ((77, 77),(0.15, 0.62)),
((78, 78),(0.69, 0.97)), ((79, 79),(0.09, 0.26)), ((80, 80),(0.15, 0.34)),
((81, 81),(0.56, 0.99)), ((82, 82),(0.1, 1.0)), ((83, 83),(0.31, 0.92)),
((84, 84),(0.01, 0.18)), ((85, 85),(0.09, 0.45)), ((86, 86),(0.38, 0.68)),
((87, 87),(0.51, 0.61)), ((88, 88),(0.18, 0.37)), ((89, 89),(0.43, 0.46)),
((90, 90),(0.86, 0.92)), ((91, 91),(0.37, 0.46)), ((92, 92),(0.01, 0.44)),
((93, 93),(0.01, 0.56)), ((94, 94),(0.07, 0.22)), ((95, 95),(0.72, 0.73)),
((96, 96),(0.51, 0.98)), ((97, 97),(0.35, 0.84)), ((98, 98),(0.23, 0.95)),
((99, 99),(0.14, 0.58))))
	)

        //x := x + 0.01 * (-x + 2*x*x + y*y)
        val x1: Real = y.fold(x.head)((acc: Real, yi: Real) => {acc + 0.01 * (-acc + 2*acc*acc + yi*yi)})
        //y := y + 0.01 * (-y + y*y)
        val y1: Real = x.fold(y.head)((acc: Real, xi: Real) => {acc + 0.01 * (-acc + acc*acc)})
        Vector(List(x1, y1))
    }


}