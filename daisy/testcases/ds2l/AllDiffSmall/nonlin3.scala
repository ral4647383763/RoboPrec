import daisy.lang._
import Real._
import daisy.lang.Vector._

object nonlin3 {

	def nonlin3(x: Vector, y: Vector): Vector = {
require(x >= 0.0 && x <= 1.0 && x.size(100)
	 && x.specV(Set(((0, 0),(0.38, 0.51)), ((1, 1),(0.27, 0.68)), ((2, 2),(0.53, 0.74)),
((3, 3),(0.61, 0.79)), ((4, 4),(0.33, 0.59)), ((5, 5),(0.29, 0.82)),
((6, 6),(0.8, 0.98)), ((7, 7),(0.28, 0.94)), ((8, 8),(0.05, 0.47)),
((9, 9),(0.06, 0.44)), ((10, 10),(0.09, 0.81)), ((11, 11),(0.39, 0.43)),
((12, 12),(0.0, 0.37)), ((13, 13),(0.17, 0.33)), ((14, 14),(0.19, 0.82)),
((15, 15),(0.55, 0.55)), ((16, 16),(0.2, 0.72)), ((17, 17),(0.39, 0.57)),
((18, 18),(0.41, 0.65)), ((19, 19),(0.09, 0.88)), ((20, 20),(0.44, 0.68)),
((21, 21),(0.6, 0.9)), ((22, 22),(0.24, 0.66)), ((23, 23),(0.1, 0.95)),
((24, 24),(0.89, 0.95)), ((25, 25),(0.39, 0.77)), ((26, 26),(0.47, 0.63)),
((27, 27),(0.12, 0.66)), ((28, 28),(0.08, 0.56)), ((29, 29),(0.23, 0.31)),
((30, 30),(0.39, 0.71)), ((31, 31),(0.11, 0.44)), ((32, 32),(0.19, 0.44)),
((33, 33),(0.36, 0.66)), ((34, 34),(0.22, 0.94)), ((35, 35),(0.43, 0.61)),
((36, 36),(0.27, 0.56)), ((37, 37),(0.12, 0.65)), ((38, 38),(0.4, 1.0)),
((39, 39),(0.37, 0.69)), ((40, 40),(0.3, 0.49)), ((41, 41),(0.35, 0.59)),
((42, 42),(0.31, 0.67)), ((43, 43),(0.71, 0.78)), ((44, 44),(0.02, 0.94)),
((45, 45),(0.23, 0.41)), ((46, 46),(0.51, 0.92)), ((47, 47),(0.68, 0.95)),
((48, 48),(0.5, 0.99)), ((49, 49),(0.24, 0.7)), ((50, 50),(0.4, 0.46)),
((51, 51),(0.16, 0.66)), ((52, 52),(0.4, 0.89)), ((53, 53),(0.14, 0.33)),
((54, 54),(0.27, 0.86)), ((55, 55),(0.24, 0.5)), ((56, 56),(0.24, 0.26)),
((57, 57),(0.55, 0.7)), ((58, 58),(0.26, 0.45)), ((59, 59),(0.22, 0.73)),
((60, 60),(0.18, 0.23)), ((61, 61),(0.2, 0.21)), ((62, 62),(0.44, 0.49)),
((63, 63),(0.18, 0.74)), ((64, 64),(0.12, 0.77)), ((65, 65),(0.14, 0.79)),
((66, 66),(0.15, 0.29)), ((67, 67),(0.54, 0.63)), ((68, 68),(0.59, 0.98)),
((69, 69),(0.12, 0.19)), ((70, 70),(0.07, 0.8)), ((71, 71),(0.2, 0.66)),
((72, 72),(0.01, 0.17)), ((73, 73),(0.52, 0.69)), ((74, 74),(0.42, 0.76)),
((75, 75),(0.13, 0.91)), ((76, 76),(0.2, 0.94)), ((77, 77),(0.64, 0.65)),
((78, 78),(0.36, 0.99)), ((79, 79),(0.91, 0.93)), ((80, 80),(0.07, 0.62)),
((81, 81),(0.38, 0.47)), ((82, 82),(0.3, 0.55)), ((83, 83),(0.35, 0.48)),
((84, 84),(0.33, 0.6)), ((85, 85),(0.77, 0.9)), ((86, 86),(0.31, 0.69)),
((87, 87),(0.08, 0.65)), ((88, 88),(0.62, 0.75)), ((89, 89),(0.39, 0.85)),
((90, 90),(0.02, 0.44)), ((91, 91),(0.45, 0.92)), ((92, 92),(0.04, 0.78)),
((93, 93),(0.12, 0.47)), ((94, 94),(0.03, 0.61)), ((95, 95),(0.41, 0.72)),
((96, 96),(0.3, 0.39)), ((97, 97),(0.03, 0.72)), ((98, 98),(0.3, 0.94)),
((99, 99),(0.03, 0.89))))
	 && y >= 0.0 && y <= 1.0 && y.size(100)
	 && y.specV(Set(((0, 0),(0.25, 0.45)), ((1, 1),(0.53, 0.69)), ((2, 2),(0.62, 0.83)),
((3, 3),(0.08, 0.71)), ((4, 4),(0.03, 0.06)), ((5, 5),(0.25, 0.29)),
((6, 6),(0.1, 0.51)), ((7, 7),(0.81, 0.93)), ((8, 8),(0.16, 0.6)),
((9, 9),(0.76, 0.9)), ((10, 10),(0.58, 0.62)), ((11, 11),(0.39, 0.65)),
((12, 12),(0.02, 0.98)), ((13, 13),(0.37, 0.94)), ((14, 14),(0.18, 0.52)),
((15, 15),(0.61, 0.69)), ((16, 16),(0.07, 0.83)), ((17, 17),(0.14, 0.78)),
((18, 18),(0.0, 0.64)), ((19, 19),(0.44, 0.48)), ((20, 20),(0.44, 0.66)),
((21, 21),(0.61, 0.68)), ((22, 22),(0.56, 0.92)), ((23, 23),(0.29, 0.63)),
((24, 24),(0.09, 0.83)), ((25, 25),(0.17, 0.86)), ((26, 26),(0.26, 0.54)),
((27, 27),(0.41, 0.5)), ((28, 28),(0.29, 0.95)), ((29, 29),(0.05, 0.46)),
((30, 30),(0.48, 0.81)), ((31, 31),(0.5, 0.98)), ((32, 32),(0.26, 0.65)),
((33, 33),(0.04, 0.42)), ((34, 34),(0.55, 0.75)), ((35, 35),(0.12, 0.66)),
((36, 36),(0.67, 0.99)), ((37, 37),(0.14, 0.51)), ((38, 38),(0.77, 0.77)),
((39, 39),(0.06, 0.2)), ((40, 40),(0.2, 0.52)), ((41, 41),(0.45, 0.51)),
((42, 42),(0.02, 0.55)), ((43, 43),(0.43, 0.47)), ((44, 44),(0.33, 0.41)),
((45, 45),(0.13, 0.98)), ((46, 46),(0.02, 0.28)), ((47, 47),(0.39, 0.91)),
((48, 48),(0.35, 0.56)), ((49, 49),(0.76, 0.82)), ((50, 50),(0.08, 0.7)),
((51, 51),(0.5, 0.51)), ((52, 52),(0.09, 0.31)), ((53, 53),(0.49, 0.76)),
((54, 54),(0.23, 0.4)), ((55, 55),(0.06, 0.83)), ((56, 56),(0.23, 0.37)),
((57, 57),(0.75, 0.82)), ((58, 58),(0.13, 0.56)), ((59, 59),(0.41, 0.96)),
((60, 60),(0.3, 0.97)), ((61, 61),(0.16, 0.86)), ((62, 62),(0.23, 0.75)),
((63, 63),(0.51, 0.84)), ((64, 64),(0.13, 0.69)), ((65, 65),(0.26, 0.54)),
((66, 66),(0.33, 0.46)), ((67, 67),(0.28, 0.66)), ((68, 68),(0.29, 0.34)),
((69, 69),(0.46, 0.82)), ((70, 70),(0.42, 0.45)), ((71, 71),(0.36, 0.65)),
((72, 72),(0.63, 0.83)), ((73, 73),(0.02, 0.68)), ((74, 74),(0.19, 0.55)),
((75, 75),(0.17, 0.24)), ((76, 76),(0.32, 0.91)), ((77, 77),(0.31, 0.38)),
((78, 78),(0.23, 0.58)), ((79, 79),(0.18, 0.84)), ((80, 80),(0.32, 0.48)),
((81, 81),(0.76, 0.77)), ((82, 82),(0.5, 0.88)), ((83, 83),(0.14, 0.16)),
((84, 84),(0.85, 0.94)), ((85, 85),(0.19, 0.66)), ((86, 86),(0.25, 0.8)),
((87, 87),(0.02, 0.8)), ((88, 88),(0.02, 0.78)), ((89, 89),(0.11, 0.61)),
((90, 90),(0.05, 0.35)), ((91, 91),(0.52, 0.83)), ((92, 92),(0.58, 0.6)),
((93, 93),(0.67, 0.76)), ((94, 94),(0.58, 0.79)), ((95, 95),(0.08, 0.68)),
((96, 96),(0.39, 0.43)), ((97, 97),(0.15, 0.83)), ((98, 98),(0.73, 0.75)),
((99, 99),(0.65, 0.67))))
	)

        //x := x + 0.01 * (-x + y*y)
        val x1: Real = y.fold(x.head)((acc: Real, yi: Real) => {acc + 0.01 * (-acc + yi*yi)})
        //y := y + 0.01 * (-2.0*y + 3.0*x*x)
        val y1: Real = x.fold(y.head)((acc: Real, xi: Real) => {acc + 0.01 * (-2.0*acc + 3.0*xi*xi)})
        Vector(List(x1, y1))
    }


}