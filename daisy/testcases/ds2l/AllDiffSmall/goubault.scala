import daisy.lang._
import Real._
import daisy.lang.Vector._

object goubault {

	def goubault(x:Vector, y: Real): Real = {
require(54.86 <= y && y <= 359.03
	 && x >= -270.01 && x <= 385.38 && x.size(100)
	 && x.specV(Set(((0, 0),(-91.53, 21.6)), ((1, 1),(-85.38, 237.4)), ((2, 2),(-2.96, 149.83)),
((3, 3),(-149.94, 68.8)), ((4, 4),(355.14, 368.84)), ((5, 5),(62.73, 381.26)),
((6, 6),(50.53, 102.28)), ((7, 7),(57.2, 61.98)), ((8, 8),(-73.51, 373.75)),
((9, 9),(-145.25, 100.95)), ((10, 10),(-138.24, 368.19)), ((11, 11),(89.44, 103.25)),
((12, 12),(68.2, 329.43)), ((13, 13),(8.34, 249.35)), ((14, 14),(-74.11, 145.45)),
((15, 15),(-36.22, 73.59)), ((16, 16),(-147.33, -141.76)), ((17, 17),(-48.59, 33.11)),
((18, 18),(90.98, 104.18)), ((19, 19),(161.18, 207.13)), ((20, 20),(-178.95, -20.35)),
((21, 21),(-128.04, -104.59)), ((22, 22),(299.79, 378.08)), ((23, 23),(-199.22, 125.08)),
((24, 24),(-49.4, 100.41)), ((25, 25),(284.94, 382.59)), ((26, 26),(-20.5, 309.11)),
((27, 27),(-221.35, 189.04)), ((28, 28),(-16.04, 288.83)), ((29, 29),(-92.52, 344.94)),
((30, 30),(282.35, 317.78)), ((31, 31),(-256.43, 31.93)), ((32, 32),(-244.2, 51.1)),
((33, 33),(140.69, 284.74)), ((34, 34),(-206.82, -77.12)), ((35, 35),(-24.01, 108.65)),
((36, 36),(-139.92, 114.25)), ((37, 37),(-101.61, 204.6)), ((38, 38),(-233.75, 377.91)),
((39, 39),(3.12, 356.81)), ((40, 40),(-201.21, -163.83)), ((41, 41),(211.03, 358.98)),
((42, 42),(-64.53, 198.74)), ((43, 43),(-57.11, 84.44)), ((44, 44),(239.48, 267.15)),
((45, 45),(39.29, 346.59)), ((46, 46),(142.32, 300.46)), ((47, 47),(-78.81, 135.02)),
((48, 48),(-155.86, -114.43)), ((49, 49),(57.9, 216.86)), ((50, 50),(127.23, 341.69)),
((51, 51),(260.58, 341.55)), ((52, 52),(-134.18, 79.81)), ((53, 53),(65.38, 151.11)),
((54, 54),(175.03, 301.97)), ((55, 55),(227.58, 286.52)), ((56, 56),(-4.99, 277.29)),
((57, 57),(-113.23, -44.27)), ((58, 58),(140.84, 292.38)), ((59, 59),(81.34, 333.26)),
((60, 60),(-217.76, 262.07)), ((61, 61),(84.9, 207.38)), ((62, 62),(-20.21, 198.91)),
((63, 63),(257.33, 321.08)), ((64, 64),(-94.21, 190.73)), ((65, 65),(-203.88, -203.73)),
((66, 66),(91.93, 141.37)), ((67, 67),(-221.29, -221.0)), ((68, 68),(-92.8, 95.68)),
((69, 69),(27.24, 169.24)), ((70, 70),(174.17, 272.7)), ((71, 71),(-79.12, -77.74)),
((72, 72),(-184.7, 103.78)), ((73, 73),(145.4, 361.68)), ((74, 74),(-183.48, -129.86)),
((75, 75),(-80.06, 225.13)), ((76, 76),(161.34, 270.35)), ((77, 77),(244.43, 305.79)),
((78, 78),(-33.51, 223.44)), ((79, 79),(55.45, 333.63)), ((80, 80),(-86.53, 145.61)),
((81, 81),(-76.49, -30.33)), ((82, 82),(-263.17, -45.35)), ((83, 83),(-83.11, 258.01)),
((84, 84),(-39.67, 351.59)), ((85, 85),(-18.06, 20.5)), ((86, 86),(-253.83, -128.58)),
((87, 87),(-100.69, 244.26)), ((88, 88),(88.77, 346.73)), ((89, 89),(198.86, 306.21)),
((90, 90),(115.19, 361.53)), ((91, 91),(82.94, 276.72)), ((92, 92),(83.94, 296.3)),
((93, 93),(-16.49, 116.31)), ((94, 94),(141.74, 373.06)), ((95, 95),(-66.16, 183.53)),
((96, 96),(-259.18, -249.49)), ((97, 97),(-231.45, 281.5)), ((98, 98),(-248.72, -110.18)),
((99, 99),(-190.52, 326.24))))
	)

        x.fold(y)((acc: Real, xi: Real) => {0.75 * xi - 0.125 * acc})
    }


}