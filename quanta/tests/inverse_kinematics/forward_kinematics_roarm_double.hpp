#include <math.h>
#include "inverse_kinematics_config.hpp"


#include <math.h>
#include <iostream>


/* @pre: ((qsin_0_0 > -1.0) && (qsin_0_0 < 1.0) && (qsin_1_0 > -1.0) && (qsin_1_0 < 1.0) && (qsin_2_0 > -1.0) && (qsin_2_0 < 1.0) && (qsin_3_0 > -1.0) && (qsin_3_0 < -0.06973600721660397) && (qsin_4_0 > -1.0) && (qsin_4_0 < 1.0) && (qcos_0_0 > -0.970308653605208) && (qcos_0_0 < 1.0) && (qcos_1_0 > -0.19082613012676472) && (qcos_1_0 < 1.0) && (qcos_2_0 > -0.970308653605208) && (qcos_2_0 < 1.0) && (qcos_3_0 > -0.9975654812078683) && (qcos_3_0 < 0.9975649688716339) && (qcos_4_0 > -0.970308653605208) && (qcos_4_0 < 1.0) && (v_0_0 > -0.5) && (v_0_0 < 0.5) && (v_1_0 > -0.5) && (v_1_0 < 0.5) && (v_2_0 > -0.5) && (v_2_0 < 0.5) && (v_3_0 > -0.5) && (v_3_0 < 0.5) && (v_4_0 > -0.5) && (v_4_0 < 0.5) && (a_0_0 > -1.0) && (a_0_0 < 1.0) && (a_1_0 > -1.0) && (a_1_0 < 1.0) && (a_2_0 > -1.0) && (a_2_0 < 1.0) && (a_3_0 > -1.0) && (a_3_0 < 1.0) && (a_4_0 > -1.0) && (a_4_0 < 1.0)) */
SE3s ForwardKinematics(
    double qcos_0_0, double qcos_1_0, double qcos_2_0, double qcos_3_0, double qcos_4_0, 
    double qsin_0_0, double qsin_1_0, double qsin_2_0, double qsin_3_0, double qsin_4_0, 
    double v_0_0, double v_1_0, double v_2_0, double v_3_0, double v_4_0, 
    double a_0_0, double a_1_0, double a_2_0, double a_3_0, double a_4_0
) {
    double r_1_0_0 = 0;
    double r_1_1_0 = 0;
    double r_1_2_0 = 0;
    double limi_translation_0_0_0 = r_1_0_0;
    double limi_translation_0_1_0 = r_1_1_0;
    double limi_translation_0_2_0 = r_1_2_0;
    double r_2_0_0 = 0;
    double r_2_1_0 = 0;
    double r_2_2_0 = 0.051959;
    double limi_translation_1_0_0 = r_2_0_0;
    double limi_translation_1_1_0 = r_2_1_0;
    double limi_translation_1_2_0 = r_2_2_0;
    double r_3_0_0 = 0.236815;
    double r_3_1_0 = 0.030002;
    double r_3_2_0 = 0;
    double limi_translation_2_0_0 = r_3_0_0;
    double limi_translation_2_1_0 = r_3_1_0;
    double limi_translation_2_2_0 = r_3_2_0;
    double r_4_0_0 = 0;
    double r_4_1_0 = -0.144586;
    double r_4_2_0 = 0;
    double limi_translation_3_0_0 = r_4_0_0;
    double limi_translation_3_1_0 = r_4_1_0;
    double limi_translation_3_2_0 = r_4_2_0;
    double r_5_0_0 = 0.015147;
    double r_5_1_0 = -0.053653;
    double r_5_2_0 = 0;
    double limi_translation_4_0_0 = r_5_0_0;
    double limi_translation_4_1_0 = r_5_1_0;
    double limi_translation_4_2_0 = r_5_2_0;
    double r_6_0_0 = 0;
    double r_6_1_0 = 0;
    double r_6_2_0 = 0.037;
    double lever_0_0_0 = r_6_0_0;
    double lever_0_1_0 = r_6_1_0;
    double lever_0_2_0 = r_6_2_0;
    double r_7_0_0 = 0.119;
    double r_7_1_0 = 0.012247;
    double r_7_2_0 = -1.0E-4;
    double lever_1_0_0 = r_7_0_0;
    double lever_1_1_0 = r_7_1_0;
    double lever_1_2_0 = r_7_2_0;
    double r_8_0_0 = -0.0015;
    double r_8_1_0 = -0.0765;
    double r_8_2_0 = 0.00505;
    double lever_2_0_0 = r_8_0_0;
    double lever_2_1_0 = r_8_1_0;
    double lever_2_2_0 = r_8_2_0;
    double r_9_0_0 = -0.0015;
    double r_9_1_0 = -0.022;
    double r_9_2_0 = -7.5E-4;
    double lever_3_0_0 = r_9_0_0;
    double lever_3_1_0 = r_9_1_0;
    double lever_3_2_0 = r_9_2_0;
    double r_10_0_0 = -0.0078;
    double r_10_1_0 = 0;
    double r_10_2_0 = 0.0595;
    double lever_4_0_0 = r_10_0_0;
    double lever_4_1_0 = r_10_1_0;
    double lever_4_2_0 = r_10_2_0;
    double r_11_0_0 = 0.0729177;
    double r_11_1_0 = 0.0703216;
    double r_11_2_0 = 0.021608;
    double r_11_3_0 = 0.0099933;
    double r_11_4_0 = 0.0153928;
    double masses_0_0 = r_11_0_0;
    double masses_1_0 = r_11_1_0;
    double masses_2_0 = r_11_2_0;
    double masses_3_0 = r_11_3_0;
    double masses_4_0 = r_11_4_0;
    double r_12_0_0 = 4.68465E-5;
    double r_12_0_1 = 0;
    double r_12_0_2 = 0;
    double r_12_1_0 = 0;
    double r_12_1_1 = 3.32107E-5;
    double r_12_1_2 = 0;
    double r_12_2_0 = 0;
    double r_12_2_1 = 0;
    double r_12_2_2 = 5.01023E-5;
    double inertia_0_0_0 = r_12_0_0;
    double inertia_0_0_1 = r_12_0_1;
    double inertia_0_0_2 = r_12_0_2;
    double inertia_0_1_0 = r_12_1_0;
    double inertia_0_1_1 = r_12_1_1;
    double inertia_0_1_2 = r_12_1_2;
    double inertia_0_2_0 = r_12_2_0;
    double inertia_0_2_1 = r_12_2_1;
    double inertia_0_2_2 = r_12_2_2;
    double r_13_0_0 = 5.46501E-5;
    double r_13_0_1 = 0;
    double r_13_0_2 = 0;
    double r_13_1_0 = 0;
    double r_13_1_1 = 4.23091E-4;
    double r_13_1_2 = 0;
    double r_13_2_0 = 0;
    double r_13_2_1 = 0;
    double r_13_2_2 = 4.04557E-4;
    double inertia_1_0_0 = r_13_0_0;
    double inertia_1_0_1 = r_13_0_1;
    double inertia_1_0_2 = r_13_0_2;
    double inertia_1_1_0 = r_13_1_0;
    double inertia_1_1_1 = r_13_1_1;
    double inertia_1_1_2 = r_13_1_2;
    double inertia_1_2_0 = r_13_2_0;
    double inertia_1_2_1 = r_13_2_1;
    double inertia_1_2_2 = r_13_2_2;
    double r_14_0_0 = 6.37699E-5;
    double r_14_0_1 = 0;
    double r_14_0_2 = 0;
    double r_14_1_0 = 0;
    double r_14_1_1 = 3.67026E-6;
    double r_14_1_2 = 0;
    double r_14_2_0 = 0;
    double r_14_2_1 = 0;
    double r_14_2_2 = 6.28965E-5;
    double inertia_2_0_0 = r_14_0_0;
    double inertia_2_0_1 = r_14_0_1;
    double inertia_2_0_2 = r_14_0_2;
    double inertia_2_1_0 = r_14_1_0;
    double inertia_2_1_1 = r_14_1_1;
    double inertia_2_1_2 = r_14_1_2;
    double inertia_2_2_0 = r_14_2_0;
    double inertia_2_2_1 = r_14_2_1;
    double inertia_2_2_2 = r_14_2_2;
    double r_15_0_0 = 4.53979E-6;
    double r_15_0_1 = 0;
    double r_15_0_2 = 0;
    double r_15_1_0 = 0;
    double r_15_1_1 = 3.78103E-6;
    double r_15_1_2 = 0;
    double r_15_2_0 = 0;
    double r_15_2_1 = 0;
    double r_15_2_2 = 5.60238E-6;
    double inertia_3_0_0 = r_15_0_0;
    double inertia_3_0_1 = r_15_0_1;
    double inertia_3_0_2 = r_15_0_2;
    double inertia_3_1_0 = r_15_1_0;
    double inertia_3_1_1 = r_15_1_1;
    double inertia_3_1_2 = r_15_1_2;
    double inertia_3_2_0 = r_15_2_0;
    double inertia_3_2_1 = r_15_2_1;
    double inertia_3_2_2 = r_15_2_2;
    double r_16_0_0 = 2.02869E-5;
    double r_16_0_1 = 0;
    double r_16_0_2 = 0;
    double r_16_1_0 = 0;
    double r_16_1_1 = 2.14427E-5;
    double r_16_1_2 = 0;
    double r_16_2_0 = 0;
    double r_16_2_1 = 0;
    double r_16_2_2 = 4.39495E-6;
    double inertia_4_0_0 = r_16_0_0;
    double inertia_4_0_1 = r_16_0_1;
    double inertia_4_0_2 = r_16_0_2;
    double inertia_4_1_0 = r_16_1_0;
    double inertia_4_1_1 = r_16_1_1;
    double inertia_4_1_2 = r_16_1_2;
    double inertia_4_2_0 = r_16_2_0;
    double inertia_4_2_1 = r_16_2_1;
    double inertia_4_2_2 = r_16_2_2;
    double r_17_scalar_0_0 = qsin_0_0;
    double r_18_scalar_0_0 = qcos_0_0;
    double r_19_matrix_negate_0_0 = -(r_18_scalar_0_0);
    double r_20_0_0 = 0;
    double r_21_scalar_0_0 = qcos_0_0;
    double r_22_scalar_0_0 = qsin_0_0;
    double r_23_0_0 = 0;
    double r_24_0_0 = 0;
    double r_25_0_0 = 0;
    double r_26_0_0 = 0;
    double r_27_0_0 = r_17_scalar_0_0;
    double r_27_0_1 = r_19_matrix_negate_0_0;
    double r_27_0_2 = r_20_0_0;
    double r_27_1_0 = r_21_scalar_0_0;
    double r_27_1_1 = r_22_scalar_0_0;
    double r_27_1_2 = r_23_0_0;
    double r_27_2_0 = r_24_0_0;
    double r_27_2_1 = r_25_0_0;
    double r_27_2_2 = r_26_0_0;
    double r_28_scalar_0_0 = r_27_1_0;
    double r_29_scalar_0_0 = r_27_1_1;
    double r_30_matrix_negate_0_0 = -(r_29_scalar_0_0);
    double r_31_0_0 = 0;
    double r_32_scalar_0_0 = r_27_0_0;
    double r_33_scalar_0_0 = r_27_0_1;
    double r_34_matrix_negate_0_0 = -(r_33_scalar_0_0);
    double r_35_0_0 = 0;
    double r_36_0_0 = 0;
    double r_37_0_0 = 0;
    double r_38_0_0 = 1;
    double r_39_0_0 = r_28_scalar_0_0;
    double r_39_0_1 = r_30_matrix_negate_0_0;
    double r_39_0_2 = r_31_0_0;
    double r_39_1_0 = r_32_scalar_0_0;
    double r_39_1_1 = r_34_matrix_negate_0_0;
    double r_39_1_2 = r_35_0_0;
    double r_39_2_0 = r_36_0_0;
    double r_39_2_1 = r_37_0_0;
    double r_39_2_2 = r_38_0_0;
    double limi_rotation_0_0_0 = r_39_0_0;
    double limi_rotation_0_0_1 = r_39_0_1;
    double limi_rotation_0_0_2 = r_39_0_2;
    double limi_rotation_0_1_0 = r_39_1_0;
    double limi_rotation_0_1_1 = r_39_1_1;
    double limi_rotation_0_1_2 = r_39_1_2;
    double limi_rotation_0_2_0 = r_39_2_0;
    double limi_rotation_0_2_1 = r_39_2_1;
    double limi_rotation_0_2_2 = r_39_2_2;
    double r_40_0_0 = 0;
    double r_41_0_0 = 0;
    double r_42_0_0 = 0;
    double r_43_0_0 = 0;
    double r_44_0_0 = 0;
    double r_45_scalar_0_0 = v_0_0;
    double r_46_0_0 = r_40_0_0;
    double r_46_1_0 = r_41_0_0;
    double r_46_2_0 = r_42_0_0;
    double r_46_3_0 = r_43_0_0;
    double r_46_4_0 = r_44_0_0;
    double r_46_5_0 = r_45_scalar_0_0;
    double r_47_scalar_0_0 = v_0_0;
    double r_48_matrix_negate_0_0 = -(r_47_scalar_0_0);
    double r_49_scalar_0_0 = r_46_0_0;
    double r_50_scalar_0_0 = r_46_1_0;
    double r_51_scalar_0_0 = r_46_2_0;
    double r_52_0_0 = r_49_scalar_0_0;
    double r_52_1_0 = r_50_scalar_0_0;
    double r_52_2_0 = r_51_scalar_0_0;
    double r_53_scalar_0_0 = r_46_3_0;
    double r_54_scalar_0_0 = r_46_4_0;
    double r_55_scalar_0_0 = r_46_5_0;
    double r_56_0_0 = r_53_scalar_0_0;
    double r_56_1_0 = r_54_scalar_0_0;
    double r_56_2_0 = r_55_scalar_0_0;
    double r_57_matrix_negate_0_0 = -(r_48_matrix_negate_0_0);
    double r_58_scalar_0_0 = r_52_1_0;
    double r_59_mul_0_0 = (r_57_matrix_negate_0_0 * r_58_scalar_0_0);
    double r_60_scalar_0_0 = r_52_0_0;
    double r_61_mul_0_0 = (r_48_matrix_negate_0_0 * r_60_scalar_0_0);
    double r_62_0_0 = 0;
    double r_63_0_0 = r_59_mul_0_0;
    double r_63_1_0 = r_61_mul_0_0;
    double r_63_2_0 = r_62_0_0;
    double alpha_cross_linear_0_0_0 = r_63_0_0;
    double alpha_cross_linear_0_1_0 = r_63_1_0;
    double alpha_cross_linear_0_2_0 = r_63_2_0;
    double r_64_matrix_negate_0_0 = -(r_48_matrix_negate_0_0);
    double r_65_scalar_0_0 = r_56_1_0;
    double r_66_mul_0_0 = (r_64_matrix_negate_0_0 * r_65_scalar_0_0);
    double r_67_scalar_0_0 = r_56_0_0;
    double r_68_mul_0_0 = (r_48_matrix_negate_0_0 * r_67_scalar_0_0);
    double r_69_0_0 = 0;
    double r_70_0_0 = r_66_mul_0_0;
    double r_70_1_0 = r_68_mul_0_0;
    double r_70_2_0 = r_69_0_0;
    double alpha_cross_angular_0_0_0 = r_70_0_0;
    double alpha_cross_angular_0_1_0 = r_70_1_0;
    double alpha_cross_angular_0_2_0 = r_70_2_0;
    double r_71_scalar_0_0 = alpha_cross_linear_0_0_0;
    double r_72_scalar_0_0 = alpha_cross_linear_0_1_0;
    double r_73_scalar_0_0 = alpha_cross_linear_0_2_0;
    double r_74_scalar_0_0 = alpha_cross_angular_0_0_0;
    double r_75_scalar_0_0 = alpha_cross_angular_0_1_0;
    double r_76_scalar_0_0 = alpha_cross_angular_0_2_0;
    double r_77_0_0 = r_71_scalar_0_0;
    double r_77_1_0 = r_72_scalar_0_0;
    double r_77_2_0 = r_73_scalar_0_0;
    double r_77_3_0 = r_74_scalar_0_0;
    double r_77_4_0 = r_75_scalar_0_0;
    double r_77_5_0 = r_76_scalar_0_0;
    double alpha_cross_0_0_0 = r_77_0_0;
    double alpha_cross_0_1_0 = r_77_1_0;
    double alpha_cross_0_2_0 = r_77_2_0;
    double alpha_cross_0_3_0 = r_77_3_0;
    double alpha_cross_0_4_0 = r_77_4_0;
    double alpha_cross_0_5_0 = r_77_5_0;
    double r_78_scalar_0_0 = a_0_0;
    double r_79_scalar_0_0 = alpha_cross_0_5_0;
    double r_80_add_0_0 = (r_78_scalar_0_0 + r_79_scalar_0_0);
    double r_81_scalar_0_0 = alpha_cross_0_0_0;
    double r_82_scalar_0_0 = alpha_cross_0_1_0;
    double r_83_scalar_0_0 = alpha_cross_0_2_0;
    double r_84_scalar_0_0 = alpha_cross_0_3_0;
    double r_85_scalar_0_0 = alpha_cross_0_4_0;
    double r_86_0_0 = r_81_scalar_0_0;
    double r_86_1_0 = r_82_scalar_0_0;
    double r_86_2_0 = r_83_scalar_0_0;
    double r_86_3_0 = r_84_scalar_0_0;
    double r_86_4_0 = r_85_scalar_0_0;
    double r_86_5_0 = r_80_add_0_0;
    double r_87_scalar_0_0 = qsin_1_0;
    double r_88_scalar_0_0 = qcos_1_0;
    double r_89_matrix_negate_0_0 = -(r_88_scalar_0_0);
    double r_90_0_0 = 0;
    double r_91_scalar_0_0 = qcos_1_0;
    double r_92_scalar_0_0 = qsin_1_0;
    double r_93_0_0 = 0;
    double r_94_0_0 = 0;
    double r_95_0_0 = 0;
    double r_96_0_0 = 0;
    double r_97_0_0 = r_87_scalar_0_0;
    double r_97_0_1 = r_89_matrix_negate_0_0;
    double r_97_0_2 = r_90_0_0;
    double r_97_1_0 = r_91_scalar_0_0;
    double r_97_1_1 = r_92_scalar_0_0;
    double r_97_1_2 = r_93_0_0;
    double r_97_2_0 = r_94_0_0;
    double r_97_2_1 = r_95_0_0;
    double r_97_2_2 = r_96_0_0;
    double r_98_scalar_0_0 = r_97_0_0;
    double r_99_scalar_0_0 = r_97_0_1;
    double r_100_matrix_negate_0_0 = -(r_99_scalar_0_0);
    double r_101_0_0 = 0;
    double r_102_0_0 = 0;
    double r_103_0_0 = 0;
    double r_104_0_0 = 1;
    double r_105_scalar_0_0 = r_97_1_0;
    double r_106_scalar_0_0 = r_97_1_1;
    double r_107_matrix_negate_0_0 = -(r_106_scalar_0_0);
    double r_108_0_0 = 0;
    double r_109_0_0 = r_98_scalar_0_0;
    double r_109_0_1 = r_100_matrix_negate_0_0;
    double r_109_0_2 = r_101_0_0;
    double r_109_1_0 = r_102_0_0;
    double r_109_1_1 = r_103_0_0;
    double r_109_1_2 = r_104_0_0;
    double r_109_2_0 = r_105_scalar_0_0;
    double r_109_2_1 = r_107_matrix_negate_0_0;
    double r_109_2_2 = r_108_0_0;
    double limi_rotation_1_0_0 = r_109_0_0;
    double limi_rotation_1_0_1 = r_109_0_1;
    double limi_rotation_1_0_2 = r_109_0_2;
    double limi_rotation_1_1_0 = r_109_1_0;
    double limi_rotation_1_1_1 = r_109_1_1;
    double limi_rotation_1_1_2 = r_109_1_2;
    double limi_rotation_1_2_0 = r_109_2_0;
    double limi_rotation_1_2_1 = r_109_2_1;
    double limi_rotation_1_2_2 = r_109_2_2;
    double r_110_mul_0_0 = (((limi_rotation_0_0_0 * limi_rotation_1_0_0) + (limi_rotation_0_0_1 * limi_rotation_1_1_0)) + (limi_rotation_0_0_2 * limi_rotation_1_2_0));
    double r_110_mul_0_1 = (((limi_rotation_0_0_0 * limi_rotation_1_0_1) + (limi_rotation_0_0_1 * limi_rotation_1_1_1)) + (limi_rotation_0_0_2 * limi_rotation_1_2_1));
    double r_110_mul_0_2 = (((limi_rotation_0_0_0 * limi_rotation_1_0_2) + (limi_rotation_0_0_1 * limi_rotation_1_1_2)) + (limi_rotation_0_0_2 * limi_rotation_1_2_2));
    double r_110_mul_1_0 = (((limi_rotation_0_1_0 * limi_rotation_1_0_0) + (limi_rotation_0_1_1 * limi_rotation_1_1_0)) + (limi_rotation_0_1_2 * limi_rotation_1_2_0));
    double r_110_mul_1_1 = (((limi_rotation_0_1_0 * limi_rotation_1_0_1) + (limi_rotation_0_1_1 * limi_rotation_1_1_1)) + (limi_rotation_0_1_2 * limi_rotation_1_2_1));
    double r_110_mul_1_2 = (((limi_rotation_0_1_0 * limi_rotation_1_0_2) + (limi_rotation_0_1_1 * limi_rotation_1_1_2)) + (limi_rotation_0_1_2 * limi_rotation_1_2_2));
    double r_110_mul_2_0 = (((limi_rotation_0_2_0 * limi_rotation_1_0_0) + (limi_rotation_0_2_1 * limi_rotation_1_1_0)) + (limi_rotation_0_2_2 * limi_rotation_1_2_0));
    double r_110_mul_2_1 = (((limi_rotation_0_2_0 * limi_rotation_1_0_1) + (limi_rotation_0_2_1 * limi_rotation_1_1_1)) + (limi_rotation_0_2_2 * limi_rotation_1_2_1));
    double r_110_mul_2_2 = (((limi_rotation_0_2_0 * limi_rotation_1_0_2) + (limi_rotation_0_2_1 * limi_rotation_1_1_2)) + (limi_rotation_0_2_2 * limi_rotation_1_2_2));
    double r_111_mul_0_0 = (((limi_rotation_0_0_0 * limi_translation_1_0_0) + (limi_rotation_0_0_1 * limi_translation_1_1_0)) + (limi_rotation_0_0_2 * limi_translation_1_2_0));
    double r_111_mul_1_0 = (((limi_rotation_0_1_0 * limi_translation_1_0_0) + (limi_rotation_0_1_1 * limi_translation_1_1_0)) + (limi_rotation_0_1_2 * limi_translation_1_2_0));
    double r_111_mul_2_0 = (((limi_rotation_0_2_0 * limi_translation_1_0_0) + (limi_rotation_0_2_1 * limi_translation_1_1_0)) + (limi_rotation_0_2_2 * limi_translation_1_2_0));
    double r_112_add_0_0 = (limi_translation_0_0_0 + r_111_mul_0_0);
    double r_112_add_1_0 = (limi_translation_0_1_0 + r_111_mul_1_0);
    double r_112_add_2_0 = (limi_translation_0_2_0 + r_111_mul_2_0);
    double r_113_0_0 = 0;
    double r_114_0_0 = 0;
    double r_115_0_0 = 0;
    double r_116_0_0 = 0;
    double r_117_0_0 = 0;
    double r_118_scalar_0_0 = v_1_0;
    double r_119_0_0 = r_113_0_0;
    double r_119_1_0 = r_114_0_0;
    double r_119_2_0 = r_115_0_0;
    double r_119_3_0 = r_116_0_0;
    double r_119_4_0 = r_117_0_0;
    double r_119_5_0 = r_118_scalar_0_0;
    double r_120_scalar_0_0 = r_46_0_0;
    double r_121_scalar_0_0 = r_46_1_0;
    double r_122_scalar_0_0 = r_46_2_0;
    double r_123_0_0 = r_120_scalar_0_0;
    double r_123_1_0 = r_121_scalar_0_0;
    double r_123_2_0 = r_122_scalar_0_0;
    double r_124_scalar_0_0 = r_46_3_0;
    double r_125_scalar_0_0 = r_46_4_0;
    double r_126_scalar_0_0 = r_46_5_0;
    double r_127_0_0 = r_124_scalar_0_0;
    double r_127_1_0 = r_125_scalar_0_0;
    double r_127_2_0 = r_126_scalar_0_0;
    double r_128_scalar_0_0 = r_119_0_0;
    double r_129_scalar_0_0 = r_119_1_0;
    double r_130_scalar_0_0 = r_119_2_0;
    double r_131_0_0 = r_128_scalar_0_0;
    double r_131_1_0 = r_129_scalar_0_0;
    double r_131_2_0 = r_130_scalar_0_0;
    double r_132_scalar_0_0 = r_119_3_0;
    double r_133_scalar_0_0 = r_119_4_0;
    double r_134_scalar_0_0 = r_119_5_0;
    double r_135_0_0 = r_132_scalar_0_0;
    double r_135_1_0 = r_133_scalar_0_0;
    double r_135_2_0 = r_134_scalar_0_0;
    double r_136_vector_cross_0_0 = ((limi_translation_1_1_0 * r_127_2_0) - (limi_translation_1_2_0 * r_127_1_0));
    double r_136_vector_cross_1_0 = ((limi_translation_1_2_0 * r_127_0_0) - (limi_translation_1_0_0 * r_127_2_0));
    double r_136_vector_cross_2_0 = ((limi_translation_1_0_0 * r_127_1_0) - (limi_translation_1_1_0 * r_127_0_0));
    double r_137_sub_0_0 = (r_123_0_0 - r_136_vector_cross_0_0);
    double r_137_sub_1_0 = (r_123_1_0 - r_136_vector_cross_1_0);
    double r_137_sub_2_0 = (r_123_2_0 - r_136_vector_cross_2_0);
    double r_138_transpose_0_0 = limi_rotation_1_0_0;
    double r_138_transpose_0_1 = limi_rotation_1_1_0;
    double r_138_transpose_0_2 = limi_rotation_1_2_0;
    double r_138_transpose_1_0 = limi_rotation_1_0_1;
    double r_138_transpose_1_1 = limi_rotation_1_1_1;
    double r_138_transpose_1_2 = limi_rotation_1_2_1;
    double r_138_transpose_2_0 = limi_rotation_1_0_2;
    double r_138_transpose_2_1 = limi_rotation_1_1_2;
    double r_138_transpose_2_2 = limi_rotation_1_2_2;
    double r_139_mul_0_0 = (((r_138_transpose_0_0 * r_137_sub_0_0) + (r_138_transpose_0_1 * r_137_sub_1_0)) + (r_138_transpose_0_2 * r_137_sub_2_0));
    double r_139_mul_1_0 = (((r_138_transpose_1_0 * r_137_sub_0_0) + (r_138_transpose_1_1 * r_137_sub_1_0)) + (r_138_transpose_1_2 * r_137_sub_2_0));
    double r_139_mul_2_0 = (((r_138_transpose_2_0 * r_137_sub_0_0) + (r_138_transpose_2_1 * r_137_sub_1_0)) + (r_138_transpose_2_2 * r_137_sub_2_0));
    double r_140_add_0_0 = (r_131_0_0 + r_139_mul_0_0);
    double r_140_add_1_0 = (r_131_1_0 + r_139_mul_1_0);
    double r_140_add_2_0 = (r_131_2_0 + r_139_mul_2_0);
    double r_141_mul_0_0 = (((r_138_transpose_0_0 * r_127_0_0) + (r_138_transpose_0_1 * r_127_1_0)) + (r_138_transpose_0_2 * r_127_2_0));
    double r_141_mul_1_0 = (((r_138_transpose_1_0 * r_127_0_0) + (r_138_transpose_1_1 * r_127_1_0)) + (r_138_transpose_1_2 * r_127_2_0));
    double r_141_mul_2_0 = (((r_138_transpose_2_0 * r_127_0_0) + (r_138_transpose_2_1 * r_127_1_0)) + (r_138_transpose_2_2 * r_127_2_0));
    double r_142_add_0_0 = (r_135_0_0 + r_141_mul_0_0);
    double r_142_add_1_0 = (r_135_1_0 + r_141_mul_1_0);
    double r_142_add_2_0 = (r_135_2_0 + r_141_mul_2_0);
    double r_143_scalar_0_0 = r_140_add_0_0;
    double r_144_scalar_0_0 = r_140_add_1_0;
    double r_145_scalar_0_0 = r_140_add_2_0;
    double r_146_scalar_0_0 = r_142_add_0_0;
    double r_147_scalar_0_0 = r_142_add_1_0;
    double r_148_scalar_0_0 = r_142_add_2_0;
    double r_149_0_0 = r_143_scalar_0_0;
    double r_149_1_0 = r_144_scalar_0_0;
    double r_149_2_0 = r_145_scalar_0_0;
    double r_149_3_0 = r_146_scalar_0_0;
    double r_149_4_0 = r_147_scalar_0_0;
    double r_149_5_0 = r_148_scalar_0_0;
    double act_motion_inv_1_0_0 = r_149_0_0;
    double act_motion_inv_1_1_0 = r_149_1_0;
    double act_motion_inv_1_2_0 = r_149_2_0;
    double act_motion_inv_1_3_0 = r_149_3_0;
    double act_motion_inv_1_4_0 = r_149_4_0;
    double act_motion_inv_1_5_0 = r_149_5_0;
    double r_150_scalar_0_0 = v_1_0;
    double r_151_matrix_negate_0_0 = -(r_150_scalar_0_0);
    double r_152_scalar_0_0 = act_motion_inv_1_0_0;
    double r_153_scalar_0_0 = act_motion_inv_1_1_0;
    double r_154_scalar_0_0 = act_motion_inv_1_2_0;
    double r_155_0_0 = r_152_scalar_0_0;
    double r_155_1_0 = r_153_scalar_0_0;
    double r_155_2_0 = r_154_scalar_0_0;
    double r_156_scalar_0_0 = act_motion_inv_1_3_0;
    double r_157_scalar_0_0 = act_motion_inv_1_4_0;
    double r_158_scalar_0_0 = act_motion_inv_1_5_0;
    double r_159_0_0 = r_156_scalar_0_0;
    double r_159_1_0 = r_157_scalar_0_0;
    double r_159_2_0 = r_158_scalar_0_0;
    double r_160_matrix_negate_0_0 = -(r_151_matrix_negate_0_0);
    double r_161_scalar_0_0 = r_155_1_0;
    double r_162_mul_0_0 = (r_160_matrix_negate_0_0 * r_161_scalar_0_0);
    double r_163_scalar_0_0 = r_155_0_0;
    double r_164_mul_0_0 = (r_151_matrix_negate_0_0 * r_163_scalar_0_0);
    double r_165_0_0 = 0;
    double r_166_0_0 = r_162_mul_0_0;
    double r_166_1_0 = r_164_mul_0_0;
    double r_166_2_0 = r_165_0_0;
    double alpha_cross_linear_1_0_0 = r_166_0_0;
    double alpha_cross_linear_1_1_0 = r_166_1_0;
    double alpha_cross_linear_1_2_0 = r_166_2_0;
    double r_167_matrix_negate_0_0 = -(r_151_matrix_negate_0_0);
    double r_168_scalar_0_0 = r_159_1_0;
    double r_169_mul_0_0 = (r_167_matrix_negate_0_0 * r_168_scalar_0_0);
    double r_170_scalar_0_0 = r_159_0_0;
    double r_171_mul_0_0 = (r_151_matrix_negate_0_0 * r_170_scalar_0_0);
    double r_172_0_0 = 0;
    double r_173_0_0 = r_169_mul_0_0;
    double r_173_1_0 = r_171_mul_0_0;
    double r_173_2_0 = r_172_0_0;
    double alpha_cross_angular_1_0_0 = r_173_0_0;
    double alpha_cross_angular_1_1_0 = r_173_1_0;
    double alpha_cross_angular_1_2_0 = r_173_2_0;
    double r_174_scalar_0_0 = alpha_cross_linear_1_0_0;
    double r_175_scalar_0_0 = alpha_cross_linear_1_1_0;
    double r_176_scalar_0_0 = alpha_cross_linear_1_2_0;
    double r_177_scalar_0_0 = alpha_cross_angular_1_0_0;
    double r_178_scalar_0_0 = alpha_cross_angular_1_1_0;
    double r_179_scalar_0_0 = alpha_cross_angular_1_2_0;
    double r_180_0_0 = r_174_scalar_0_0;
    double r_180_1_0 = r_175_scalar_0_0;
    double r_180_2_0 = r_176_scalar_0_0;
    double r_180_3_0 = r_177_scalar_0_0;
    double r_180_4_0 = r_178_scalar_0_0;
    double r_180_5_0 = r_179_scalar_0_0;
    double alpha_cross_1_0_0 = r_180_0_0;
    double alpha_cross_1_1_0 = r_180_1_0;
    double alpha_cross_1_2_0 = r_180_2_0;
    double alpha_cross_1_3_0 = r_180_3_0;
    double alpha_cross_1_4_0 = r_180_4_0;
    double alpha_cross_1_5_0 = r_180_5_0;
    double r_181_scalar_0_0 = a_1_0;
    double r_182_scalar_0_0 = alpha_cross_1_5_0;
    double r_183_add_0_0 = (r_181_scalar_0_0 + r_182_scalar_0_0);
    double r_184_scalar_0_0 = alpha_cross_1_0_0;
    double r_185_scalar_0_0 = alpha_cross_1_1_0;
    double r_186_scalar_0_0 = alpha_cross_1_2_0;
    double r_187_scalar_0_0 = alpha_cross_1_3_0;
    double r_188_scalar_0_0 = alpha_cross_1_4_0;
    double r_189_0_0 = r_184_scalar_0_0;
    double r_189_1_0 = r_185_scalar_0_0;
    double r_189_2_0 = r_186_scalar_0_0;
    double r_189_3_0 = r_187_scalar_0_0;
    double r_189_4_0 = r_188_scalar_0_0;
    double r_189_5_0 = r_183_add_0_0;
    double r_190_scalar_0_0 = r_86_0_0;
    double r_191_scalar_0_0 = r_86_1_0;
    double r_192_scalar_0_0 = r_86_2_0;
    double r_193_0_0 = r_190_scalar_0_0;
    double r_193_1_0 = r_191_scalar_0_0;
    double r_193_2_0 = r_192_scalar_0_0;
    double r_194_scalar_0_0 = r_86_3_0;
    double r_195_scalar_0_0 = r_86_4_0;
    double r_196_scalar_0_0 = r_86_5_0;
    double r_197_0_0 = r_194_scalar_0_0;
    double r_197_1_0 = r_195_scalar_0_0;
    double r_197_2_0 = r_196_scalar_0_0;
    double r_198_vector_cross_0_0 = ((limi_translation_1_1_0 * r_197_2_0) - (limi_translation_1_2_0 * r_197_1_0));
    double r_198_vector_cross_1_0 = ((limi_translation_1_2_0 * r_197_0_0) - (limi_translation_1_0_0 * r_197_2_0));
    double r_198_vector_cross_2_0 = ((limi_translation_1_0_0 * r_197_1_0) - (limi_translation_1_1_0 * r_197_0_0));
    double r_199_sub_0_0 = (r_193_0_0 - r_198_vector_cross_0_0);
    double r_199_sub_1_0 = (r_193_1_0 - r_198_vector_cross_1_0);
    double r_199_sub_2_0 = (r_193_2_0 - r_198_vector_cross_2_0);
    double r_200_transpose_0_0 = limi_rotation_1_0_0;
    double r_200_transpose_0_1 = limi_rotation_1_1_0;
    double r_200_transpose_0_2 = limi_rotation_1_2_0;
    double r_200_transpose_1_0 = limi_rotation_1_0_1;
    double r_200_transpose_1_1 = limi_rotation_1_1_1;
    double r_200_transpose_1_2 = limi_rotation_1_2_1;
    double r_200_transpose_2_0 = limi_rotation_1_0_2;
    double r_200_transpose_2_1 = limi_rotation_1_1_2;
    double r_200_transpose_2_2 = limi_rotation_1_2_2;
    double r_201_mul_0_0 = (((r_200_transpose_0_0 * r_199_sub_0_0) + (r_200_transpose_0_1 * r_199_sub_1_0)) + (r_200_transpose_0_2 * r_199_sub_2_0));
    double r_201_mul_1_0 = (((r_200_transpose_1_0 * r_199_sub_0_0) + (r_200_transpose_1_1 * r_199_sub_1_0)) + (r_200_transpose_1_2 * r_199_sub_2_0));
    double r_201_mul_2_0 = (((r_200_transpose_2_0 * r_199_sub_0_0) + (r_200_transpose_2_1 * r_199_sub_1_0)) + (r_200_transpose_2_2 * r_199_sub_2_0));
    double r_202_mul_0_0 = (((r_200_transpose_0_0 * r_197_0_0) + (r_200_transpose_0_1 * r_197_1_0)) + (r_200_transpose_0_2 * r_197_2_0));
    double r_202_mul_1_0 = (((r_200_transpose_1_0 * r_197_0_0) + (r_200_transpose_1_1 * r_197_1_0)) + (r_200_transpose_1_2 * r_197_2_0));
    double r_202_mul_2_0 = (((r_200_transpose_2_0 * r_197_0_0) + (r_200_transpose_2_1 * r_197_1_0)) + (r_200_transpose_2_2 * r_197_2_0));
    double r_203_scalar_0_0 = r_201_mul_0_0;
    double r_204_scalar_0_0 = r_201_mul_1_0;
    double r_205_scalar_0_0 = r_201_mul_2_0;
    double r_206_scalar_0_0 = r_202_mul_0_0;
    double r_207_scalar_0_0 = r_202_mul_1_0;
    double r_208_scalar_0_0 = r_202_mul_2_0;
    double r_209_0_0 = r_203_scalar_0_0;
    double r_209_1_0 = r_204_scalar_0_0;
    double r_209_2_0 = r_205_scalar_0_0;
    double r_209_3_0 = r_206_scalar_0_0;
    double r_209_4_0 = r_207_scalar_0_0;
    double r_209_5_0 = r_208_scalar_0_0;
    double act_inv_1_0_0 = r_209_0_0;
    double act_inv_1_1_0 = r_209_1_0;
    double act_inv_1_2_0 = r_209_2_0;
    double act_inv_1_3_0 = r_209_3_0;
    double act_inv_1_4_0 = r_209_4_0;
    double act_inv_1_5_0 = r_209_5_0;
    double r_210_add_0_0 = (r_189_0_0 + act_inv_1_0_0);
    double r_210_add_1_0 = (r_189_1_0 + act_inv_1_1_0);
    double r_210_add_2_0 = (r_189_2_0 + act_inv_1_2_0);
    double r_210_add_3_0 = (r_189_3_0 + act_inv_1_3_0);
    double r_210_add_4_0 = (r_189_4_0 + act_inv_1_4_0);
    double r_210_add_5_0 = (r_189_5_0 + act_inv_1_5_0);
    double r_211_scalar_0_0 = qsin_2_0;
    double r_212_scalar_0_0 = qcos_2_0;
    double r_213_matrix_negate_0_0 = -(r_212_scalar_0_0);
    double r_214_0_0 = 0;
    double r_215_scalar_0_0 = qcos_2_0;
    double r_216_scalar_0_0 = qsin_2_0;
    double r_217_0_0 = 0;
    double r_218_0_0 = 0;
    double r_219_0_0 = 0;
    double r_220_0_0 = 0;
    double r_221_0_0 = r_211_scalar_0_0;
    double r_221_0_1 = r_213_matrix_negate_0_0;
    double r_221_0_2 = r_214_0_0;
    double r_221_1_0 = r_215_scalar_0_0;
    double r_221_1_1 = r_216_scalar_0_0;
    double r_221_1_2 = r_217_0_0;
    double r_221_2_0 = r_218_0_0;
    double r_221_2_1 = r_219_0_0;
    double r_221_2_2 = r_220_0_0;
    double r_222_scalar_0_0 = r_221_1_1;
    double r_223_matrix_negate_0_0 = -(r_222_scalar_0_0);
    double r_224_scalar_0_0 = r_221_1_0;
    double r_225_matrix_negate_0_0 = -(r_224_scalar_0_0);
    double r_226_0_0 = 0;
    double r_227_scalar_0_0 = r_221_0_1;
    double r_228_matrix_negate_0_0 = -(r_227_scalar_0_0);
    double r_229_scalar_0_0 = r_221_0_0;
    double r_230_matrix_negate_0_0 = -(r_229_scalar_0_0);
    double r_231_0_0 = 0;
    double r_232_0_0 = 0;
    double r_233_0_0 = 0;
    double r_234_0_0 = 1;
    double r_235_0_0 = r_223_matrix_negate_0_0;
    double r_235_0_1 = r_225_matrix_negate_0_0;
    double r_235_0_2 = r_226_0_0;
    double r_235_1_0 = r_228_matrix_negate_0_0;
    double r_235_1_1 = r_230_matrix_negate_0_0;
    double r_235_1_2 = r_231_0_0;
    double r_235_2_0 = r_232_0_0;
    double r_235_2_1 = r_233_0_0;
    double r_235_2_2 = r_234_0_0;
    double limi_rotation_2_0_0 = r_235_0_0;
    double limi_rotation_2_0_1 = r_235_0_1;
    double limi_rotation_2_0_2 = r_235_0_2;
    double limi_rotation_2_1_0 = r_235_1_0;
    double limi_rotation_2_1_1 = r_235_1_1;
    double limi_rotation_2_1_2 = r_235_1_2;
    double limi_rotation_2_2_0 = r_235_2_0;
    double limi_rotation_2_2_1 = r_235_2_1;
    double limi_rotation_2_2_2 = r_235_2_2;
    double r_236_mul_0_0 = (((r_110_mul_0_0 * limi_rotation_2_0_0) + (r_110_mul_0_1 * limi_rotation_2_1_0)) + (r_110_mul_0_2 * limi_rotation_2_2_0));
    double r_236_mul_0_1 = (((r_110_mul_0_0 * limi_rotation_2_0_1) + (r_110_mul_0_1 * limi_rotation_2_1_1)) + (r_110_mul_0_2 * limi_rotation_2_2_1));
    double r_236_mul_0_2 = (((r_110_mul_0_0 * limi_rotation_2_0_2) + (r_110_mul_0_1 * limi_rotation_2_1_2)) + (r_110_mul_0_2 * limi_rotation_2_2_2));
    double r_236_mul_1_0 = (((r_110_mul_1_0 * limi_rotation_2_0_0) + (r_110_mul_1_1 * limi_rotation_2_1_0)) + (r_110_mul_1_2 * limi_rotation_2_2_0));
    double r_236_mul_1_1 = (((r_110_mul_1_0 * limi_rotation_2_0_1) + (r_110_mul_1_1 * limi_rotation_2_1_1)) + (r_110_mul_1_2 * limi_rotation_2_2_1));
    double r_236_mul_1_2 = (((r_110_mul_1_0 * limi_rotation_2_0_2) + (r_110_mul_1_1 * limi_rotation_2_1_2)) + (r_110_mul_1_2 * limi_rotation_2_2_2));
    double r_236_mul_2_0 = (((r_110_mul_2_0 * limi_rotation_2_0_0) + (r_110_mul_2_1 * limi_rotation_2_1_0)) + (r_110_mul_2_2 * limi_rotation_2_2_0));
    double r_236_mul_2_1 = (((r_110_mul_2_0 * limi_rotation_2_0_1) + (r_110_mul_2_1 * limi_rotation_2_1_1)) + (r_110_mul_2_2 * limi_rotation_2_2_1));
    double r_236_mul_2_2 = (((r_110_mul_2_0 * limi_rotation_2_0_2) + (r_110_mul_2_1 * limi_rotation_2_1_2)) + (r_110_mul_2_2 * limi_rotation_2_2_2));
    double r_237_mul_0_0 = (((r_110_mul_0_0 * limi_translation_2_0_0) + (r_110_mul_0_1 * limi_translation_2_1_0)) + (r_110_mul_0_2 * limi_translation_2_2_0));
    double r_237_mul_1_0 = (((r_110_mul_1_0 * limi_translation_2_0_0) + (r_110_mul_1_1 * limi_translation_2_1_0)) + (r_110_mul_1_2 * limi_translation_2_2_0));
    double r_237_mul_2_0 = (((r_110_mul_2_0 * limi_translation_2_0_0) + (r_110_mul_2_1 * limi_translation_2_1_0)) + (r_110_mul_2_2 * limi_translation_2_2_0));
    double r_238_add_0_0 = (r_112_add_0_0 + r_237_mul_0_0);
    double r_238_add_1_0 = (r_112_add_1_0 + r_237_mul_1_0);
    double r_238_add_2_0 = (r_112_add_2_0 + r_237_mul_2_0);
    double r_239_0_0 = 0;
    double r_240_0_0 = 0;
    double r_241_0_0 = 0;
    double r_242_0_0 = 0;
    double r_243_0_0 = 0;
    double r_244_scalar_0_0 = v_2_0;
    double r_245_0_0 = r_239_0_0;
    double r_245_1_0 = r_240_0_0;
    double r_245_2_0 = r_241_0_0;
    double r_245_3_0 = r_242_0_0;
    double r_245_4_0 = r_243_0_0;
    double r_245_5_0 = r_244_scalar_0_0;
    double r_246_scalar_0_0 = act_motion_inv_1_0_0;
    double r_247_scalar_0_0 = act_motion_inv_1_1_0;
    double r_248_scalar_0_0 = act_motion_inv_1_2_0;
    double r_249_0_0 = r_246_scalar_0_0;
    double r_249_1_0 = r_247_scalar_0_0;
    double r_249_2_0 = r_248_scalar_0_0;
    double r_250_scalar_0_0 = act_motion_inv_1_3_0;
    double r_251_scalar_0_0 = act_motion_inv_1_4_0;
    double r_252_scalar_0_0 = act_motion_inv_1_5_0;
    double r_253_0_0 = r_250_scalar_0_0;
    double r_253_1_0 = r_251_scalar_0_0;
    double r_253_2_0 = r_252_scalar_0_0;
    double r_254_scalar_0_0 = r_245_0_0;
    double r_255_scalar_0_0 = r_245_1_0;
    double r_256_scalar_0_0 = r_245_2_0;
    double r_257_0_0 = r_254_scalar_0_0;
    double r_257_1_0 = r_255_scalar_0_0;
    double r_257_2_0 = r_256_scalar_0_0;
    double r_258_scalar_0_0 = r_245_3_0;
    double r_259_scalar_0_0 = r_245_4_0;
    double r_260_scalar_0_0 = r_245_5_0;
    double r_261_0_0 = r_258_scalar_0_0;
    double r_261_1_0 = r_259_scalar_0_0;
    double r_261_2_0 = r_260_scalar_0_0;
    double r_262_vector_cross_0_0 = ((limi_translation_2_1_0 * r_253_2_0) - (limi_translation_2_2_0 * r_253_1_0));
    double r_262_vector_cross_1_0 = ((limi_translation_2_2_0 * r_253_0_0) - (limi_translation_2_0_0 * r_253_2_0));
    double r_262_vector_cross_2_0 = ((limi_translation_2_0_0 * r_253_1_0) - (limi_translation_2_1_0 * r_253_0_0));
    double r_263_sub_0_0 = (r_249_0_0 - r_262_vector_cross_0_0);
    double r_263_sub_1_0 = (r_249_1_0 - r_262_vector_cross_1_0);
    double r_263_sub_2_0 = (r_249_2_0 - r_262_vector_cross_2_0);
    double r_264_transpose_0_0 = limi_rotation_2_0_0;
    double r_264_transpose_0_1 = limi_rotation_2_1_0;
    double r_264_transpose_0_2 = limi_rotation_2_2_0;
    double r_264_transpose_1_0 = limi_rotation_2_0_1;
    double r_264_transpose_1_1 = limi_rotation_2_1_1;
    double r_264_transpose_1_2 = limi_rotation_2_2_1;
    double r_264_transpose_2_0 = limi_rotation_2_0_2;
    double r_264_transpose_2_1 = limi_rotation_2_1_2;
    double r_264_transpose_2_2 = limi_rotation_2_2_2;
    double r_265_mul_0_0 = (((r_264_transpose_0_0 * r_263_sub_0_0) + (r_264_transpose_0_1 * r_263_sub_1_0)) + (r_264_transpose_0_2 * r_263_sub_2_0));
    double r_265_mul_1_0 = (((r_264_transpose_1_0 * r_263_sub_0_0) + (r_264_transpose_1_1 * r_263_sub_1_0)) + (r_264_transpose_1_2 * r_263_sub_2_0));
    double r_265_mul_2_0 = (((r_264_transpose_2_0 * r_263_sub_0_0) + (r_264_transpose_2_1 * r_263_sub_1_0)) + (r_264_transpose_2_2 * r_263_sub_2_0));
    double r_266_add_0_0 = (r_257_0_0 + r_265_mul_0_0);
    double r_266_add_1_0 = (r_257_1_0 + r_265_mul_1_0);
    double r_266_add_2_0 = (r_257_2_0 + r_265_mul_2_0);
    double r_267_mul_0_0 = (((r_264_transpose_0_0 * r_253_0_0) + (r_264_transpose_0_1 * r_253_1_0)) + (r_264_transpose_0_2 * r_253_2_0));
    double r_267_mul_1_0 = (((r_264_transpose_1_0 * r_253_0_0) + (r_264_transpose_1_1 * r_253_1_0)) + (r_264_transpose_1_2 * r_253_2_0));
    double r_267_mul_2_0 = (((r_264_transpose_2_0 * r_253_0_0) + (r_264_transpose_2_1 * r_253_1_0)) + (r_264_transpose_2_2 * r_253_2_0));
    double r_268_add_0_0 = (r_261_0_0 + r_267_mul_0_0);
    double r_268_add_1_0 = (r_261_1_0 + r_267_mul_1_0);
    double r_268_add_2_0 = (r_261_2_0 + r_267_mul_2_0);
    double r_269_scalar_0_0 = r_266_add_0_0;
    double r_270_scalar_0_0 = r_266_add_1_0;
    double r_271_scalar_0_0 = r_266_add_2_0;
    double r_272_scalar_0_0 = r_268_add_0_0;
    double r_273_scalar_0_0 = r_268_add_1_0;
    double r_274_scalar_0_0 = r_268_add_2_0;
    double r_275_0_0 = r_269_scalar_0_0;
    double r_275_1_0 = r_270_scalar_0_0;
    double r_275_2_0 = r_271_scalar_0_0;
    double r_275_3_0 = r_272_scalar_0_0;
    double r_275_4_0 = r_273_scalar_0_0;
    double r_275_5_0 = r_274_scalar_0_0;
    double act_motion_inv_2_0_0 = r_275_0_0;
    double act_motion_inv_2_1_0 = r_275_1_0;
    double act_motion_inv_2_2_0 = r_275_2_0;
    double act_motion_inv_2_3_0 = r_275_3_0;
    double act_motion_inv_2_4_0 = r_275_4_0;
    double act_motion_inv_2_5_0 = r_275_5_0;
    double r_276_scalar_0_0 = v_2_0;
    double r_277_matrix_negate_0_0 = -(r_276_scalar_0_0);
    double r_278_scalar_0_0 = act_motion_inv_2_0_0;
    double r_279_scalar_0_0 = act_motion_inv_2_1_0;
    double r_280_scalar_0_0 = act_motion_inv_2_2_0;
    double r_281_0_0 = r_278_scalar_0_0;
    double r_281_1_0 = r_279_scalar_0_0;
    double r_281_2_0 = r_280_scalar_0_0;
    double r_282_scalar_0_0 = act_motion_inv_2_3_0;
    double r_283_scalar_0_0 = act_motion_inv_2_4_0;
    double r_284_scalar_0_0 = act_motion_inv_2_5_0;
    double r_285_0_0 = r_282_scalar_0_0;
    double r_285_1_0 = r_283_scalar_0_0;
    double r_285_2_0 = r_284_scalar_0_0;
    double r_286_matrix_negate_0_0 = -(r_277_matrix_negate_0_0);
    double r_287_scalar_0_0 = r_281_1_0;
    double r_288_mul_0_0 = (r_286_matrix_negate_0_0 * r_287_scalar_0_0);
    double r_289_scalar_0_0 = r_281_0_0;
    double r_290_mul_0_0 = (r_277_matrix_negate_0_0 * r_289_scalar_0_0);
    double r_291_0_0 = 0;
    double r_292_0_0 = r_288_mul_0_0;
    double r_292_1_0 = r_290_mul_0_0;
    double r_292_2_0 = r_291_0_0;
    double alpha_cross_linear_2_0_0 = r_292_0_0;
    double alpha_cross_linear_2_1_0 = r_292_1_0;
    double alpha_cross_linear_2_2_0 = r_292_2_0;
    double r_293_matrix_negate_0_0 = -(r_277_matrix_negate_0_0);
    double r_294_scalar_0_0 = r_285_1_0;
    double r_295_mul_0_0 = (r_293_matrix_negate_0_0 * r_294_scalar_0_0);
    double r_296_scalar_0_0 = r_285_0_0;
    double r_297_mul_0_0 = (r_277_matrix_negate_0_0 * r_296_scalar_0_0);
    double r_298_0_0 = 0;
    double r_299_0_0 = r_295_mul_0_0;
    double r_299_1_0 = r_297_mul_0_0;
    double r_299_2_0 = r_298_0_0;
    double alpha_cross_angular_2_0_0 = r_299_0_0;
    double alpha_cross_angular_2_1_0 = r_299_1_0;
    double alpha_cross_angular_2_2_0 = r_299_2_0;
    double r_300_scalar_0_0 = alpha_cross_linear_2_0_0;
    double r_301_scalar_0_0 = alpha_cross_linear_2_1_0;
    double r_302_scalar_0_0 = alpha_cross_linear_2_2_0;
    double r_303_scalar_0_0 = alpha_cross_angular_2_0_0;
    double r_304_scalar_0_0 = alpha_cross_angular_2_1_0;
    double r_305_scalar_0_0 = alpha_cross_angular_2_2_0;
    double r_306_0_0 = r_300_scalar_0_0;
    double r_306_1_0 = r_301_scalar_0_0;
    double r_306_2_0 = r_302_scalar_0_0;
    double r_306_3_0 = r_303_scalar_0_0;
    double r_306_4_0 = r_304_scalar_0_0;
    double r_306_5_0 = r_305_scalar_0_0;
    double alpha_cross_2_0_0 = r_306_0_0;
    double alpha_cross_2_1_0 = r_306_1_0;
    double alpha_cross_2_2_0 = r_306_2_0;
    double alpha_cross_2_3_0 = r_306_3_0;
    double alpha_cross_2_4_0 = r_306_4_0;
    double alpha_cross_2_5_0 = r_306_5_0;
    double r_307_scalar_0_0 = a_2_0;
    double r_308_scalar_0_0 = alpha_cross_2_5_0;
    double r_309_add_0_0 = (r_307_scalar_0_0 + r_308_scalar_0_0);
    double r_310_scalar_0_0 = alpha_cross_2_0_0;
    double r_311_scalar_0_0 = alpha_cross_2_1_0;
    double r_312_scalar_0_0 = alpha_cross_2_2_0;
    double r_313_scalar_0_0 = alpha_cross_2_3_0;
    double r_314_scalar_0_0 = alpha_cross_2_4_0;
    double r_315_0_0 = r_310_scalar_0_0;
    double r_315_1_0 = r_311_scalar_0_0;
    double r_315_2_0 = r_312_scalar_0_0;
    double r_315_3_0 = r_313_scalar_0_0;
    double r_315_4_0 = r_314_scalar_0_0;
    double r_315_5_0 = r_309_add_0_0;
    double r_316_scalar_0_0 = r_210_add_0_0;
    double r_317_scalar_0_0 = r_210_add_1_0;
    double r_318_scalar_0_0 = r_210_add_2_0;
    double r_319_0_0 = r_316_scalar_0_0;
    double r_319_1_0 = r_317_scalar_0_0;
    double r_319_2_0 = r_318_scalar_0_0;
    double r_320_scalar_0_0 = r_210_add_3_0;
    double r_321_scalar_0_0 = r_210_add_4_0;
    double r_322_scalar_0_0 = r_210_add_5_0;
    double r_323_0_0 = r_320_scalar_0_0;
    double r_323_1_0 = r_321_scalar_0_0;
    double r_323_2_0 = r_322_scalar_0_0;
    double r_324_vector_cross_0_0 = ((limi_translation_2_1_0 * r_323_2_0) - (limi_translation_2_2_0 * r_323_1_0));
    double r_324_vector_cross_1_0 = ((limi_translation_2_2_0 * r_323_0_0) - (limi_translation_2_0_0 * r_323_2_0));
    double r_324_vector_cross_2_0 = ((limi_translation_2_0_0 * r_323_1_0) - (limi_translation_2_1_0 * r_323_0_0));
    double r_325_sub_0_0 = (r_319_0_0 - r_324_vector_cross_0_0);
    double r_325_sub_1_0 = (r_319_1_0 - r_324_vector_cross_1_0);
    double r_325_sub_2_0 = (r_319_2_0 - r_324_vector_cross_2_0);
    double r_326_transpose_0_0 = limi_rotation_2_0_0;
    double r_326_transpose_0_1 = limi_rotation_2_1_0;
    double r_326_transpose_0_2 = limi_rotation_2_2_0;
    double r_326_transpose_1_0 = limi_rotation_2_0_1;
    double r_326_transpose_1_1 = limi_rotation_2_1_1;
    double r_326_transpose_1_2 = limi_rotation_2_2_1;
    double r_326_transpose_2_0 = limi_rotation_2_0_2;
    double r_326_transpose_2_1 = limi_rotation_2_1_2;
    double r_326_transpose_2_2 = limi_rotation_2_2_2;
    double r_327_mul_0_0 = (((r_326_transpose_0_0 * r_325_sub_0_0) + (r_326_transpose_0_1 * r_325_sub_1_0)) + (r_326_transpose_0_2 * r_325_sub_2_0));
    double r_327_mul_1_0 = (((r_326_transpose_1_0 * r_325_sub_0_0) + (r_326_transpose_1_1 * r_325_sub_1_0)) + (r_326_transpose_1_2 * r_325_sub_2_0));
    double r_327_mul_2_0 = (((r_326_transpose_2_0 * r_325_sub_0_0) + (r_326_transpose_2_1 * r_325_sub_1_0)) + (r_326_transpose_2_2 * r_325_sub_2_0));
    double r_328_mul_0_0 = (((r_326_transpose_0_0 * r_323_0_0) + (r_326_transpose_0_1 * r_323_1_0)) + (r_326_transpose_0_2 * r_323_2_0));
    double r_328_mul_1_0 = (((r_326_transpose_1_0 * r_323_0_0) + (r_326_transpose_1_1 * r_323_1_0)) + (r_326_transpose_1_2 * r_323_2_0));
    double r_328_mul_2_0 = (((r_326_transpose_2_0 * r_323_0_0) + (r_326_transpose_2_1 * r_323_1_0)) + (r_326_transpose_2_2 * r_323_2_0));
    double r_329_scalar_0_0 = r_327_mul_0_0;
    double r_330_scalar_0_0 = r_327_mul_1_0;
    double r_331_scalar_0_0 = r_327_mul_2_0;
    double r_332_scalar_0_0 = r_328_mul_0_0;
    double r_333_scalar_0_0 = r_328_mul_1_0;
    double r_334_scalar_0_0 = r_328_mul_2_0;
    double r_335_0_0 = r_329_scalar_0_0;
    double r_335_1_0 = r_330_scalar_0_0;
    double r_335_2_0 = r_331_scalar_0_0;
    double r_335_3_0 = r_332_scalar_0_0;
    double r_335_4_0 = r_333_scalar_0_0;
    double r_335_5_0 = r_334_scalar_0_0;
    double act_inv_2_0_0 = r_335_0_0;
    double act_inv_2_1_0 = r_335_1_0;
    double act_inv_2_2_0 = r_335_2_0;
    double act_inv_2_3_0 = r_335_3_0;
    double act_inv_2_4_0 = r_335_4_0;
    double act_inv_2_5_0 = r_335_5_0;
    double r_336_add_0_0 = (r_315_0_0 + act_inv_2_0_0);
    double r_336_add_1_0 = (r_315_1_0 + act_inv_2_1_0);
    double r_336_add_2_0 = (r_315_2_0 + act_inv_2_2_0);
    double r_336_add_3_0 = (r_315_3_0 + act_inv_2_3_0);
    double r_336_add_4_0 = (r_315_4_0 + act_inv_2_4_0);
    double r_336_add_5_0 = (r_315_5_0 + act_inv_2_5_0);
    double r_337_scalar_0_0 = qsin_3_0;
    double r_338_scalar_0_0 = qcos_3_0;
    double r_339_matrix_negate_0_0 = -(r_338_scalar_0_0);
    double r_340_0_0 = 0;
    double r_341_scalar_0_0 = qcos_3_0;
    double r_342_scalar_0_0 = qsin_3_0;
    double r_343_0_0 = 0;
    double r_344_0_0 = 0;
    double r_345_0_0 = 0;
    double r_346_0_0 = 0;
    double r_347_0_0 = r_337_scalar_0_0;
    double r_347_0_1 = r_339_matrix_negate_0_0;
    double r_347_0_2 = r_340_0_0;
    double r_347_1_0 = r_341_scalar_0_0;
    double r_347_1_1 = r_342_scalar_0_0;
    double r_347_1_2 = r_343_0_0;
    double r_347_2_0 = r_344_0_0;
    double r_347_2_1 = r_345_0_0;
    double r_347_2_2 = r_346_0_0;
    double r_348_scalar_0_0 = r_347_1_0;
    double r_349_scalar_0_0 = r_347_1_1;
    double r_350_matrix_negate_0_0 = -(r_349_scalar_0_0);
    double r_351_0_0 = 0;
    double r_352_scalar_0_0 = r_347_0_0;
    double r_353_scalar_0_0 = r_347_0_1;
    double r_354_matrix_negate_0_0 = -(r_353_scalar_0_0);
    double r_355_0_0 = 0;
    double r_356_0_0 = 0;
    double r_357_0_0 = 0;
    double r_358_0_0 = 1;
    double r_359_0_0 = r_348_scalar_0_0;
    double r_359_0_1 = r_350_matrix_negate_0_0;
    double r_359_0_2 = r_351_0_0;
    double r_359_1_0 = r_352_scalar_0_0;
    double r_359_1_1 = r_354_matrix_negate_0_0;
    double r_359_1_2 = r_355_0_0;
    double r_359_2_0 = r_356_0_0;
    double r_359_2_1 = r_357_0_0;
    double r_359_2_2 = r_358_0_0;
    double limi_rotation_3_0_0 = r_359_0_0;
    double limi_rotation_3_0_1 = r_359_0_1;
    double limi_rotation_3_0_2 = r_359_0_2;
    double limi_rotation_3_1_0 = r_359_1_0;
    double limi_rotation_3_1_1 = r_359_1_1;
    double limi_rotation_3_1_2 = r_359_1_2;
    double limi_rotation_3_2_0 = r_359_2_0;
    double limi_rotation_3_2_1 = r_359_2_1;
    double limi_rotation_3_2_2 = r_359_2_2;
    double r_360_mul_0_0 = (((r_236_mul_0_0 * limi_rotation_3_0_0) + (r_236_mul_0_1 * limi_rotation_3_1_0)) + (r_236_mul_0_2 * limi_rotation_3_2_0));
    double r_360_mul_0_1 = (((r_236_mul_0_0 * limi_rotation_3_0_1) + (r_236_mul_0_1 * limi_rotation_3_1_1)) + (r_236_mul_0_2 * limi_rotation_3_2_1));
    double r_360_mul_0_2 = (((r_236_mul_0_0 * limi_rotation_3_0_2) + (r_236_mul_0_1 * limi_rotation_3_1_2)) + (r_236_mul_0_2 * limi_rotation_3_2_2));
    double r_360_mul_1_0 = (((r_236_mul_1_0 * limi_rotation_3_0_0) + (r_236_mul_1_1 * limi_rotation_3_1_0)) + (r_236_mul_1_2 * limi_rotation_3_2_0));
    double r_360_mul_1_1 = (((r_236_mul_1_0 * limi_rotation_3_0_1) + (r_236_mul_1_1 * limi_rotation_3_1_1)) + (r_236_mul_1_2 * limi_rotation_3_2_1));
    double r_360_mul_1_2 = (((r_236_mul_1_0 * limi_rotation_3_0_2) + (r_236_mul_1_1 * limi_rotation_3_1_2)) + (r_236_mul_1_2 * limi_rotation_3_2_2));
    double r_360_mul_2_0 = (((r_236_mul_2_0 * limi_rotation_3_0_0) + (r_236_mul_2_1 * limi_rotation_3_1_0)) + (r_236_mul_2_2 * limi_rotation_3_2_0));
    double r_360_mul_2_1 = (((r_236_mul_2_0 * limi_rotation_3_0_1) + (r_236_mul_2_1 * limi_rotation_3_1_1)) + (r_236_mul_2_2 * limi_rotation_3_2_1));
    double r_360_mul_2_2 = (((r_236_mul_2_0 * limi_rotation_3_0_2) + (r_236_mul_2_1 * limi_rotation_3_1_2)) + (r_236_mul_2_2 * limi_rotation_3_2_2));
    double r_361_mul_0_0 = (((r_236_mul_0_0 * limi_translation_3_0_0) + (r_236_mul_0_1 * limi_translation_3_1_0)) + (r_236_mul_0_2 * limi_translation_3_2_0));
    double r_361_mul_1_0 = (((r_236_mul_1_0 * limi_translation_3_0_0) + (r_236_mul_1_1 * limi_translation_3_1_0)) + (r_236_mul_1_2 * limi_translation_3_2_0));
    double r_361_mul_2_0 = (((r_236_mul_2_0 * limi_translation_3_0_0) + (r_236_mul_2_1 * limi_translation_3_1_0)) + (r_236_mul_2_2 * limi_translation_3_2_0));
    double r_362_add_0_0 = (r_238_add_0_0 + r_361_mul_0_0);
    double r_362_add_1_0 = (r_238_add_1_0 + r_361_mul_1_0);
    double r_362_add_2_0 = (r_238_add_2_0 + r_361_mul_2_0);
    double r_363_0_0 = 0;
    double r_364_0_0 = 0;
    double r_365_0_0 = 0;
    double r_366_0_0 = 0;
    double r_367_0_0 = 0;
    double r_368_scalar_0_0 = v_3_0;
    double r_369_0_0 = r_363_0_0;
    double r_369_1_0 = r_364_0_0;
    double r_369_2_0 = r_365_0_0;
    double r_369_3_0 = r_366_0_0;
    double r_369_4_0 = r_367_0_0;
    double r_369_5_0 = r_368_scalar_0_0;
    double r_370_scalar_0_0 = act_motion_inv_2_0_0;
    double r_371_scalar_0_0 = act_motion_inv_2_1_0;
    double r_372_scalar_0_0 = act_motion_inv_2_2_0;
    double r_373_0_0 = r_370_scalar_0_0;
    double r_373_1_0 = r_371_scalar_0_0;
    double r_373_2_0 = r_372_scalar_0_0;
    double r_374_scalar_0_0 = act_motion_inv_2_3_0;
    double r_375_scalar_0_0 = act_motion_inv_2_4_0;
    double r_376_scalar_0_0 = act_motion_inv_2_5_0;
    double r_377_0_0 = r_374_scalar_0_0;
    double r_377_1_0 = r_375_scalar_0_0;
    double r_377_2_0 = r_376_scalar_0_0;
    double r_378_scalar_0_0 = r_369_0_0;
    double r_379_scalar_0_0 = r_369_1_0;
    double r_380_scalar_0_0 = r_369_2_0;
    double r_381_0_0 = r_378_scalar_0_0;
    double r_381_1_0 = r_379_scalar_0_0;
    double r_381_2_0 = r_380_scalar_0_0;
    double r_382_scalar_0_0 = r_369_3_0;
    double r_383_scalar_0_0 = r_369_4_0;
    double r_384_scalar_0_0 = r_369_5_0;
    double r_385_0_0 = r_382_scalar_0_0;
    double r_385_1_0 = r_383_scalar_0_0;
    double r_385_2_0 = r_384_scalar_0_0;
    double r_386_vector_cross_0_0 = ((limi_translation_3_1_0 * r_377_2_0) - (limi_translation_3_2_0 * r_377_1_0));
    double r_386_vector_cross_1_0 = ((limi_translation_3_2_0 * r_377_0_0) - (limi_translation_3_0_0 * r_377_2_0));
    double r_386_vector_cross_2_0 = ((limi_translation_3_0_0 * r_377_1_0) - (limi_translation_3_1_0 * r_377_0_0));
    double r_387_sub_0_0 = (r_373_0_0 - r_386_vector_cross_0_0);
    double r_387_sub_1_0 = (r_373_1_0 - r_386_vector_cross_1_0);
    double r_387_sub_2_0 = (r_373_2_0 - r_386_vector_cross_2_0);
    double r_388_transpose_0_0 = limi_rotation_3_0_0;
    double r_388_transpose_0_1 = limi_rotation_3_1_0;
    double r_388_transpose_0_2 = limi_rotation_3_2_0;
    double r_388_transpose_1_0 = limi_rotation_3_0_1;
    double r_388_transpose_1_1 = limi_rotation_3_1_1;
    double r_388_transpose_1_2 = limi_rotation_3_2_1;
    double r_388_transpose_2_0 = limi_rotation_3_0_2;
    double r_388_transpose_2_1 = limi_rotation_3_1_2;
    double r_388_transpose_2_2 = limi_rotation_3_2_2;
    double r_389_mul_0_0 = (((r_388_transpose_0_0 * r_387_sub_0_0) + (r_388_transpose_0_1 * r_387_sub_1_0)) + (r_388_transpose_0_2 * r_387_sub_2_0));
    double r_389_mul_1_0 = (((r_388_transpose_1_0 * r_387_sub_0_0) + (r_388_transpose_1_1 * r_387_sub_1_0)) + (r_388_transpose_1_2 * r_387_sub_2_0));
    double r_389_mul_2_0 = (((r_388_transpose_2_0 * r_387_sub_0_0) + (r_388_transpose_2_1 * r_387_sub_1_0)) + (r_388_transpose_2_2 * r_387_sub_2_0));
    double r_390_add_0_0 = (r_381_0_0 + r_389_mul_0_0);
    double r_390_add_1_0 = (r_381_1_0 + r_389_mul_1_0);
    double r_390_add_2_0 = (r_381_2_0 + r_389_mul_2_0);
    double r_391_mul_0_0 = (((r_388_transpose_0_0 * r_377_0_0) + (r_388_transpose_0_1 * r_377_1_0)) + (r_388_transpose_0_2 * r_377_2_0));
    double r_391_mul_1_0 = (((r_388_transpose_1_0 * r_377_0_0) + (r_388_transpose_1_1 * r_377_1_0)) + (r_388_transpose_1_2 * r_377_2_0));
    double r_391_mul_2_0 = (((r_388_transpose_2_0 * r_377_0_0) + (r_388_transpose_2_1 * r_377_1_0)) + (r_388_transpose_2_2 * r_377_2_0));
    double r_392_add_0_0 = (r_385_0_0 + r_391_mul_0_0);
    double r_392_add_1_0 = (r_385_1_0 + r_391_mul_1_0);
    double r_392_add_2_0 = (r_385_2_0 + r_391_mul_2_0);
    double r_393_scalar_0_0 = r_390_add_0_0;
    double r_394_scalar_0_0 = r_390_add_1_0;
    double r_395_scalar_0_0 = r_390_add_2_0;
    double r_396_scalar_0_0 = r_392_add_0_0;
    double r_397_scalar_0_0 = r_392_add_1_0;
    double r_398_scalar_0_0 = r_392_add_2_0;
    double r_399_0_0 = r_393_scalar_0_0;
    double r_399_1_0 = r_394_scalar_0_0;
    double r_399_2_0 = r_395_scalar_0_0;
    double r_399_3_0 = r_396_scalar_0_0;
    double r_399_4_0 = r_397_scalar_0_0;
    double r_399_5_0 = r_398_scalar_0_0;
    double act_motion_inv_3_0_0 = r_399_0_0;
    double act_motion_inv_3_1_0 = r_399_1_0;
    double act_motion_inv_3_2_0 = r_399_2_0;
    double act_motion_inv_3_3_0 = r_399_3_0;
    double act_motion_inv_3_4_0 = r_399_4_0;
    double act_motion_inv_3_5_0 = r_399_5_0;
    double r_400_scalar_0_0 = v_3_0;
    double r_401_matrix_negate_0_0 = -(r_400_scalar_0_0);
    double r_402_scalar_0_0 = act_motion_inv_3_0_0;
    double r_403_scalar_0_0 = act_motion_inv_3_1_0;
    double r_404_scalar_0_0 = act_motion_inv_3_2_0;
    double r_405_0_0 = r_402_scalar_0_0;
    double r_405_1_0 = r_403_scalar_0_0;
    double r_405_2_0 = r_404_scalar_0_0;
    double r_406_scalar_0_0 = act_motion_inv_3_3_0;
    double r_407_scalar_0_0 = act_motion_inv_3_4_0;
    double r_408_scalar_0_0 = act_motion_inv_3_5_0;
    double r_409_0_0 = r_406_scalar_0_0;
    double r_409_1_0 = r_407_scalar_0_0;
    double r_409_2_0 = r_408_scalar_0_0;
    double r_410_matrix_negate_0_0 = -(r_401_matrix_negate_0_0);
    double r_411_scalar_0_0 = r_405_1_0;
    double r_412_mul_0_0 = (r_410_matrix_negate_0_0 * r_411_scalar_0_0);
    double r_413_scalar_0_0 = r_405_0_0;
    double r_414_mul_0_0 = (r_401_matrix_negate_0_0 * r_413_scalar_0_0);
    double r_415_0_0 = 0;
    double r_416_0_0 = r_412_mul_0_0;
    double r_416_1_0 = r_414_mul_0_0;
    double r_416_2_0 = r_415_0_0;
    double alpha_cross_linear_3_0_0 = r_416_0_0;
    double alpha_cross_linear_3_1_0 = r_416_1_0;
    double alpha_cross_linear_3_2_0 = r_416_2_0;
    double r_417_matrix_negate_0_0 = -(r_401_matrix_negate_0_0);
    double r_418_scalar_0_0 = r_409_1_0;
    double r_419_mul_0_0 = (r_417_matrix_negate_0_0 * r_418_scalar_0_0);
    double r_420_scalar_0_0 = r_409_0_0;
    double r_421_mul_0_0 = (r_401_matrix_negate_0_0 * r_420_scalar_0_0);
    double r_422_0_0 = 0;
    double r_423_0_0 = r_419_mul_0_0;
    double r_423_1_0 = r_421_mul_0_0;
    double r_423_2_0 = r_422_0_0;
    double alpha_cross_angular_3_0_0 = r_423_0_0;
    double alpha_cross_angular_3_1_0 = r_423_1_0;
    double alpha_cross_angular_3_2_0 = r_423_2_0;
    double r_424_scalar_0_0 = alpha_cross_linear_3_0_0;
    double r_425_scalar_0_0 = alpha_cross_linear_3_1_0;
    double r_426_scalar_0_0 = alpha_cross_linear_3_2_0;
    double r_427_scalar_0_0 = alpha_cross_angular_3_0_0;
    double r_428_scalar_0_0 = alpha_cross_angular_3_1_0;
    double r_429_scalar_0_0 = alpha_cross_angular_3_2_0;
    double r_430_0_0 = r_424_scalar_0_0;
    double r_430_1_0 = r_425_scalar_0_0;
    double r_430_2_0 = r_426_scalar_0_0;
    double r_430_3_0 = r_427_scalar_0_0;
    double r_430_4_0 = r_428_scalar_0_0;
    double r_430_5_0 = r_429_scalar_0_0;
    double alpha_cross_3_0_0 = r_430_0_0;
    double alpha_cross_3_1_0 = r_430_1_0;
    double alpha_cross_3_2_0 = r_430_2_0;
    double alpha_cross_3_3_0 = r_430_3_0;
    double alpha_cross_3_4_0 = r_430_4_0;
    double alpha_cross_3_5_0 = r_430_5_0;
    double r_431_scalar_0_0 = a_3_0;
    double r_432_scalar_0_0 = alpha_cross_3_5_0;
    double r_433_add_0_0 = (r_431_scalar_0_0 + r_432_scalar_0_0);
    double r_434_scalar_0_0 = alpha_cross_3_0_0;
    double r_435_scalar_0_0 = alpha_cross_3_1_0;
    double r_436_scalar_0_0 = alpha_cross_3_2_0;
    double r_437_scalar_0_0 = alpha_cross_3_3_0;
    double r_438_scalar_0_0 = alpha_cross_3_4_0;
    double r_439_0_0 = r_434_scalar_0_0;
    double r_439_1_0 = r_435_scalar_0_0;
    double r_439_2_0 = r_436_scalar_0_0;
    double r_439_3_0 = r_437_scalar_0_0;
    double r_439_4_0 = r_438_scalar_0_0;
    double r_439_5_0 = r_433_add_0_0;
    double r_440_scalar_0_0 = r_336_add_0_0;
    double r_441_scalar_0_0 = r_336_add_1_0;
    double r_442_scalar_0_0 = r_336_add_2_0;
    double r_443_0_0 = r_440_scalar_0_0;
    double r_443_1_0 = r_441_scalar_0_0;
    double r_443_2_0 = r_442_scalar_0_0;
    double r_444_scalar_0_0 = r_336_add_3_0;
    double r_445_scalar_0_0 = r_336_add_4_0;
    double r_446_scalar_0_0 = r_336_add_5_0;
    double r_447_0_0 = r_444_scalar_0_0;
    double r_447_1_0 = r_445_scalar_0_0;
    double r_447_2_0 = r_446_scalar_0_0;
    double r_448_vector_cross_0_0 = ((limi_translation_3_1_0 * r_447_2_0) - (limi_translation_3_2_0 * r_447_1_0));
    double r_448_vector_cross_1_0 = ((limi_translation_3_2_0 * r_447_0_0) - (limi_translation_3_0_0 * r_447_2_0));
    double r_448_vector_cross_2_0 = ((limi_translation_3_0_0 * r_447_1_0) - (limi_translation_3_1_0 * r_447_0_0));
    double r_449_sub_0_0 = (r_443_0_0 - r_448_vector_cross_0_0);
    double r_449_sub_1_0 = (r_443_1_0 - r_448_vector_cross_1_0);
    double r_449_sub_2_0 = (r_443_2_0 - r_448_vector_cross_2_0);
    double r_450_transpose_0_0 = limi_rotation_3_0_0;
    double r_450_transpose_0_1 = limi_rotation_3_1_0;
    double r_450_transpose_0_2 = limi_rotation_3_2_0;
    double r_450_transpose_1_0 = limi_rotation_3_0_1;
    double r_450_transpose_1_1 = limi_rotation_3_1_1;
    double r_450_transpose_1_2 = limi_rotation_3_2_1;
    double r_450_transpose_2_0 = limi_rotation_3_0_2;
    double r_450_transpose_2_1 = limi_rotation_3_1_2;
    double r_450_transpose_2_2 = limi_rotation_3_2_2;
    double r_451_mul_0_0 = (((r_450_transpose_0_0 * r_449_sub_0_0) + (r_450_transpose_0_1 * r_449_sub_1_0)) + (r_450_transpose_0_2 * r_449_sub_2_0));
    double r_451_mul_1_0 = (((r_450_transpose_1_0 * r_449_sub_0_0) + (r_450_transpose_1_1 * r_449_sub_1_0)) + (r_450_transpose_1_2 * r_449_sub_2_0));
    double r_451_mul_2_0 = (((r_450_transpose_2_0 * r_449_sub_0_0) + (r_450_transpose_2_1 * r_449_sub_1_0)) + (r_450_transpose_2_2 * r_449_sub_2_0));
    double r_452_mul_0_0 = (((r_450_transpose_0_0 * r_447_0_0) + (r_450_transpose_0_1 * r_447_1_0)) + (r_450_transpose_0_2 * r_447_2_0));
    double r_452_mul_1_0 = (((r_450_transpose_1_0 * r_447_0_0) + (r_450_transpose_1_1 * r_447_1_0)) + (r_450_transpose_1_2 * r_447_2_0));
    double r_452_mul_2_0 = (((r_450_transpose_2_0 * r_447_0_0) + (r_450_transpose_2_1 * r_447_1_0)) + (r_450_transpose_2_2 * r_447_2_0));
    double r_453_scalar_0_0 = r_451_mul_0_0;
    double r_454_scalar_0_0 = r_451_mul_1_0;
    double r_455_scalar_0_0 = r_451_mul_2_0;
    double r_456_scalar_0_0 = r_452_mul_0_0;
    double r_457_scalar_0_0 = r_452_mul_1_0;
    double r_458_scalar_0_0 = r_452_mul_2_0;
    double r_459_0_0 = r_453_scalar_0_0;
    double r_459_1_0 = r_454_scalar_0_0;
    double r_459_2_0 = r_455_scalar_0_0;
    double r_459_3_0 = r_456_scalar_0_0;
    double r_459_4_0 = r_457_scalar_0_0;
    double r_459_5_0 = r_458_scalar_0_0;
    double act_inv_3_0_0 = r_459_0_0;
    double act_inv_3_1_0 = r_459_1_0;
    double act_inv_3_2_0 = r_459_2_0;
    double act_inv_3_3_0 = r_459_3_0;
    double act_inv_3_4_0 = r_459_4_0;
    double act_inv_3_5_0 = r_459_5_0;
    double r_460_add_0_0 = (r_439_0_0 + act_inv_3_0_0);
    double r_460_add_1_0 = (r_439_1_0 + act_inv_3_1_0);
    double r_460_add_2_0 = (r_439_2_0 + act_inv_3_2_0);
    double r_460_add_3_0 = (r_439_3_0 + act_inv_3_3_0);
    double r_460_add_4_0 = (r_439_4_0 + act_inv_3_4_0);
    double r_460_add_5_0 = (r_439_5_0 + act_inv_3_5_0);
    double r_461_scalar_0_0 = qsin_4_0;
    double r_462_scalar_0_0 = qcos_4_0;
    double r_463_matrix_negate_0_0 = -(r_462_scalar_0_0);
    double r_464_0_0 = 0;
    double r_465_scalar_0_0 = qcos_4_0;
    double r_466_scalar_0_0 = qsin_4_0;
    double r_467_0_0 = 0;
    double r_468_0_0 = 0;
    double r_469_0_0 = 0;
    double r_470_0_0 = 0;
    double r_471_0_0 = r_461_scalar_0_0;
    double r_471_0_1 = r_463_matrix_negate_0_0;
    double r_471_0_2 = r_464_0_0;
    double r_471_1_0 = r_465_scalar_0_0;
    double r_471_1_1 = r_466_scalar_0_0;
    double r_471_1_2 = r_467_0_0;
    double r_471_2_0 = r_468_0_0;
    double r_471_2_1 = r_469_0_0;
    double r_471_2_2 = r_470_0_0;
    double r_472_scalar_0_0 = r_471_1_1;
    double r_473_scalar_0_0 = r_471_1_0;
    double r_474_0_0 = 0;
    double r_475_0_0 = 0;
    double r_476_0_0 = 0;
    double r_477_0_0 = -1;
    double r_478_scalar_0_0 = r_471_0_1;
    double r_479_scalar_0_0 = r_471_0_0;
    double r_480_0_0 = 0;
    double r_481_0_0 = r_472_scalar_0_0;
    double r_481_0_1 = r_473_scalar_0_0;
    double r_481_0_2 = r_474_0_0;
    double r_481_1_0 = r_475_0_0;
    double r_481_1_1 = r_476_0_0;
    double r_481_1_2 = r_477_0_0;
    double r_481_2_0 = r_478_scalar_0_0;
    double r_481_2_1 = r_479_scalar_0_0;
    double r_481_2_2 = r_480_0_0;
    double limi_rotation_4_0_0 = r_481_0_0;
    double limi_rotation_4_0_1 = r_481_0_1;
    double limi_rotation_4_0_2 = r_481_0_2;
    double limi_rotation_4_1_0 = r_481_1_0;
    double limi_rotation_4_1_1 = r_481_1_1;
    double limi_rotation_4_1_2 = r_481_1_2;
    double limi_rotation_4_2_0 = r_481_2_0;
    double limi_rotation_4_2_1 = r_481_2_1;
    double limi_rotation_4_2_2 = r_481_2_2;
    double r_482_mul_0_0 = (((r_360_mul_0_0 * limi_rotation_4_0_0) + (r_360_mul_0_1 * limi_rotation_4_1_0)) + (r_360_mul_0_2 * limi_rotation_4_2_0));
    double r_482_mul_0_1 = (((r_360_mul_0_0 * limi_rotation_4_0_1) + (r_360_mul_0_1 * limi_rotation_4_1_1)) + (r_360_mul_0_2 * limi_rotation_4_2_1));
    double r_482_mul_0_2 = (((r_360_mul_0_0 * limi_rotation_4_0_2) + (r_360_mul_0_1 * limi_rotation_4_1_2)) + (r_360_mul_0_2 * limi_rotation_4_2_2));
    double r_482_mul_1_0 = (((r_360_mul_1_0 * limi_rotation_4_0_0) + (r_360_mul_1_1 * limi_rotation_4_1_0)) + (r_360_mul_1_2 * limi_rotation_4_2_0));
    double r_482_mul_1_1 = (((r_360_mul_1_0 * limi_rotation_4_0_1) + (r_360_mul_1_1 * limi_rotation_4_1_1)) + (r_360_mul_1_2 * limi_rotation_4_2_1));
    double r_482_mul_1_2 = (((r_360_mul_1_0 * limi_rotation_4_0_2) + (r_360_mul_1_1 * limi_rotation_4_1_2)) + (r_360_mul_1_2 * limi_rotation_4_2_2));
    double r_482_mul_2_0 = (((r_360_mul_2_0 * limi_rotation_4_0_0) + (r_360_mul_2_1 * limi_rotation_4_1_0)) + (r_360_mul_2_2 * limi_rotation_4_2_0));
    double r_482_mul_2_1 = (((r_360_mul_2_0 * limi_rotation_4_0_1) + (r_360_mul_2_1 * limi_rotation_4_1_1)) + (r_360_mul_2_2 * limi_rotation_4_2_1));
    double r_482_mul_2_2 = (((r_360_mul_2_0 * limi_rotation_4_0_2) + (r_360_mul_2_1 * limi_rotation_4_1_2)) + (r_360_mul_2_2 * limi_rotation_4_2_2));
    double r_483_mul_0_0 = (((r_360_mul_0_0 * limi_translation_4_0_0) + (r_360_mul_0_1 * limi_translation_4_1_0)) + (r_360_mul_0_2 * limi_translation_4_2_0));
    double r_483_mul_1_0 = (((r_360_mul_1_0 * limi_translation_4_0_0) + (r_360_mul_1_1 * limi_translation_4_1_0)) + (r_360_mul_1_2 * limi_translation_4_2_0));
    double r_483_mul_2_0 = (((r_360_mul_2_0 * limi_translation_4_0_0) + (r_360_mul_2_1 * limi_translation_4_1_0)) + (r_360_mul_2_2 * limi_translation_4_2_0));
    double r_484_add_0_0 = (r_362_add_0_0 + r_483_mul_0_0);
    double r_484_add_1_0 = (r_362_add_1_0 + r_483_mul_1_0);
    double r_484_add_2_0 = (r_362_add_2_0 + r_483_mul_2_0);
    double r_485_0_0 = 0;
    double r_486_0_0 = 0;
    double r_487_0_0 = 0;
    double r_488_0_0 = 0;
    double r_489_0_0 = 0;
    double r_490_scalar_0_0 = v_4_0;
    double r_491_0_0 = r_485_0_0;
    double r_491_1_0 = r_486_0_0;
    double r_491_2_0 = r_487_0_0;
    double r_491_3_0 = r_488_0_0;
    double r_491_4_0 = r_489_0_0;
    double r_491_5_0 = r_490_scalar_0_0;
    double r_492_scalar_0_0 = act_motion_inv_3_0_0;
    double r_493_scalar_0_0 = act_motion_inv_3_1_0;
    double r_494_scalar_0_0 = act_motion_inv_3_2_0;
    double r_495_0_0 = r_492_scalar_0_0;
    double r_495_1_0 = r_493_scalar_0_0;
    double r_495_2_0 = r_494_scalar_0_0;
    double r_496_scalar_0_0 = act_motion_inv_3_3_0;
    double r_497_scalar_0_0 = act_motion_inv_3_4_0;
    double r_498_scalar_0_0 = act_motion_inv_3_5_0;
    double r_499_0_0 = r_496_scalar_0_0;
    double r_499_1_0 = r_497_scalar_0_0;
    double r_499_2_0 = r_498_scalar_0_0;
    double r_500_scalar_0_0 = r_491_0_0;
    double r_501_scalar_0_0 = r_491_1_0;
    double r_502_scalar_0_0 = r_491_2_0;
    double r_503_0_0 = r_500_scalar_0_0;
    double r_503_1_0 = r_501_scalar_0_0;
    double r_503_2_0 = r_502_scalar_0_0;
    double r_504_scalar_0_0 = r_491_3_0;
    double r_505_scalar_0_0 = r_491_4_0;
    double r_506_scalar_0_0 = r_491_5_0;
    double r_507_0_0 = r_504_scalar_0_0;
    double r_507_1_0 = r_505_scalar_0_0;
    double r_507_2_0 = r_506_scalar_0_0;
    double r_508_vector_cross_0_0 = ((limi_translation_4_1_0 * r_499_2_0) - (limi_translation_4_2_0 * r_499_1_0));
    double r_508_vector_cross_1_0 = ((limi_translation_4_2_0 * r_499_0_0) - (limi_translation_4_0_0 * r_499_2_0));
    double r_508_vector_cross_2_0 = ((limi_translation_4_0_0 * r_499_1_0) - (limi_translation_4_1_0 * r_499_0_0));
    double r_509_sub_0_0 = (r_495_0_0 - r_508_vector_cross_0_0);
    double r_509_sub_1_0 = (r_495_1_0 - r_508_vector_cross_1_0);
    double r_509_sub_2_0 = (r_495_2_0 - r_508_vector_cross_2_0);
    double r_510_transpose_0_0 = limi_rotation_4_0_0;
    double r_510_transpose_0_1 = limi_rotation_4_1_0;
    double r_510_transpose_0_2 = limi_rotation_4_2_0;
    double r_510_transpose_1_0 = limi_rotation_4_0_1;
    double r_510_transpose_1_1 = limi_rotation_4_1_1;
    double r_510_transpose_1_2 = limi_rotation_4_2_1;
    double r_510_transpose_2_0 = limi_rotation_4_0_2;
    double r_510_transpose_2_1 = limi_rotation_4_1_2;
    double r_510_transpose_2_2 = limi_rotation_4_2_2;
    double r_511_mul_0_0 = (((r_510_transpose_0_0 * r_509_sub_0_0) + (r_510_transpose_0_1 * r_509_sub_1_0)) + (r_510_transpose_0_2 * r_509_sub_2_0));
    double r_511_mul_1_0 = (((r_510_transpose_1_0 * r_509_sub_0_0) + (r_510_transpose_1_1 * r_509_sub_1_0)) + (r_510_transpose_1_2 * r_509_sub_2_0));
    double r_511_mul_2_0 = (((r_510_transpose_2_0 * r_509_sub_0_0) + (r_510_transpose_2_1 * r_509_sub_1_0)) + (r_510_transpose_2_2 * r_509_sub_2_0));
    double r_512_add_0_0 = (r_503_0_0 + r_511_mul_0_0);
    double r_512_add_1_0 = (r_503_1_0 + r_511_mul_1_0);
    double r_512_add_2_0 = (r_503_2_0 + r_511_mul_2_0);
    double r_513_mul_0_0 = (((r_510_transpose_0_0 * r_499_0_0) + (r_510_transpose_0_1 * r_499_1_0)) + (r_510_transpose_0_2 * r_499_2_0));
    double r_513_mul_1_0 = (((r_510_transpose_1_0 * r_499_0_0) + (r_510_transpose_1_1 * r_499_1_0)) + (r_510_transpose_1_2 * r_499_2_0));
    double r_513_mul_2_0 = (((r_510_transpose_2_0 * r_499_0_0) + (r_510_transpose_2_1 * r_499_1_0)) + (r_510_transpose_2_2 * r_499_2_0));
    double r_514_add_0_0 = (r_507_0_0 + r_513_mul_0_0);
    double r_514_add_1_0 = (r_507_1_0 + r_513_mul_1_0);
    double r_514_add_2_0 = (r_507_2_0 + r_513_mul_2_0);
    double r_515_scalar_0_0 = r_512_add_0_0;
    double r_516_scalar_0_0 = r_512_add_1_0;
    double r_517_scalar_0_0 = r_512_add_2_0;
    double r_518_scalar_0_0 = r_514_add_0_0;
    double r_519_scalar_0_0 = r_514_add_1_0;
    double r_520_scalar_0_0 = r_514_add_2_0;
    double r_521_0_0 = r_515_scalar_0_0;
    double r_521_1_0 = r_516_scalar_0_0;
    double r_521_2_0 = r_517_scalar_0_0;
    double r_521_3_0 = r_518_scalar_0_0;
    double r_521_4_0 = r_519_scalar_0_0;
    double r_521_5_0 = r_520_scalar_0_0;
    double act_motion_inv_4_0_0 = r_521_0_0;
    double act_motion_inv_4_1_0 = r_521_1_0;
    double act_motion_inv_4_2_0 = r_521_2_0;
    double act_motion_inv_4_3_0 = r_521_3_0;
    double act_motion_inv_4_4_0 = r_521_4_0;
    double act_motion_inv_4_5_0 = r_521_5_0;
    double r_522_scalar_0_0 = v_4_0;
    double r_523_matrix_negate_0_0 = -(r_522_scalar_0_0);
    double r_524_scalar_0_0 = act_motion_inv_4_0_0;
    double r_525_scalar_0_0 = act_motion_inv_4_1_0;
    double r_526_scalar_0_0 = act_motion_inv_4_2_0;
    double r_527_0_0 = r_524_scalar_0_0;
    double r_527_1_0 = r_525_scalar_0_0;
    double r_527_2_0 = r_526_scalar_0_0;
    double r_528_scalar_0_0 = act_motion_inv_4_3_0;
    double r_529_scalar_0_0 = act_motion_inv_4_4_0;
    double r_530_scalar_0_0 = act_motion_inv_4_5_0;
    double r_531_0_0 = r_528_scalar_0_0;
    double r_531_1_0 = r_529_scalar_0_0;
    double r_531_2_0 = r_530_scalar_0_0;
    double r_532_matrix_negate_0_0 = -(r_523_matrix_negate_0_0);
    double r_533_scalar_0_0 = r_527_1_0;
    double r_534_mul_0_0 = (r_532_matrix_negate_0_0 * r_533_scalar_0_0);
    double r_535_scalar_0_0 = r_527_0_0;
    double r_536_mul_0_0 = (r_523_matrix_negate_0_0 * r_535_scalar_0_0);
    double r_537_0_0 = 0;
    double r_538_0_0 = r_534_mul_0_0;
    double r_538_1_0 = r_536_mul_0_0;
    double r_538_2_0 = r_537_0_0;
    double alpha_cross_linear_4_0_0 = r_538_0_0;
    double alpha_cross_linear_4_1_0 = r_538_1_0;
    double alpha_cross_linear_4_2_0 = r_538_2_0;
    double r_539_matrix_negate_0_0 = -(r_523_matrix_negate_0_0);
    double r_540_scalar_0_0 = r_531_1_0;
    double r_541_mul_0_0 = (r_539_matrix_negate_0_0 * r_540_scalar_0_0);
    double r_542_scalar_0_0 = r_531_0_0;
    double r_543_mul_0_0 = (r_523_matrix_negate_0_0 * r_542_scalar_0_0);
    double r_544_0_0 = 0;
    double r_545_0_0 = r_541_mul_0_0;
    double r_545_1_0 = r_543_mul_0_0;
    double r_545_2_0 = r_544_0_0;
    double alpha_cross_angular_4_0_0 = r_545_0_0;
    double alpha_cross_angular_4_1_0 = r_545_1_0;
    double alpha_cross_angular_4_2_0 = r_545_2_0;
    double r_546_scalar_0_0 = alpha_cross_linear_4_0_0;
    double r_547_scalar_0_0 = alpha_cross_linear_4_1_0;
    double r_548_scalar_0_0 = alpha_cross_linear_4_2_0;
    double r_549_scalar_0_0 = alpha_cross_angular_4_0_0;
    double r_550_scalar_0_0 = alpha_cross_angular_4_1_0;
    double r_551_scalar_0_0 = alpha_cross_angular_4_2_0;
    double r_552_0_0 = r_546_scalar_0_0;
    double r_552_1_0 = r_547_scalar_0_0;
    double r_552_2_0 = r_548_scalar_0_0;
    double r_552_3_0 = r_549_scalar_0_0;
    double r_552_4_0 = r_550_scalar_0_0;
    double r_552_5_0 = r_551_scalar_0_0;
    double alpha_cross_4_0_0 = r_552_0_0;
    double alpha_cross_4_1_0 = r_552_1_0;
    double alpha_cross_4_2_0 = r_552_2_0;
    double alpha_cross_4_3_0 = r_552_3_0;
    double alpha_cross_4_4_0 = r_552_4_0;
    double alpha_cross_4_5_0 = r_552_5_0;
    double r_553_scalar_0_0 = a_4_0;
    double r_554_scalar_0_0 = alpha_cross_4_5_0;
    double r_555_add_0_0 = (r_553_scalar_0_0 + r_554_scalar_0_0);
    double r_556_scalar_0_0 = alpha_cross_4_0_0;
    double r_557_scalar_0_0 = alpha_cross_4_1_0;
    double r_558_scalar_0_0 = alpha_cross_4_2_0;
    double r_559_scalar_0_0 = alpha_cross_4_3_0;
    double r_560_scalar_0_0 = alpha_cross_4_4_0;
    double r_561_0_0 = r_556_scalar_0_0;
    double r_561_1_0 = r_557_scalar_0_0;
    double r_561_2_0 = r_558_scalar_0_0;
    double r_561_3_0 = r_559_scalar_0_0;
    double r_561_4_0 = r_560_scalar_0_0;
    double r_561_5_0 = r_555_add_0_0;
    double r_562_scalar_0_0 = r_460_add_0_0;
    double r_563_scalar_0_0 = r_460_add_1_0;
    double r_564_scalar_0_0 = r_460_add_2_0;
    double r_565_0_0 = r_562_scalar_0_0;
    double r_565_1_0 = r_563_scalar_0_0;
    double r_565_2_0 = r_564_scalar_0_0;
    double r_566_scalar_0_0 = r_460_add_3_0;
    double r_567_scalar_0_0 = r_460_add_4_0;
    double r_568_scalar_0_0 = r_460_add_5_0;
    double r_569_0_0 = r_566_scalar_0_0;
    double r_569_1_0 = r_567_scalar_0_0;
    double r_569_2_0 = r_568_scalar_0_0;
    double r_570_vector_cross_0_0 = ((limi_translation_4_1_0 * r_569_2_0) - (limi_translation_4_2_0 * r_569_1_0));
    double r_570_vector_cross_1_0 = ((limi_translation_4_2_0 * r_569_0_0) - (limi_translation_4_0_0 * r_569_2_0));
    double r_570_vector_cross_2_0 = ((limi_translation_4_0_0 * r_569_1_0) - (limi_translation_4_1_0 * r_569_0_0));
    double r_571_sub_0_0 = (r_565_0_0 - r_570_vector_cross_0_0);
    double r_571_sub_1_0 = (r_565_1_0 - r_570_vector_cross_1_0);
    double r_571_sub_2_0 = (r_565_2_0 - r_570_vector_cross_2_0);
    double r_572_transpose_0_0 = limi_rotation_4_0_0;
    double r_572_transpose_0_1 = limi_rotation_4_1_0;
    double r_572_transpose_0_2 = limi_rotation_4_2_0;
    double r_572_transpose_1_0 = limi_rotation_4_0_1;
    double r_572_transpose_1_1 = limi_rotation_4_1_1;
    double r_572_transpose_1_2 = limi_rotation_4_2_1;
    double r_572_transpose_2_0 = limi_rotation_4_0_2;
    double r_572_transpose_2_1 = limi_rotation_4_1_2;
    double r_572_transpose_2_2 = limi_rotation_4_2_2;
    double r_573_mul_0_0 = (((r_572_transpose_0_0 * r_571_sub_0_0) + (r_572_transpose_0_1 * r_571_sub_1_0)) + (r_572_transpose_0_2 * r_571_sub_2_0));
    double r_573_mul_1_0 = (((r_572_transpose_1_0 * r_571_sub_0_0) + (r_572_transpose_1_1 * r_571_sub_1_0)) + (r_572_transpose_1_2 * r_571_sub_2_0));
    double r_573_mul_2_0 = (((r_572_transpose_2_0 * r_571_sub_0_0) + (r_572_transpose_2_1 * r_571_sub_1_0)) + (r_572_transpose_2_2 * r_571_sub_2_0));
    double r_574_mul_0_0 = (((r_572_transpose_0_0 * r_569_0_0) + (r_572_transpose_0_1 * r_569_1_0)) + (r_572_transpose_0_2 * r_569_2_0));
    double r_574_mul_1_0 = (((r_572_transpose_1_0 * r_569_0_0) + (r_572_transpose_1_1 * r_569_1_0)) + (r_572_transpose_1_2 * r_569_2_0));
    double r_574_mul_2_0 = (((r_572_transpose_2_0 * r_569_0_0) + (r_572_transpose_2_1 * r_569_1_0)) + (r_572_transpose_2_2 * r_569_2_0));
    double r_575_scalar_0_0 = r_573_mul_0_0;
    double r_576_scalar_0_0 = r_573_mul_1_0;
    double r_577_scalar_0_0 = r_573_mul_2_0;
    double r_578_scalar_0_0 = r_574_mul_0_0;
    double r_579_scalar_0_0 = r_574_mul_1_0;
    double r_580_scalar_0_0 = r_574_mul_2_0;
    double r_581_0_0 = r_575_scalar_0_0;
    double r_581_1_0 = r_576_scalar_0_0;
    double r_581_2_0 = r_577_scalar_0_0;
    double r_581_3_0 = r_578_scalar_0_0;
    double r_581_4_0 = r_579_scalar_0_0;
    double r_581_5_0 = r_580_scalar_0_0;
    double act_inv_4_0_0 = r_581_0_0;
    double act_inv_4_1_0 = r_581_1_0;
    double act_inv_4_2_0 = r_581_2_0;
    double act_inv_4_3_0 = r_581_3_0;
    double act_inv_4_4_0 = r_581_4_0;
    double act_inv_4_5_0 = r_581_5_0;
    double r_582_add_0_0 = (r_561_0_0 + act_inv_4_0_0);
    double r_582_add_1_0 = (r_561_1_0 + act_inv_4_1_0);
    double r_582_add_2_0 = (r_561_2_0 + act_inv_4_2_0);
    double r_582_add_3_0 = (r_561_3_0 + act_inv_4_3_0);
    double r_582_add_4_0 = (r_561_4_0 + act_inv_4_4_0);
    double r_582_add_5_0 = (r_561_5_0 + act_inv_4_5_0);
    double final_omi_translations_0_0_0 = limi_translation_0_0_0;
    double final_omi_translations_0_1_0 = limi_translation_0_1_0;
    double final_omi_translations_0_2_0 = limi_translation_0_2_0;
    double final_omi_rotations_0_0_0 = limi_rotation_0_0_0;
    double final_omi_rotations_0_0_1 = limi_rotation_0_0_1;
    double final_omi_rotations_0_0_2 = limi_rotation_0_0_2;
    double final_omi_rotations_0_1_0 = limi_rotation_0_1_0;
    double final_omi_rotations_0_1_1 = limi_rotation_0_1_1;
    double final_omi_rotations_0_1_2 = limi_rotation_0_1_2;
    double final_omi_rotations_0_2_0 = limi_rotation_0_2_0;
    double final_omi_rotations_0_2_1 = limi_rotation_0_2_1;
    double final_omi_rotations_0_2_2 = limi_rotation_0_2_2;
    double final_v_0_0_0 = r_46_0_0;
    double final_v_0_1_0 = r_46_1_0;
    double final_v_0_2_0 = r_46_2_0;
    double final_v_0_3_0 = r_46_3_0;
    double final_v_0_4_0 = r_46_4_0;
    double final_v_0_5_0 = r_46_5_0;
    double final_a_0_0_0 = r_86_0_0;
    double final_a_0_1_0 = r_86_1_0;
    double final_a_0_2_0 = r_86_2_0;
    double final_a_0_3_0 = r_86_3_0;
    double final_a_0_4_0 = r_86_4_0;
    double final_a_0_5_0 = r_86_5_0;
    double final_omi_translations_1_0_0 = r_112_add_0_0;
    double final_omi_translations_1_1_0 = r_112_add_1_0;
    double final_omi_translations_1_2_0 = r_112_add_2_0;
    double final_omi_rotations_1_0_0 = r_110_mul_0_0;
    double final_omi_rotations_1_0_1 = r_110_mul_0_1;
    double final_omi_rotations_1_0_2 = r_110_mul_0_2;
    double final_omi_rotations_1_1_0 = r_110_mul_1_0;
    double final_omi_rotations_1_1_1 = r_110_mul_1_1;
    double final_omi_rotations_1_1_2 = r_110_mul_1_2;
    double final_omi_rotations_1_2_0 = r_110_mul_2_0;
    double final_omi_rotations_1_2_1 = r_110_mul_2_1;
    double final_omi_rotations_1_2_2 = r_110_mul_2_2;
    double final_v_1_0_0 = act_motion_inv_1_0_0;
    double final_v_1_1_0 = act_motion_inv_1_1_0;
    double final_v_1_2_0 = act_motion_inv_1_2_0;
    double final_v_1_3_0 = act_motion_inv_1_3_0;
    double final_v_1_4_0 = act_motion_inv_1_4_0;
    double final_v_1_5_0 = act_motion_inv_1_5_0;
    double final_a_1_0_0 = r_210_add_0_0;
    double final_a_1_1_0 = r_210_add_1_0;
    double final_a_1_2_0 = r_210_add_2_0;
    double final_a_1_3_0 = r_210_add_3_0;
    double final_a_1_4_0 = r_210_add_4_0;
    double final_a_1_5_0 = r_210_add_5_0;
    double final_omi_translations_2_0_0 = r_238_add_0_0;
    double final_omi_translations_2_1_0 = r_238_add_1_0;
    double final_omi_translations_2_2_0 = r_238_add_2_0;
    double final_omi_rotations_2_0_0 = r_236_mul_0_0;
    double final_omi_rotations_2_0_1 = r_236_mul_0_1;
    double final_omi_rotations_2_0_2 = r_236_mul_0_2;
    double final_omi_rotations_2_1_0 = r_236_mul_1_0;
    double final_omi_rotations_2_1_1 = r_236_mul_1_1;
    double final_omi_rotations_2_1_2 = r_236_mul_1_2;
    double final_omi_rotations_2_2_0 = r_236_mul_2_0;
    double final_omi_rotations_2_2_1 = r_236_mul_2_1;
    double final_omi_rotations_2_2_2 = r_236_mul_2_2;
    double final_v_2_0_0 = act_motion_inv_2_0_0;
    double final_v_2_1_0 = act_motion_inv_2_1_0;
    double final_v_2_2_0 = act_motion_inv_2_2_0;
    double final_v_2_3_0 = act_motion_inv_2_3_0;
    double final_v_2_4_0 = act_motion_inv_2_4_0;
    double final_v_2_5_0 = act_motion_inv_2_5_0;
    double final_a_2_0_0 = r_336_add_0_0;
    double final_a_2_1_0 = r_336_add_1_0;
    double final_a_2_2_0 = r_336_add_2_0;
    double final_a_2_3_0 = r_336_add_3_0;
    double final_a_2_4_0 = r_336_add_4_0;
    double final_a_2_5_0 = r_336_add_5_0;
    double final_omi_translations_3_0_0 = r_362_add_0_0;
    double final_omi_translations_3_1_0 = r_362_add_1_0;
    double final_omi_translations_3_2_0 = r_362_add_2_0;
    double final_omi_rotations_3_0_0 = r_360_mul_0_0;
    double final_omi_rotations_3_0_1 = r_360_mul_0_1;
    double final_omi_rotations_3_0_2 = r_360_mul_0_2;
    double final_omi_rotations_3_1_0 = r_360_mul_1_0;
    double final_omi_rotations_3_1_1 = r_360_mul_1_1;
    double final_omi_rotations_3_1_2 = r_360_mul_1_2;
    double final_omi_rotations_3_2_0 = r_360_mul_2_0;
    double final_omi_rotations_3_2_1 = r_360_mul_2_1;
    double final_omi_rotations_3_2_2 = r_360_mul_2_2;
    double final_v_3_0_0 = act_motion_inv_3_0_0;
    double final_v_3_1_0 = act_motion_inv_3_1_0;
    double final_v_3_2_0 = act_motion_inv_3_2_0;
    double final_v_3_3_0 = act_motion_inv_3_3_0;
    double final_v_3_4_0 = act_motion_inv_3_4_0;
    double final_v_3_5_0 = act_motion_inv_3_5_0;
    double final_a_3_0_0 = r_460_add_0_0;
    double final_a_3_1_0 = r_460_add_1_0;
    double final_a_3_2_0 = r_460_add_2_0;
    double final_a_3_3_0 = r_460_add_3_0;
    double final_a_3_4_0 = r_460_add_4_0;
    double final_a_3_5_0 = r_460_add_5_0;
    double final_omi_translations_4_0_0 = r_484_add_0_0;
    double final_omi_translations_4_1_0 = r_484_add_1_0;
    double final_omi_translations_4_2_0 = r_484_add_2_0;
    double final_omi_rotations_4_0_0 = r_482_mul_0_0;
    double final_omi_rotations_4_0_1 = r_482_mul_0_1;
    double final_omi_rotations_4_0_2 = r_482_mul_0_2;
    double final_omi_rotations_4_1_0 = r_482_mul_1_0;
    double final_omi_rotations_4_1_1 = r_482_mul_1_1;
    double final_omi_rotations_4_1_2 = r_482_mul_1_2;
    double final_omi_rotations_4_2_0 = r_482_mul_2_0;
    double final_omi_rotations_4_2_1 = r_482_mul_2_1;
    double final_omi_rotations_4_2_2 = r_482_mul_2_2;
    double final_v_4_0_0 = act_motion_inv_4_0_0;
    double final_v_4_1_0 = act_motion_inv_4_1_0;
    double final_v_4_2_0 = act_motion_inv_4_2_0;
    double final_v_4_3_0 = act_motion_inv_4_3_0;
    double final_v_4_4_0 = act_motion_inv_4_4_0;
    double final_v_4_5_0 = act_motion_inv_4_5_0;
    double final_a_4_0_0 = r_582_add_0_0;
    double final_a_4_1_0 = r_582_add_1_0;
    double final_a_4_2_0 = r_582_add_2_0;
    double final_a_4_3_0 = r_582_add_3_0;
    double final_a_4_4_0 = r_582_add_4_0;
    double final_a_4_5_0 = r_582_add_5_0;
    
    inverseSE3 res1 = {
        .translation = {
            final_omi_translations_0_0_0,
            final_omi_translations_0_1_0,
            final_omi_translations_0_2_0
        },
        .rotation = {
            final_omi_rotations_0_0_0,
            final_omi_rotations_0_0_1,
            final_omi_rotations_0_0_2,
            final_omi_rotations_0_1_0,
            final_omi_rotations_0_1_1,
            final_omi_rotations_0_1_2,
            final_omi_rotations_0_2_0,
            final_omi_rotations_0_2_1,
            final_omi_rotations_0_2_2
        }
    };

    inverseSE3 res2 = {
        .translation = {
            final_omi_translations_1_0_0,
            final_omi_translations_1_1_0,
            final_omi_translations_1_2_0
        },
        .rotation = {
            final_omi_rotations_1_0_0,
            final_omi_rotations_1_0_1,
            final_omi_rotations_1_0_2,
            final_omi_rotations_1_1_0,
            final_omi_rotations_1_1_1,
            final_omi_rotations_1_1_2,
            final_omi_rotations_1_2_0,
            final_omi_rotations_1_2_1,
            final_omi_rotations_1_2_2
        }
    };

    inverseSE3 res3 = {
        .translation = {
            final_omi_translations_2_0_0,
            final_omi_translations_2_1_0,
            final_omi_translations_2_2_0
        },
        .rotation = {
            final_omi_rotations_2_0_0,
            final_omi_rotations_2_0_1,
            final_omi_rotations_2_0_2,
            final_omi_rotations_2_1_0,
            final_omi_rotations_2_1_1,
            final_omi_rotations_2_1_2,
            final_omi_rotations_2_2_0,
            final_omi_rotations_2_2_1,
            final_omi_rotations_2_2_2
        }
    };

    inverseSE3 res4 = {
        .translation = {
            final_omi_translations_3_0_0,
            final_omi_translations_3_1_0,
            final_omi_translations_3_2_0
        },
        .rotation = {
            final_omi_rotations_3_0_0,
            final_omi_rotations_3_0_1,
            final_omi_rotations_3_0_2,
            final_omi_rotations_3_1_0,
            final_omi_rotations_3_1_1,
            final_omi_rotations_3_1_2,
            final_omi_rotations_3_2_0,
            final_omi_rotations_3_2_1,
            final_omi_rotations_3_2_2
        }
    };

    inverseSE3 res5 = {
        .translation = {
            final_omi_translations_4_0_0,
            final_omi_translations_4_1_0,
            final_omi_translations_4_2_0
        },
        .rotation = {
            final_omi_rotations_4_0_0,
            final_omi_rotations_4_0_1,
            final_omi_rotations_4_0_2,
            final_omi_rotations_4_1_0,
            final_omi_rotations_4_1_1,
            final_omi_rotations_4_1_2,
            final_omi_rotations_4_2_0,
            final_omi_rotations_4_2_1,
            final_omi_rotations_4_2_2
        }
    };


    SE3s res = {
        .SE3 = {
            res1,
            res2,
            res3,
            res4,
            res5,
        }
    };
    return res;
}