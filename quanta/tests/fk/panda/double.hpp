#include "return.hpp"

/* @pre: ((qsin_0_0 > -1.0) && (qsin_0_0 < 1.0) && (qsin_1_0 > -1.0) && (qsin_1_0 < 1.0) && (qsin_2_0 > -1.0) && (qsin_2_0 < 1.0) && (qsin_3_0 > -1.0) && (qsin_3_0 < 1.0) && (qsin_4_0 > -1.0) && (qsin_4_0 < 1.0) && (qsin_5_0 > -1.0) && (qsin_5_0 < 1.0) && (qcos_0_0 > -0.9961946980917455) && (qcos_0_0 < 1.0) && (qcos_1_0 > -0.9961946980917455) && (qcos_1_0 < 1.0) && (qcos_2_0 > -0.9961946980917455) && (qcos_2_0 < 1.0) && (qcos_3_0 > -0.9961946980917455) && (qcos_3_0 < 1.0) && (qcos_4_0 > -0.9961946980917455) && (qcos_4_0 < 1.0) && (qcos_5_0 > -1.0) && (qcos_5_0 < 1.0) && (v_0_0 > -0.5) && (v_0_0 < 0.5) && (v_1_0 > -0.5) && (v_1_0 < 0.5) && (v_2_0 > -0.5) && (v_2_0 < 0.5) && (v_3_0 > -0.5) && (v_3_0 < 0.5) && (v_4_0 > -0.5) && (v_4_0 < 0.5) && (v_5_0 > -0.5) && (v_5_0 < 0.5) && (a_0_0 > -1.0) && (a_0_0 < 1.0) && (a_1_0 > -1.0) && (a_1_0 < 1.0) && (a_2_0 > -1.0) && (a_2_0 < 1.0) && (a_3_0 > -1.0) && (a_3_0 < 1.0) && (a_4_0 > -1.0) && (a_4_0 < 1.0) && (a_5_0 > -1.0) && (a_5_0 < 1.0)) */
fk_return FK_Panda_double(
    double qcos_0_0, double qcos_1_0, double qcos_2_0, double qcos_3_0, double qcos_4_0, double qcos_5_0, double qcos_6_0,
    double qsin_0_0, double qsin_1_0, double qsin_2_0, double qsin_3_0, double qsin_4_0, double qsin_5_0, double qsin_6_0,
    double v_0_0, double v_1_0, double v_2_0, double v_3_0, double v_4_0, double v_5_0, double v_6_0,
    double a_0_0, double a_1_0, double a_2_0, double a_3_0, double a_4_0, double a_5_0, double a_6_0
) {
  double r_1_0_0 = 0;
  double r_1_1_0 = 0;
  double r_1_2_0 = 0.333;
  double limi_translation_0_0_0 = r_1_0_0;
  double limi_translation_0_1_0 = r_1_1_0;
  double limi_translation_0_2_0 = r_1_2_0;
  double r_2_0_0 = 0;
  double r_2_1_0 = 0;
  double r_2_2_0 = 0;
  double limi_translation_1_0_0 = r_2_0_0;
  double limi_translation_1_1_0 = r_2_1_0;
  double limi_translation_1_2_0 = r_2_2_0;
  double r_3_0_0 = 0;
  double r_3_1_0 = -0.316;
  double r_3_2_0 = 0;
  double limi_translation_2_0_0 = r_3_0_0;
  double limi_translation_2_1_0 = r_3_1_0;
  double limi_translation_2_2_0 = r_3_2_0;
  double r_4_0_0 = 0.0825;
  double r_4_1_0 = 0;
  double r_4_2_0 = 0;
  double limi_translation_3_0_0 = r_4_0_0;
  double limi_translation_3_1_0 = r_4_1_0;
  double limi_translation_3_2_0 = r_4_2_0;
  double r_5_0_0 = -0.0825;
  double r_5_1_0 = 0.384;
  double r_5_2_0 = 0;
  double limi_translation_4_0_0 = r_5_0_0;
  double limi_translation_4_1_0 = r_5_1_0;
  double limi_translation_4_2_0 = r_5_2_0;
  double r_6_0_0 = 0;
  double r_6_1_0 = 0;
  double r_6_2_0 = 0;
  double limi_translation_5_0_0 = r_6_0_0;
  double limi_translation_5_1_0 = r_6_1_0;
  double limi_translation_5_2_0 = r_6_2_0;
  double r_7_0_0 = 0.088;
  double r_7_1_0 = 0;
  double r_7_2_0 = 0;
  double limi_translation_6_0_0 = r_7_0_0;
  double limi_translation_6_1_0 = r_7_1_0;
  double limi_translation_6_2_0 = r_7_2_0;
  double r_8_0_0 = 0.003875;
  double r_8_1_0 = 0.002081;
  double r_8_2_0 = -0.04762;
  double lever_0_0_0 = r_8_0_0;
  double lever_0_1_0 = r_8_1_0;
  double lever_0_2_0 = r_8_2_0;
  double r_9_0_0 = -0.003141;
  double r_9_1_0 = -0.02872;
  double r_9_2_0 = 0.003495;
  double lever_1_0_0 = r_9_0_0;
  double lever_1_1_0 = r_9_1_0;
  double lever_1_2_0 = r_9_2_0;
  double r_10_0_0 = 0.027518;
  double r_10_1_0 = 0.039252;
  double r_10_2_0 = -0.066502;
  double lever_2_0_0 = r_10_0_0;
  double lever_2_1_0 = r_10_1_0;
  double lever_2_2_0 = r_10_2_0;
  double r_11_0_0 = -0.05317;
  double r_11_1_0 = 0.104419;
  double r_11_2_0 = 0.027454;
  double lever_3_0_0 = r_11_0_0;
  double lever_3_1_0 = r_11_1_0;
  double lever_3_2_0 = r_11_2_0;
  double r_12_0_0 = -0.011953;
  double r_12_1_0 = 0.041065;
  double r_12_2_0 = -0.038437;
  double lever_4_0_0 = r_12_0_0;
  double lever_4_1_0 = r_12_1_0;
  double lever_4_2_0 = r_12_2_0;
  double r_13_0_0 = 0.060149;
  double r_13_1_0 = -0.014117;
  double r_13_2_0 = -0.010517;
  double lever_5_0_0 = r_13_0_0;
  double lever_5_1_0 = r_13_1_0;
  double lever_5_2_0 = r_13_2_0;
  double r_14_0_0 = 0.010517;
  double r_14_1_0 = -0.004252;
  double r_14_2_0 = 0.061597;
  double lever_6_0_0 = r_14_0_0;
  double lever_6_1_0 = r_14_1_0;
  double lever_6_2_0 = r_14_2_0;
  double r_15_0_0 = 4.970684;
  double r_15_1_0 = 0.646926;
  double r_15_2_0 = 3.228604;
  double r_15_3_0 = 3.587895;
  double r_15_4_0 = 1.225946;
  double r_15_5_0 = 1.666555;
  double r_15_6_0 = 0.735522;
  double masses_0_0 = r_15_0_0;
  double masses_1_0 = r_15_1_0;
  double masses_2_0 = r_15_2_0;
  double masses_3_0 = r_15_3_0;
  double masses_4_0 = r_15_4_0;
  double masses_5_0 = r_15_5_0;
  double masses_6_0 = r_15_6_0;
  double r_16_0_0 = 0.70337;
  double r_16_0_1 = -1.39E-4;
  double r_16_0_2 = 0.006772;
  double r_16_1_0 = -1.39E-4;
  double r_16_1_1 = 0.70661;
  double r_16_1_2 = 0.019169;
  double r_16_2_0 = 0.006772;
  double r_16_2_1 = 0.019169;
  double r_16_2_2 = 0.009117;
  double inertia_0_0_0 = r_16_0_0;
  double inertia_0_0_1 = r_16_0_1;
  double inertia_0_0_2 = r_16_0_2;
  double inertia_0_1_0 = r_16_1_0;
  double inertia_0_1_1 = r_16_1_1;
  double inertia_0_1_2 = r_16_1_2;
  double inertia_0_2_0 = r_16_2_0;
  double inertia_0_2_1 = r_16_2_1;
  double inertia_0_2_2 = r_16_2_2;
  double r_17_0_0 = 0.007962;
  double r_17_0_1 = -0.003925;
  double r_17_0_2 = 0.010254;
  double r_17_1_0 = -0.003925;
  double r_17_1_1 = 0.02811;
  double r_17_1_2 = 7.04E-4;
  double r_17_2_0 = 0.010254;
  double r_17_2_1 = 7.04E-4;
  double r_17_2_2 = 0.025995;
  double inertia_1_0_0 = r_17_0_0;
  double inertia_1_0_1 = r_17_0_1;
  double inertia_1_0_2 = r_17_0_2;
  double inertia_1_1_0 = r_17_1_0;
  double inertia_1_1_1 = r_17_1_1;
  double inertia_1_1_2 = r_17_1_2;
  double inertia_1_2_0 = r_17_2_0;
  double inertia_1_2_1 = r_17_2_1;
  double inertia_1_2_2 = r_17_2_2;
  double r_18_0_0 = 0.037242;
  double r_18_0_1 = -0.004761;
  double r_18_0_2 = -0.011396;
  double r_18_1_0 = -0.004761;
  double r_18_1_1 = 0.036155;
  double r_18_1_2 = -0.012805;
  double r_18_2_0 = -0.011396;
  double r_18_2_1 = -0.012805;
  double r_18_2_2 = 0.01083;
  double inertia_2_0_0 = r_18_0_0;
  double inertia_2_0_1 = r_18_0_1;
  double inertia_2_0_2 = r_18_0_2;
  double inertia_2_1_0 = r_18_1_0;
  double inertia_2_1_1 = r_18_1_1;
  double inertia_2_1_2 = r_18_1_2;
  double inertia_2_2_0 = r_18_2_0;
  double inertia_2_2_1 = r_18_2_1;
  double inertia_2_2_2 = r_18_2_2;
  double r_19_0_0 = 0.025853;
  double r_19_0_1 = 0.007796;
  double r_19_0_2 = -0.001332;
  double r_19_1_0 = 0.007796;
  double r_19_1_1 = 0.019552;
  double r_19_1_2 = 0.008641;
  double r_19_2_0 = -0.001332;
  double r_19_2_1 = 0.008641;
  double r_19_2_2 = 0.028323;
  double inertia_3_0_0 = r_19_0_0;
  double inertia_3_0_1 = r_19_0_1;
  double inertia_3_0_2 = r_19_0_2;
  double inertia_3_1_0 = r_19_1_0;
  double inertia_3_1_1 = r_19_1_1;
  double inertia_3_1_2 = r_19_1_2;
  double inertia_3_2_0 = r_19_2_0;
  double inertia_3_2_1 = r_19_2_1;
  double inertia_3_2_2 = r_19_2_2;
  double r_20_0_0 = 0.035549;
  double r_20_0_1 = -0.002117;
  double r_20_0_2 = -0.004037;
  double r_20_1_0 = -0.002117;
  double r_20_1_1 = 0.029474;
  double r_20_1_2 = 2.29E-4;
  double r_20_2_0 = -0.004037;
  double r_20_2_1 = 2.29E-4;
  double r_20_2_2 = 0.008627;
  double inertia_4_0_0 = r_20_0_0;
  double inertia_4_0_1 = r_20_0_1;
  double inertia_4_0_2 = r_20_0_2;
  double inertia_4_1_0 = r_20_1_0;
  double inertia_4_1_1 = r_20_1_1;
  double inertia_4_1_2 = r_20_1_2;
  double inertia_4_2_0 = r_20_2_0;
  double inertia_4_2_1 = r_20_2_1;
  double inertia_4_2_2 = r_20_2_2;
  double r_21_0_0 = 0.001964;
  double r_21_0_1 = 1.09E-4;
  double r_21_0_2 = -0.001158;
  double r_21_1_0 = 1.09E-4;
  double r_21_1_1 = 0.004354;
  double r_21_1_2 = 3.41E-4;
  double r_21_2_0 = -0.001158;
  double r_21_2_1 = 3.41E-4;
  double r_21_2_2 = 0.005433;
  double inertia_5_0_0 = r_21_0_0;
  double inertia_5_0_1 = r_21_0_1;
  double inertia_5_0_2 = r_21_0_2;
  double inertia_5_1_0 = r_21_1_0;
  double inertia_5_1_1 = r_21_1_1;
  double inertia_5_1_2 = r_21_1_2;
  double inertia_5_2_0 = r_21_2_0;
  double inertia_5_2_1 = r_21_2_1;
  double inertia_5_2_2 = r_21_2_2;
  double r_22_0_0 = 0.012516;
  double r_22_0_1 = -4.28E-4;
  double r_22_0_2 = -0.001196;
  double r_22_1_0 = -4.28E-4;
  double r_22_1_1 = 0.010027;
  double r_22_1_2 = -7.41E-4;
  double r_22_2_0 = -0.001196;
  double r_22_2_1 = -7.41E-4;
  double r_22_2_2 = 0.004815;
  double inertia_6_0_0 = r_22_0_0;
  double inertia_6_0_1 = r_22_0_1;
  double inertia_6_0_2 = r_22_0_2;
  double inertia_6_1_0 = r_22_1_0;
  double inertia_6_1_1 = r_22_1_1;
  double inertia_6_1_2 = r_22_1_2;
  double inertia_6_2_0 = r_22_2_0;
  double inertia_6_2_1 = r_22_2_1;
  double inertia_6_2_2 = r_22_2_2;
  double r_23_scalar_0_0 = qcos_0_0;
  double r_24_scalar_0_0 = qsin_0_0;
  double r_25_matrix_negate_0_0 = -(r_24_scalar_0_0);
  double r_26_0_0 = 0;
  double r_27_scalar_0_0 = qsin_0_0;
  double r_28_scalar_0_0 = qcos_0_0;
  double r_29_0_0 = 0;
  double r_30_0_0 = 0;
  double r_31_0_0 = 0;
  double r_32_0_0 = 1;
  double r_33_0_0 = r_23_scalar_0_0;
  double r_33_0_1 = r_25_matrix_negate_0_0;
  double r_33_0_2 = r_26_0_0;
  double r_33_1_0 = r_27_scalar_0_0;
  double r_33_1_1 = r_28_scalar_0_0;
  double r_33_1_2 = r_29_0_0;
  double r_33_2_0 = r_30_0_0;
  double r_33_2_1 = r_31_0_0;
  double r_33_2_2 = r_32_0_0;
  double r_34_0_0 = 1;
  double r_35_0_0 = 0;
  double r_36_0_0 = 1;
  double r_37_0_0 = 0;
  double r_38_0_0 = 1;
  double r_39_0_0 = 0;
  double r_40_mul_0_0 = (r_38_0_0 * r_36_0_0);
  double r_41_mul_0_0 = (r_38_0_0 * r_37_0_0);
  double r_42_mul_0_0 = (r_41_mul_0_0 * r_35_0_0);
  double r_43_mul_0_0 = (r_39_0_0 * r_34_0_0);
  double r_44_sub_0_0 = (r_42_mul_0_0 - r_43_mul_0_0);
  double r_45_mul_0_0 = (r_38_0_0 * r_37_0_0);
  double r_46_mul_0_0 = (r_45_mul_0_0 * r_34_0_0);
  double r_47_mul_0_0 = (r_39_0_0 * r_35_0_0);
  double r_48_add_0_0 = (r_46_mul_0_0 + r_47_mul_0_0);
  double r_49_mul_0_0 = (r_39_0_0 * r_36_0_0);
  double r_50_mul_0_0 = (r_39_0_0 * r_37_0_0);
  double r_51_mul_0_0 = (r_50_mul_0_0 * r_35_0_0);
  double r_52_mul_0_0 = (r_38_0_0 * r_34_0_0);
  double r_53_add_0_0 = (r_51_mul_0_0 + r_52_mul_0_0);
  double r_54_mul_0_0 = (r_39_0_0 * r_37_0_0);
  double r_55_mul_0_0 = (r_54_mul_0_0 * r_34_0_0);
  double r_56_mul_0_0 = (r_38_0_0 * r_35_0_0);
  double r_57_sub_0_0 = (r_55_mul_0_0 - r_56_mul_0_0);
  double r_58_matrix_negate_0_0 = -(r_37_0_0);
  double r_59_mul_0_0 = (r_36_0_0 * r_35_0_0);
  double r_60_mul_0_0 = (r_36_0_0 * r_34_0_0);
  double r_61_0_0 = r_40_mul_0_0;
  double r_61_0_1 = r_44_sub_0_0;
  double r_61_0_2 = r_48_add_0_0;
  double r_61_1_0 = r_49_mul_0_0;
  double r_61_1_1 = r_53_add_0_0;
  double r_61_1_2 = r_57_sub_0_0;
  double r_61_2_0 = r_58_matrix_negate_0_0;
  double r_61_2_1 = r_59_mul_0_0;
  double r_61_2_2 = r_60_mul_0_0;
  double r_62_mul_0_0 = (((r_61_0_0 * r_33_0_0) + (r_61_0_1 * r_33_1_0)) + (r_61_0_2 * r_33_2_0));
  double r_62_mul_0_1 = (((r_61_0_0 * r_33_0_1) + (r_61_0_1 * r_33_1_1)) + (r_61_0_2 * r_33_2_1));
  double r_62_mul_0_2 = (((r_61_0_0 * r_33_0_2) + (r_61_0_1 * r_33_1_2)) + (r_61_0_2 * r_33_2_2));
  double r_62_mul_1_0 = (((r_61_1_0 * r_33_0_0) + (r_61_1_1 * r_33_1_0)) + (r_61_1_2 * r_33_2_0));
  double r_62_mul_1_1 = (((r_61_1_0 * r_33_0_1) + (r_61_1_1 * r_33_1_1)) + (r_61_1_2 * r_33_2_1));
  double r_62_mul_1_2 = (((r_61_1_0 * r_33_0_2) + (r_61_1_1 * r_33_1_2)) + (r_61_1_2 * r_33_2_2));
  double r_62_mul_2_0 = (((r_61_2_0 * r_33_0_0) + (r_61_2_1 * r_33_1_0)) + (r_61_2_2 * r_33_2_0));
  double r_62_mul_2_1 = (((r_61_2_0 * r_33_0_1) + (r_61_2_1 * r_33_1_1)) + (r_61_2_2 * r_33_2_1));
  double r_62_mul_2_2 = (((r_61_2_0 * r_33_0_2) + (r_61_2_1 * r_33_1_2)) + (r_61_2_2 * r_33_2_2));
  double limi_rotation_0_0_0 = r_62_mul_0_0;
  double limi_rotation_0_0_1 = r_62_mul_0_1;
  double limi_rotation_0_0_2 = r_62_mul_0_2;
  double limi_rotation_0_1_0 = r_62_mul_1_0;
  double limi_rotation_0_1_1 = r_62_mul_1_1;
  double limi_rotation_0_1_2 = r_62_mul_1_2;
  double limi_rotation_0_2_0 = r_62_mul_2_0;
  double limi_rotation_0_2_1 = r_62_mul_2_1;
  double limi_rotation_0_2_2 = r_62_mul_2_2;
  double r_63_0_0 = 0;
  double r_64_0_0 = 0;
  double r_65_0_0 = 0;
  double r_66_0_0 = 0;
  double r_67_0_0 = 0;
  double r_68_scalar_0_0 = v_0_0;
  double r_69_0_0 = r_63_0_0;
  double r_69_1_0 = r_64_0_0;
  double r_69_2_0 = r_65_0_0;
  double r_69_3_0 = r_66_0_0;
  double r_69_4_0 = r_67_0_0;
  double r_69_5_0 = r_68_scalar_0_0;
  double r_70_scalar_0_0 = v_0_0;
  double r_71_matrix_negate_0_0 = -(r_70_scalar_0_0);
  double r_72_scalar_0_0 = r_69_0_0;
  double r_73_scalar_0_0 = r_69_1_0;
  double r_74_scalar_0_0 = r_69_2_0;
  double r_75_0_0 = r_72_scalar_0_0;
  double r_75_1_0 = r_73_scalar_0_0;
  double r_75_2_0 = r_74_scalar_0_0;
  double r_76_scalar_0_0 = r_69_3_0;
  double r_77_scalar_0_0 = r_69_4_0;
  double r_78_scalar_0_0 = r_69_5_0;
  double r_79_0_0 = r_76_scalar_0_0;
  double r_79_1_0 = r_77_scalar_0_0;
  double r_79_2_0 = r_78_scalar_0_0;
  double r_80_matrix_negate_0_0 = -(r_71_matrix_negate_0_0);
  double r_81_scalar_0_0 = r_75_1_0;
  double r_82_mul_0_0 = (r_80_matrix_negate_0_0 * r_81_scalar_0_0);
  double r_83_scalar_0_0 = r_75_0_0;
  double r_84_mul_0_0 = (r_71_matrix_negate_0_0 * r_83_scalar_0_0);
  double r_85_0_0 = 0;
  double r_86_0_0 = r_82_mul_0_0;
  double r_86_1_0 = r_84_mul_0_0;
  double r_86_2_0 = r_85_0_0;
  double alpha_cross_linear_0_0_0 = r_86_0_0;
  double alpha_cross_linear_0_1_0 = r_86_1_0;
  double alpha_cross_linear_0_2_0 = r_86_2_0;
  double r_87_matrix_negate_0_0 = -(r_71_matrix_negate_0_0);
  double r_88_scalar_0_0 = r_79_1_0;
  double r_89_mul_0_0 = (r_87_matrix_negate_0_0 * r_88_scalar_0_0);
  double r_90_scalar_0_0 = r_79_0_0;
  double r_91_mul_0_0 = (r_71_matrix_negate_0_0 * r_90_scalar_0_0);
  double r_92_0_0 = 0;
  double r_93_0_0 = r_89_mul_0_0;
  double r_93_1_0 = r_91_mul_0_0;
  double r_93_2_0 = r_92_0_0;
  double alpha_cross_angular_0_0_0 = r_93_0_0;
  double alpha_cross_angular_0_1_0 = r_93_1_0;
  double alpha_cross_angular_0_2_0 = r_93_2_0;
  double r_94_scalar_0_0 = alpha_cross_linear_0_0_0;
  double r_95_scalar_0_0 = alpha_cross_linear_0_1_0;
  double r_96_scalar_0_0 = alpha_cross_linear_0_2_0;
  double r_97_scalar_0_0 = alpha_cross_angular_0_0_0;
  double r_98_scalar_0_0 = alpha_cross_angular_0_1_0;
  double r_99_scalar_0_0 = alpha_cross_angular_0_2_0;
  double r_100_0_0 = r_94_scalar_0_0;
  double r_100_1_0 = r_95_scalar_0_0;
  double r_100_2_0 = r_96_scalar_0_0;
  double r_100_3_0 = r_97_scalar_0_0;
  double r_100_4_0 = r_98_scalar_0_0;
  double r_100_5_0 = r_99_scalar_0_0;
  double alpha_cross_0_0_0 = r_100_0_0;
  double alpha_cross_0_1_0 = r_100_1_0;
  double alpha_cross_0_2_0 = r_100_2_0;
  double alpha_cross_0_3_0 = r_100_3_0;
  double alpha_cross_0_4_0 = r_100_4_0;
  double alpha_cross_0_5_0 = r_100_5_0;
  double r_101_scalar_0_0 = a_0_0;
  double r_102_scalar_0_0 = alpha_cross_0_5_0;
  double r_103_add_0_0 = (r_101_scalar_0_0 + r_102_scalar_0_0);
  double r_104_scalar_0_0 = alpha_cross_0_0_0;
  double r_105_scalar_0_0 = alpha_cross_0_1_0;
  double r_106_scalar_0_0 = alpha_cross_0_2_0;
  double r_107_scalar_0_0 = alpha_cross_0_3_0;
  double r_108_scalar_0_0 = alpha_cross_0_4_0;
  double r_109_0_0 = r_104_scalar_0_0;
  double r_109_1_0 = r_105_scalar_0_0;
  double r_109_2_0 = r_106_scalar_0_0;
  double r_109_3_0 = r_107_scalar_0_0;
  double r_109_4_0 = r_108_scalar_0_0;
  double r_109_5_0 = r_103_add_0_0;
  double r_110_scalar_0_0 = qcos_1_0;
  double r_111_scalar_0_0 = qsin_1_0;
  double r_112_matrix_negate_0_0 = -(r_111_scalar_0_0);
  double r_113_0_0 = 0;
  double r_114_scalar_0_0 = qsin_1_0;
  double r_115_scalar_0_0 = qcos_1_0;
  double r_116_0_0 = 0;
  double r_117_0_0 = 0;
  double r_118_0_0 = 0;
  double r_119_0_0 = 1;
  double r_120_0_0 = r_110_scalar_0_0;
  double r_120_0_1 = r_112_matrix_negate_0_0;
  double r_120_0_2 = r_113_0_0;
  double r_120_1_0 = r_114_scalar_0_0;
  double r_120_1_1 = r_115_scalar_0_0;
  double r_120_1_2 = r_116_0_0;
  double r_120_2_0 = r_117_0_0;
  double r_120_2_1 = r_118_0_0;
  double r_120_2_2 = r_119_0_0;
  double r_121_0_0 = 0;
  double r_122_0_0 = -1;
  double r_123_0_0 = 1;
  double r_124_0_0 = 0;
  double r_125_0_0 = 1;
  double r_126_0_0 = 0;
  double r_127_mul_0_0 = (r_125_0_0 * r_123_0_0);
  double r_128_mul_0_0 = (r_125_0_0 * r_124_0_0);
  double r_129_mul_0_0 = (r_128_mul_0_0 * r_122_0_0);
  double r_130_mul_0_0 = (r_126_0_0 * r_121_0_0);
  double r_131_sub_0_0 = (r_129_mul_0_0 - r_130_mul_0_0);
  double r_132_mul_0_0 = (r_125_0_0 * r_124_0_0);
  double r_133_mul_0_0 = (r_132_mul_0_0 * r_121_0_0);
  double r_134_mul_0_0 = (r_126_0_0 * r_122_0_0);
  double r_135_add_0_0 = (r_133_mul_0_0 + r_134_mul_0_0);
  double r_136_mul_0_0 = (r_126_0_0 * r_123_0_0);
  double r_137_mul_0_0 = (r_126_0_0 * r_124_0_0);
  double r_138_mul_0_0 = (r_137_mul_0_0 * r_122_0_0);
  double r_139_mul_0_0 = (r_125_0_0 * r_121_0_0);
  double r_140_add_0_0 = (r_138_mul_0_0 + r_139_mul_0_0);
  double r_141_mul_0_0 = (r_126_0_0 * r_124_0_0);
  double r_142_mul_0_0 = (r_141_mul_0_0 * r_121_0_0);
  double r_143_mul_0_0 = (r_125_0_0 * r_122_0_0);
  double r_144_sub_0_0 = (r_142_mul_0_0 - r_143_mul_0_0);
  double r_145_matrix_negate_0_0 = -(r_124_0_0);
  double r_146_mul_0_0 = (r_123_0_0 * r_122_0_0);
  double r_147_mul_0_0 = (r_123_0_0 * r_121_0_0);
  double r_148_0_0 = r_127_mul_0_0;
  double r_148_0_1 = r_131_sub_0_0;
  double r_148_0_2 = r_135_add_0_0;
  double r_148_1_0 = r_136_mul_0_0;
  double r_148_1_1 = r_140_add_0_0;
  double r_148_1_2 = r_144_sub_0_0;
  double r_148_2_0 = r_145_matrix_negate_0_0;
  double r_148_2_1 = r_146_mul_0_0;
  double r_148_2_2 = r_147_mul_0_0;
  double r_149_mul_0_0 = (((r_148_0_0 * r_120_0_0) + (r_148_0_1 * r_120_1_0)) + (r_148_0_2 * r_120_2_0));
  double r_149_mul_0_1 = (((r_148_0_0 * r_120_0_1) + (r_148_0_1 * r_120_1_1)) + (r_148_0_2 * r_120_2_1));
  double r_149_mul_0_2 = (((r_148_0_0 * r_120_0_2) + (r_148_0_1 * r_120_1_2)) + (r_148_0_2 * r_120_2_2));
  double r_149_mul_1_0 = (((r_148_1_0 * r_120_0_0) + (r_148_1_1 * r_120_1_0)) + (r_148_1_2 * r_120_2_0));
  double r_149_mul_1_1 = (((r_148_1_0 * r_120_0_1) + (r_148_1_1 * r_120_1_1)) + (r_148_1_2 * r_120_2_1));
  double r_149_mul_1_2 = (((r_148_1_0 * r_120_0_2) + (r_148_1_1 * r_120_1_2)) + (r_148_1_2 * r_120_2_2));
  double r_149_mul_2_0 = (((r_148_2_0 * r_120_0_0) + (r_148_2_1 * r_120_1_0)) + (r_148_2_2 * r_120_2_0));
  double r_149_mul_2_1 = (((r_148_2_0 * r_120_0_1) + (r_148_2_1 * r_120_1_1)) + (r_148_2_2 * r_120_2_1));
  double r_149_mul_2_2 = (((r_148_2_0 * r_120_0_2) + (r_148_2_1 * r_120_1_2)) + (r_148_2_2 * r_120_2_2));
  double limi_rotation_1_0_0 = r_149_mul_0_0;
  double limi_rotation_1_0_1 = r_149_mul_0_1;
  double limi_rotation_1_0_2 = r_149_mul_0_2;
  double limi_rotation_1_1_0 = r_149_mul_1_0;
  double limi_rotation_1_1_1 = r_149_mul_1_1;
  double limi_rotation_1_1_2 = r_149_mul_1_2;
  double limi_rotation_1_2_0 = r_149_mul_2_0;
  double limi_rotation_1_2_1 = r_149_mul_2_1;
  double limi_rotation_1_2_2 = r_149_mul_2_2;
  double r_150_mul_0_0 = (((limi_rotation_0_0_0 * limi_rotation_1_0_0) + (limi_rotation_0_0_1 * limi_rotation_1_1_0)) + (limi_rotation_0_0_2 * limi_rotation_1_2_0));
  double r_150_mul_0_1 = (((limi_rotation_0_0_0 * limi_rotation_1_0_1) + (limi_rotation_0_0_1 * limi_rotation_1_1_1)) + (limi_rotation_0_0_2 * limi_rotation_1_2_1));
  double r_150_mul_0_2 = (((limi_rotation_0_0_0 * limi_rotation_1_0_2) + (limi_rotation_0_0_1 * limi_rotation_1_1_2)) + (limi_rotation_0_0_2 * limi_rotation_1_2_2));
  double r_150_mul_1_0 = (((limi_rotation_0_1_0 * limi_rotation_1_0_0) + (limi_rotation_0_1_1 * limi_rotation_1_1_0)) + (limi_rotation_0_1_2 * limi_rotation_1_2_0));
  double r_150_mul_1_1 = (((limi_rotation_0_1_0 * limi_rotation_1_0_1) + (limi_rotation_0_1_1 * limi_rotation_1_1_1)) + (limi_rotation_0_1_2 * limi_rotation_1_2_1));
  double r_150_mul_1_2 = (((limi_rotation_0_1_0 * limi_rotation_1_0_2) + (limi_rotation_0_1_1 * limi_rotation_1_1_2)) + (limi_rotation_0_1_2 * limi_rotation_1_2_2));
  double r_150_mul_2_0 = (((limi_rotation_0_2_0 * limi_rotation_1_0_0) + (limi_rotation_0_2_1 * limi_rotation_1_1_0)) + (limi_rotation_0_2_2 * limi_rotation_1_2_0));
  double r_150_mul_2_1 = (((limi_rotation_0_2_0 * limi_rotation_1_0_1) + (limi_rotation_0_2_1 * limi_rotation_1_1_1)) + (limi_rotation_0_2_2 * limi_rotation_1_2_1));
  double r_150_mul_2_2 = (((limi_rotation_0_2_0 * limi_rotation_1_0_2) + (limi_rotation_0_2_1 * limi_rotation_1_1_2)) + (limi_rotation_0_2_2 * limi_rotation_1_2_2));
  double r_151_mul_0_0 = (((limi_rotation_0_0_0 * limi_translation_1_0_0) + (limi_rotation_0_0_1 * limi_translation_1_1_0)) + (limi_rotation_0_0_2 * limi_translation_1_2_0));
  double r_151_mul_1_0 = (((limi_rotation_0_1_0 * limi_translation_1_0_0) + (limi_rotation_0_1_1 * limi_translation_1_1_0)) + (limi_rotation_0_1_2 * limi_translation_1_2_0));
  double r_151_mul_2_0 = (((limi_rotation_0_2_0 * limi_translation_1_0_0) + (limi_rotation_0_2_1 * limi_translation_1_1_0)) + (limi_rotation_0_2_2 * limi_translation_1_2_0));
  double r_152_add_0_0 = (limi_translation_0_0_0 + r_151_mul_0_0);
  double r_152_add_1_0 = (limi_translation_0_1_0 + r_151_mul_1_0);
  double r_152_add_2_0 = (limi_translation_0_2_0 + r_151_mul_2_0);
  double r_153_0_0 = 0;
  double r_154_0_0 = 0;
  double r_155_0_0 = 0;
  double r_156_0_0 = 0;
  double r_157_0_0 = 0;
  double r_158_scalar_0_0 = v_1_0;
  double r_159_0_0 = r_153_0_0;
  double r_159_1_0 = r_154_0_0;
  double r_159_2_0 = r_155_0_0;
  double r_159_3_0 = r_156_0_0;
  double r_159_4_0 = r_157_0_0;
  double r_159_5_0 = r_158_scalar_0_0;
  double r_160_scalar_0_0 = r_69_0_0;
  double r_161_scalar_0_0 = r_69_1_0;
  double r_162_scalar_0_0 = r_69_2_0;
  double r_163_0_0 = r_160_scalar_0_0;
  double r_163_1_0 = r_161_scalar_0_0;
  double r_163_2_0 = r_162_scalar_0_0;
  double r_164_scalar_0_0 = r_69_3_0;
  double r_165_scalar_0_0 = r_69_4_0;
  double r_166_scalar_0_0 = r_69_5_0;
  double r_167_0_0 = r_164_scalar_0_0;
  double r_167_1_0 = r_165_scalar_0_0;
  double r_167_2_0 = r_166_scalar_0_0;
  double r_168_scalar_0_0 = r_159_0_0;
  double r_169_scalar_0_0 = r_159_1_0;
  double r_170_scalar_0_0 = r_159_2_0;
  double r_171_0_0 = r_168_scalar_0_0;
  double r_171_1_0 = r_169_scalar_0_0;
  double r_171_2_0 = r_170_scalar_0_0;
  double r_172_scalar_0_0 = r_159_3_0;
  double r_173_scalar_0_0 = r_159_4_0;
  double r_174_scalar_0_0 = r_159_5_0;
  double r_175_0_0 = r_172_scalar_0_0;
  double r_175_1_0 = r_173_scalar_0_0;
  double r_175_2_0 = r_174_scalar_0_0;
  double r_176_vector_cross_0_0 = ((limi_translation_1_1_0 * r_167_2_0) - (limi_translation_1_2_0 * r_167_1_0));
  double r_176_vector_cross_1_0 = ((limi_translation_1_2_0 * r_167_0_0) - (limi_translation_1_0_0 * r_167_2_0));
  double r_176_vector_cross_2_0 = ((limi_translation_1_0_0 * r_167_1_0) - (limi_translation_1_1_0 * r_167_0_0));
  double r_177_sub_0_0 = (r_163_0_0 - r_176_vector_cross_0_0);
  double r_177_sub_1_0 = (r_163_1_0 - r_176_vector_cross_1_0);
  double r_177_sub_2_0 = (r_163_2_0 - r_176_vector_cross_2_0);
  double r_178_transpose_0_0 = limi_rotation_1_0_0;
  double r_178_transpose_0_1 = limi_rotation_1_1_0;
  double r_178_transpose_0_2 = limi_rotation_1_2_0;
  double r_178_transpose_1_0 = limi_rotation_1_0_1;
  double r_178_transpose_1_1 = limi_rotation_1_1_1;
  double r_178_transpose_1_2 = limi_rotation_1_2_1;
  double r_178_transpose_2_0 = limi_rotation_1_0_2;
  double r_178_transpose_2_1 = limi_rotation_1_1_2;
  double r_178_transpose_2_2 = limi_rotation_1_2_2;
  double r_179_mul_0_0 = (((r_178_transpose_0_0 * r_177_sub_0_0) + (r_178_transpose_0_1 * r_177_sub_1_0)) + (r_178_transpose_0_2 * r_177_sub_2_0));
  double r_179_mul_1_0 = (((r_178_transpose_1_0 * r_177_sub_0_0) + (r_178_transpose_1_1 * r_177_sub_1_0)) + (r_178_transpose_1_2 * r_177_sub_2_0));
  double r_179_mul_2_0 = (((r_178_transpose_2_0 * r_177_sub_0_0) + (r_178_transpose_2_1 * r_177_sub_1_0)) + (r_178_transpose_2_2 * r_177_sub_2_0));
  double r_180_add_0_0 = (r_171_0_0 + r_179_mul_0_0);
  double r_180_add_1_0 = (r_171_1_0 + r_179_mul_1_0);
  double r_180_add_2_0 = (r_171_2_0 + r_179_mul_2_0);
  double r_181_mul_0_0 = (((r_178_transpose_0_0 * r_167_0_0) + (r_178_transpose_0_1 * r_167_1_0)) + (r_178_transpose_0_2 * r_167_2_0));
  double r_181_mul_1_0 = (((r_178_transpose_1_0 * r_167_0_0) + (r_178_transpose_1_1 * r_167_1_0)) + (r_178_transpose_1_2 * r_167_2_0));
  double r_181_mul_2_0 = (((r_178_transpose_2_0 * r_167_0_0) + (r_178_transpose_2_1 * r_167_1_0)) + (r_178_transpose_2_2 * r_167_2_0));
  double r_182_add_0_0 = (r_175_0_0 + r_181_mul_0_0);
  double r_182_add_1_0 = (r_175_1_0 + r_181_mul_1_0);
  double r_182_add_2_0 = (r_175_2_0 + r_181_mul_2_0);
  double r_183_scalar_0_0 = r_180_add_0_0;
  double r_184_scalar_0_0 = r_180_add_1_0;
  double r_185_scalar_0_0 = r_180_add_2_0;
  double r_186_scalar_0_0 = r_182_add_0_0;
  double r_187_scalar_0_0 = r_182_add_1_0;
  double r_188_scalar_0_0 = r_182_add_2_0;
  double r_189_0_0 = r_183_scalar_0_0;
  double r_189_1_0 = r_184_scalar_0_0;
  double r_189_2_0 = r_185_scalar_0_0;
  double r_189_3_0 = r_186_scalar_0_0;
  double r_189_4_0 = r_187_scalar_0_0;
  double r_189_5_0 = r_188_scalar_0_0;
  double act_motion_inv_1_0_0 = r_189_0_0;
  double act_motion_inv_1_1_0 = r_189_1_0;
  double act_motion_inv_1_2_0 = r_189_2_0;
  double act_motion_inv_1_3_0 = r_189_3_0;
  double act_motion_inv_1_4_0 = r_189_4_0;
  double act_motion_inv_1_5_0 = r_189_5_0;
  double r_190_scalar_0_0 = v_1_0;
  double r_191_matrix_negate_0_0 = -(r_190_scalar_0_0);
  double r_192_scalar_0_0 = act_motion_inv_1_0_0;
  double r_193_scalar_0_0 = act_motion_inv_1_1_0;
  double r_194_scalar_0_0 = act_motion_inv_1_2_0;
  double r_195_0_0 = r_192_scalar_0_0;
  double r_195_1_0 = r_193_scalar_0_0;
  double r_195_2_0 = r_194_scalar_0_0;
  double r_196_scalar_0_0 = act_motion_inv_1_3_0;
  double r_197_scalar_0_0 = act_motion_inv_1_4_0;
  double r_198_scalar_0_0 = act_motion_inv_1_5_0;
  double r_199_0_0 = r_196_scalar_0_0;
  double r_199_1_0 = r_197_scalar_0_0;
  double r_199_2_0 = r_198_scalar_0_0;
  double r_200_matrix_negate_0_0 = -(r_191_matrix_negate_0_0);
  double r_201_scalar_0_0 = r_195_1_0;
  double r_202_mul_0_0 = (r_200_matrix_negate_0_0 * r_201_scalar_0_0);
  double r_203_scalar_0_0 = r_195_0_0;
  double r_204_mul_0_0 = (r_191_matrix_negate_0_0 * r_203_scalar_0_0);
  double r_205_0_0 = 0;
  double r_206_0_0 = r_202_mul_0_0;
  double r_206_1_0 = r_204_mul_0_0;
  double r_206_2_0 = r_205_0_0;
  double alpha_cross_linear_1_0_0 = r_206_0_0;
  double alpha_cross_linear_1_1_0 = r_206_1_0;
  double alpha_cross_linear_1_2_0 = r_206_2_0;
  double r_207_matrix_negate_0_0 = -(r_191_matrix_negate_0_0);
  double r_208_scalar_0_0 = r_199_1_0;
  double r_209_mul_0_0 = (r_207_matrix_negate_0_0 * r_208_scalar_0_0);
  double r_210_scalar_0_0 = r_199_0_0;
  double r_211_mul_0_0 = (r_191_matrix_negate_0_0 * r_210_scalar_0_0);
  double r_212_0_0 = 0;
  double r_213_0_0 = r_209_mul_0_0;
  double r_213_1_0 = r_211_mul_0_0;
  double r_213_2_0 = r_212_0_0;
  double alpha_cross_angular_1_0_0 = r_213_0_0;
  double alpha_cross_angular_1_1_0 = r_213_1_0;
  double alpha_cross_angular_1_2_0 = r_213_2_0;
  double r_214_scalar_0_0 = alpha_cross_linear_1_0_0;
  double r_215_scalar_0_0 = alpha_cross_linear_1_1_0;
  double r_216_scalar_0_0 = alpha_cross_linear_1_2_0;
  double r_217_scalar_0_0 = alpha_cross_angular_1_0_0;
  double r_218_scalar_0_0 = alpha_cross_angular_1_1_0;
  double r_219_scalar_0_0 = alpha_cross_angular_1_2_0;
  double r_220_0_0 = r_214_scalar_0_0;
  double r_220_1_0 = r_215_scalar_0_0;
  double r_220_2_0 = r_216_scalar_0_0;
  double r_220_3_0 = r_217_scalar_0_0;
  double r_220_4_0 = r_218_scalar_0_0;
  double r_220_5_0 = r_219_scalar_0_0;
  double alpha_cross_1_0_0 = r_220_0_0;
  double alpha_cross_1_1_0 = r_220_1_0;
  double alpha_cross_1_2_0 = r_220_2_0;
  double alpha_cross_1_3_0 = r_220_3_0;
  double alpha_cross_1_4_0 = r_220_4_0;
  double alpha_cross_1_5_0 = r_220_5_0;
  double r_221_scalar_0_0 = a_1_0;
  double r_222_scalar_0_0 = alpha_cross_1_5_0;
  double r_223_add_0_0 = (r_221_scalar_0_0 + r_222_scalar_0_0);
  double r_224_scalar_0_0 = alpha_cross_1_0_0;
  double r_225_scalar_0_0 = alpha_cross_1_1_0;
  double r_226_scalar_0_0 = alpha_cross_1_2_0;
  double r_227_scalar_0_0 = alpha_cross_1_3_0;
  double r_228_scalar_0_0 = alpha_cross_1_4_0;
  double r_229_0_0 = r_224_scalar_0_0;
  double r_229_1_0 = r_225_scalar_0_0;
  double r_229_2_0 = r_226_scalar_0_0;
  double r_229_3_0 = r_227_scalar_0_0;
  double r_229_4_0 = r_228_scalar_0_0;
  double r_229_5_0 = r_223_add_0_0;
  double r_230_scalar_0_0 = r_109_0_0;
  double r_231_scalar_0_0 = r_109_1_0;
  double r_232_scalar_0_0 = r_109_2_0;
  double r_233_0_0 = r_230_scalar_0_0;
  double r_233_1_0 = r_231_scalar_0_0;
  double r_233_2_0 = r_232_scalar_0_0;
  double r_234_scalar_0_0 = r_109_3_0;
  double r_235_scalar_0_0 = r_109_4_0;
  double r_236_scalar_0_0 = r_109_5_0;
  double r_237_0_0 = r_234_scalar_0_0;
  double r_237_1_0 = r_235_scalar_0_0;
  double r_237_2_0 = r_236_scalar_0_0;
  double r_238_vector_cross_0_0 = ((limi_translation_1_1_0 * r_237_2_0) - (limi_translation_1_2_0 * r_237_1_0));
  double r_238_vector_cross_1_0 = ((limi_translation_1_2_0 * r_237_0_0) - (limi_translation_1_0_0 * r_237_2_0));
  double r_238_vector_cross_2_0 = ((limi_translation_1_0_0 * r_237_1_0) - (limi_translation_1_1_0 * r_237_0_0));
  double r_239_sub_0_0 = (r_233_0_0 - r_238_vector_cross_0_0);
  double r_239_sub_1_0 = (r_233_1_0 - r_238_vector_cross_1_0);
  double r_239_sub_2_0 = (r_233_2_0 - r_238_vector_cross_2_0);
  double r_240_transpose_0_0 = limi_rotation_1_0_0;
  double r_240_transpose_0_1 = limi_rotation_1_1_0;
  double r_240_transpose_0_2 = limi_rotation_1_2_0;
  double r_240_transpose_1_0 = limi_rotation_1_0_1;
  double r_240_transpose_1_1 = limi_rotation_1_1_1;
  double r_240_transpose_1_2 = limi_rotation_1_2_1;
  double r_240_transpose_2_0 = limi_rotation_1_0_2;
  double r_240_transpose_2_1 = limi_rotation_1_1_2;
  double r_240_transpose_2_2 = limi_rotation_1_2_2;
  double r_241_mul_0_0 = (((r_240_transpose_0_0 * r_239_sub_0_0) + (r_240_transpose_0_1 * r_239_sub_1_0)) + (r_240_transpose_0_2 * r_239_sub_2_0));
  double r_241_mul_1_0 = (((r_240_transpose_1_0 * r_239_sub_0_0) + (r_240_transpose_1_1 * r_239_sub_1_0)) + (r_240_transpose_1_2 * r_239_sub_2_0));
  double r_241_mul_2_0 = (((r_240_transpose_2_0 * r_239_sub_0_0) + (r_240_transpose_2_1 * r_239_sub_1_0)) + (r_240_transpose_2_2 * r_239_sub_2_0));
  double r_242_mul_0_0 = (((r_240_transpose_0_0 * r_237_0_0) + (r_240_transpose_0_1 * r_237_1_0)) + (r_240_transpose_0_2 * r_237_2_0));
  double r_242_mul_1_0 = (((r_240_transpose_1_0 * r_237_0_0) + (r_240_transpose_1_1 * r_237_1_0)) + (r_240_transpose_1_2 * r_237_2_0));
  double r_242_mul_2_0 = (((r_240_transpose_2_0 * r_237_0_0) + (r_240_transpose_2_1 * r_237_1_0)) + (r_240_transpose_2_2 * r_237_2_0));
  double r_243_scalar_0_0 = r_241_mul_0_0;
  double r_244_scalar_0_0 = r_241_mul_1_0;
  double r_245_scalar_0_0 = r_241_mul_2_0;
  double r_246_scalar_0_0 = r_242_mul_0_0;
  double r_247_scalar_0_0 = r_242_mul_1_0;
  double r_248_scalar_0_0 = r_242_mul_2_0;
  double r_249_0_0 = r_243_scalar_0_0;
  double r_249_1_0 = r_244_scalar_0_0;
  double r_249_2_0 = r_245_scalar_0_0;
  double r_249_3_0 = r_246_scalar_0_0;
  double r_249_4_0 = r_247_scalar_0_0;
  double r_249_5_0 = r_248_scalar_0_0;
  double act_inv_1_0_0 = r_249_0_0;
  double act_inv_1_1_0 = r_249_1_0;
  double act_inv_1_2_0 = r_249_2_0;
  double act_inv_1_3_0 = r_249_3_0;
  double act_inv_1_4_0 = r_249_4_0;
  double act_inv_1_5_0 = r_249_5_0;
  double r_250_add_0_0 = (r_229_0_0 + act_inv_1_0_0);
  double r_250_add_1_0 = (r_229_1_0 + act_inv_1_1_0);
  double r_250_add_2_0 = (r_229_2_0 + act_inv_1_2_0);
  double r_250_add_3_0 = (r_229_3_0 + act_inv_1_3_0);
  double r_250_add_4_0 = (r_229_4_0 + act_inv_1_4_0);
  double r_250_add_5_0 = (r_229_5_0 + act_inv_1_5_0);
  double r_251_scalar_0_0 = qcos_2_0;
  double r_252_scalar_0_0 = qsin_2_0;
  double r_253_matrix_negate_0_0 = -(r_252_scalar_0_0);
  double r_254_0_0 = 0;
  double r_255_scalar_0_0 = qsin_2_0;
  double r_256_scalar_0_0 = qcos_2_0;
  double r_257_0_0 = 0;
  double r_258_0_0 = 0;
  double r_259_0_0 = 0;
  double r_260_0_0 = 1;
  double r_261_0_0 = r_251_scalar_0_0;
  double r_261_0_1 = r_253_matrix_negate_0_0;
  double r_261_0_2 = r_254_0_0;
  double r_261_1_0 = r_255_scalar_0_0;
  double r_261_1_1 = r_256_scalar_0_0;
  double r_261_1_2 = r_257_0_0;
  double r_261_2_0 = r_258_0_0;
  double r_261_2_1 = r_259_0_0;
  double r_261_2_2 = r_260_0_0;
  double r_262_0_0 = 0;
  double r_263_0_0 = 1;
  double r_264_0_0 = 1;
  double r_265_0_0 = 0;
  double r_266_0_0 = 1;
  double r_267_0_0 = 0;
  double r_268_mul_0_0 = (r_266_0_0 * r_264_0_0);
  double r_269_mul_0_0 = (r_266_0_0 * r_265_0_0);
  double r_270_mul_0_0 = (r_269_mul_0_0 * r_263_0_0);
  double r_271_mul_0_0 = (r_267_0_0 * r_262_0_0);
  double r_272_sub_0_0 = (r_270_mul_0_0 - r_271_mul_0_0);
  double r_273_mul_0_0 = (r_266_0_0 * r_265_0_0);
  double r_274_mul_0_0 = (r_273_mul_0_0 * r_262_0_0);
  double r_275_mul_0_0 = (r_267_0_0 * r_263_0_0);
  double r_276_add_0_0 = (r_274_mul_0_0 + r_275_mul_0_0);
  double r_277_mul_0_0 = (r_267_0_0 * r_264_0_0);
  double r_278_mul_0_0 = (r_267_0_0 * r_265_0_0);
  double r_279_mul_0_0 = (r_278_mul_0_0 * r_263_0_0);
  double r_280_mul_0_0 = (r_266_0_0 * r_262_0_0);
  double r_281_add_0_0 = (r_279_mul_0_0 + r_280_mul_0_0);
  double r_282_mul_0_0 = (r_267_0_0 * r_265_0_0);
  double r_283_mul_0_0 = (r_282_mul_0_0 * r_262_0_0);
  double r_284_mul_0_0 = (r_266_0_0 * r_263_0_0);
  double r_285_sub_0_0 = (r_283_mul_0_0 - r_284_mul_0_0);
  double r_286_matrix_negate_0_0 = -(r_265_0_0);
  double r_287_mul_0_0 = (r_264_0_0 * r_263_0_0);
  double r_288_mul_0_0 = (r_264_0_0 * r_262_0_0);
  double r_289_0_0 = r_268_mul_0_0;
  double r_289_0_1 = r_272_sub_0_0;
  double r_289_0_2 = r_276_add_0_0;
  double r_289_1_0 = r_277_mul_0_0;
  double r_289_1_1 = r_281_add_0_0;
  double r_289_1_2 = r_285_sub_0_0;
  double r_289_2_0 = r_286_matrix_negate_0_0;
  double r_289_2_1 = r_287_mul_0_0;
  double r_289_2_2 = r_288_mul_0_0;
  double r_290_mul_0_0 = (((r_289_0_0 * r_261_0_0) + (r_289_0_1 * r_261_1_0)) + (r_289_0_2 * r_261_2_0));
  double r_290_mul_0_1 = (((r_289_0_0 * r_261_0_1) + (r_289_0_1 * r_261_1_1)) + (r_289_0_2 * r_261_2_1));
  double r_290_mul_0_2 = (((r_289_0_0 * r_261_0_2) + (r_289_0_1 * r_261_1_2)) + (r_289_0_2 * r_261_2_2));
  double r_290_mul_1_0 = (((r_289_1_0 * r_261_0_0) + (r_289_1_1 * r_261_1_0)) + (r_289_1_2 * r_261_2_0));
  double r_290_mul_1_1 = (((r_289_1_0 * r_261_0_1) + (r_289_1_1 * r_261_1_1)) + (r_289_1_2 * r_261_2_1));
  double r_290_mul_1_2 = (((r_289_1_0 * r_261_0_2) + (r_289_1_1 * r_261_1_2)) + (r_289_1_2 * r_261_2_2));
  double r_290_mul_2_0 = (((r_289_2_0 * r_261_0_0) + (r_289_2_1 * r_261_1_0)) + (r_289_2_2 * r_261_2_0));
  double r_290_mul_2_1 = (((r_289_2_0 * r_261_0_1) + (r_289_2_1 * r_261_1_1)) + (r_289_2_2 * r_261_2_1));
  double r_290_mul_2_2 = (((r_289_2_0 * r_261_0_2) + (r_289_2_1 * r_261_1_2)) + (r_289_2_2 * r_261_2_2));
  double limi_rotation_2_0_0 = r_290_mul_0_0;
  double limi_rotation_2_0_1 = r_290_mul_0_1;
  double limi_rotation_2_0_2 = r_290_mul_0_2;
  double limi_rotation_2_1_0 = r_290_mul_1_0;
  double limi_rotation_2_1_1 = r_290_mul_1_1;
  double limi_rotation_2_1_2 = r_290_mul_1_2;
  double limi_rotation_2_2_0 = r_290_mul_2_0;
  double limi_rotation_2_2_1 = r_290_mul_2_1;
  double limi_rotation_2_2_2 = r_290_mul_2_2;
  double r_291_mul_0_0 = (((r_150_mul_0_0 * limi_rotation_2_0_0) + (r_150_mul_0_1 * limi_rotation_2_1_0)) + (r_150_mul_0_2 * limi_rotation_2_2_0));
  double r_291_mul_0_1 = (((r_150_mul_0_0 * limi_rotation_2_0_1) + (r_150_mul_0_1 * limi_rotation_2_1_1)) + (r_150_mul_0_2 * limi_rotation_2_2_1));
  double r_291_mul_0_2 = (((r_150_mul_0_0 * limi_rotation_2_0_2) + (r_150_mul_0_1 * limi_rotation_2_1_2)) + (r_150_mul_0_2 * limi_rotation_2_2_2));
  double r_291_mul_1_0 = (((r_150_mul_1_0 * limi_rotation_2_0_0) + (r_150_mul_1_1 * limi_rotation_2_1_0)) + (r_150_mul_1_2 * limi_rotation_2_2_0));
  double r_291_mul_1_1 = (((r_150_mul_1_0 * limi_rotation_2_0_1) + (r_150_mul_1_1 * limi_rotation_2_1_1)) + (r_150_mul_1_2 * limi_rotation_2_2_1));
  double r_291_mul_1_2 = (((r_150_mul_1_0 * limi_rotation_2_0_2) + (r_150_mul_1_1 * limi_rotation_2_1_2)) + (r_150_mul_1_2 * limi_rotation_2_2_2));
  double r_291_mul_2_0 = (((r_150_mul_2_0 * limi_rotation_2_0_0) + (r_150_mul_2_1 * limi_rotation_2_1_0)) + (r_150_mul_2_2 * limi_rotation_2_2_0));
  double r_291_mul_2_1 = (((r_150_mul_2_0 * limi_rotation_2_0_1) + (r_150_mul_2_1 * limi_rotation_2_1_1)) + (r_150_mul_2_2 * limi_rotation_2_2_1));
  double r_291_mul_2_2 = (((r_150_mul_2_0 * limi_rotation_2_0_2) + (r_150_mul_2_1 * limi_rotation_2_1_2)) + (r_150_mul_2_2 * limi_rotation_2_2_2));
  double r_292_mul_0_0 = (((r_150_mul_0_0 * limi_translation_2_0_0) + (r_150_mul_0_1 * limi_translation_2_1_0)) + (r_150_mul_0_2 * limi_translation_2_2_0));
  double r_292_mul_1_0 = (((r_150_mul_1_0 * limi_translation_2_0_0) + (r_150_mul_1_1 * limi_translation_2_1_0)) + (r_150_mul_1_2 * limi_translation_2_2_0));
  double r_292_mul_2_0 = (((r_150_mul_2_0 * limi_translation_2_0_0) + (r_150_mul_2_1 * limi_translation_2_1_0)) + (r_150_mul_2_2 * limi_translation_2_2_0));
  double r_293_add_0_0 = (r_152_add_0_0 + r_292_mul_0_0);
  double r_293_add_1_0 = (r_152_add_1_0 + r_292_mul_1_0);
  double r_293_add_2_0 = (r_152_add_2_0 + r_292_mul_2_0);
  double r_294_0_0 = 0;
  double r_295_0_0 = 0;
  double r_296_0_0 = 0;
  double r_297_0_0 = 0;
  double r_298_0_0 = 0;
  double r_299_scalar_0_0 = v_2_0;
  double r_300_0_0 = r_294_0_0;
  double r_300_1_0 = r_295_0_0;
  double r_300_2_0 = r_296_0_0;
  double r_300_3_0 = r_297_0_0;
  double r_300_4_0 = r_298_0_0;
  double r_300_5_0 = r_299_scalar_0_0;
  double r_301_scalar_0_0 = act_motion_inv_1_0_0;
  double r_302_scalar_0_0 = act_motion_inv_1_1_0;
  double r_303_scalar_0_0 = act_motion_inv_1_2_0;
  double r_304_0_0 = r_301_scalar_0_0;
  double r_304_1_0 = r_302_scalar_0_0;
  double r_304_2_0 = r_303_scalar_0_0;
  double r_305_scalar_0_0 = act_motion_inv_1_3_0;
  double r_306_scalar_0_0 = act_motion_inv_1_4_0;
  double r_307_scalar_0_0 = act_motion_inv_1_5_0;
  double r_308_0_0 = r_305_scalar_0_0;
  double r_308_1_0 = r_306_scalar_0_0;
  double r_308_2_0 = r_307_scalar_0_0;
  double r_309_scalar_0_0 = r_300_0_0;
  double r_310_scalar_0_0 = r_300_1_0;
  double r_311_scalar_0_0 = r_300_2_0;
  double r_312_0_0 = r_309_scalar_0_0;
  double r_312_1_0 = r_310_scalar_0_0;
  double r_312_2_0 = r_311_scalar_0_0;
  double r_313_scalar_0_0 = r_300_3_0;
  double r_314_scalar_0_0 = r_300_4_0;
  double r_315_scalar_0_0 = r_300_5_0;
  double r_316_0_0 = r_313_scalar_0_0;
  double r_316_1_0 = r_314_scalar_0_0;
  double r_316_2_0 = r_315_scalar_0_0;
  double r_317_vector_cross_0_0 = ((limi_translation_2_1_0 * r_308_2_0) - (limi_translation_2_2_0 * r_308_1_0));
  double r_317_vector_cross_1_0 = ((limi_translation_2_2_0 * r_308_0_0) - (limi_translation_2_0_0 * r_308_2_0));
  double r_317_vector_cross_2_0 = ((limi_translation_2_0_0 * r_308_1_0) - (limi_translation_2_1_0 * r_308_0_0));
  double r_318_sub_0_0 = (r_304_0_0 - r_317_vector_cross_0_0);
  double r_318_sub_1_0 = (r_304_1_0 - r_317_vector_cross_1_0);
  double r_318_sub_2_0 = (r_304_2_0 - r_317_vector_cross_2_0);
  double r_319_transpose_0_0 = limi_rotation_2_0_0;
  double r_319_transpose_0_1 = limi_rotation_2_1_0;
  double r_319_transpose_0_2 = limi_rotation_2_2_0;
  double r_319_transpose_1_0 = limi_rotation_2_0_1;
  double r_319_transpose_1_1 = limi_rotation_2_1_1;
  double r_319_transpose_1_2 = limi_rotation_2_2_1;
  double r_319_transpose_2_0 = limi_rotation_2_0_2;
  double r_319_transpose_2_1 = limi_rotation_2_1_2;
  double r_319_transpose_2_2 = limi_rotation_2_2_2;
  double r_320_mul_0_0 = (((r_319_transpose_0_0 * r_318_sub_0_0) + (r_319_transpose_0_1 * r_318_sub_1_0)) + (r_319_transpose_0_2 * r_318_sub_2_0));
  double r_320_mul_1_0 = (((r_319_transpose_1_0 * r_318_sub_0_0) + (r_319_transpose_1_1 * r_318_sub_1_0)) + (r_319_transpose_1_2 * r_318_sub_2_0));
  double r_320_mul_2_0 = (((r_319_transpose_2_0 * r_318_sub_0_0) + (r_319_transpose_2_1 * r_318_sub_1_0)) + (r_319_transpose_2_2 * r_318_sub_2_0));
  double r_321_add_0_0 = (r_312_0_0 + r_320_mul_0_0);
  double r_321_add_1_0 = (r_312_1_0 + r_320_mul_1_0);
  double r_321_add_2_0 = (r_312_2_0 + r_320_mul_2_0);
  double r_322_mul_0_0 = (((r_319_transpose_0_0 * r_308_0_0) + (r_319_transpose_0_1 * r_308_1_0)) + (r_319_transpose_0_2 * r_308_2_0));
  double r_322_mul_1_0 = (((r_319_transpose_1_0 * r_308_0_0) + (r_319_transpose_1_1 * r_308_1_0)) + (r_319_transpose_1_2 * r_308_2_0));
  double r_322_mul_2_0 = (((r_319_transpose_2_0 * r_308_0_0) + (r_319_transpose_2_1 * r_308_1_0)) + (r_319_transpose_2_2 * r_308_2_0));
  double r_323_add_0_0 = (r_316_0_0 + r_322_mul_0_0);
  double r_323_add_1_0 = (r_316_1_0 + r_322_mul_1_0);
  double r_323_add_2_0 = (r_316_2_0 + r_322_mul_2_0);
  double r_324_scalar_0_0 = r_321_add_0_0;
  double r_325_scalar_0_0 = r_321_add_1_0;
  double r_326_scalar_0_0 = r_321_add_2_0;
  double r_327_scalar_0_0 = r_323_add_0_0;
  double r_328_scalar_0_0 = r_323_add_1_0;
  double r_329_scalar_0_0 = r_323_add_2_0;
  double r_330_0_0 = r_324_scalar_0_0;
  double r_330_1_0 = r_325_scalar_0_0;
  double r_330_2_0 = r_326_scalar_0_0;
  double r_330_3_0 = r_327_scalar_0_0;
  double r_330_4_0 = r_328_scalar_0_0;
  double r_330_5_0 = r_329_scalar_0_0;
  double act_motion_inv_2_0_0 = r_330_0_0;
  double act_motion_inv_2_1_0 = r_330_1_0;
  double act_motion_inv_2_2_0 = r_330_2_0;
  double act_motion_inv_2_3_0 = r_330_3_0;
  double act_motion_inv_2_4_0 = r_330_4_0;
  double act_motion_inv_2_5_0 = r_330_5_0;
  double r_331_scalar_0_0 = v_2_0;
  double r_332_matrix_negate_0_0 = -(r_331_scalar_0_0);
  double r_333_scalar_0_0 = act_motion_inv_2_0_0;
  double r_334_scalar_0_0 = act_motion_inv_2_1_0;
  double r_335_scalar_0_0 = act_motion_inv_2_2_0;
  double r_336_0_0 = r_333_scalar_0_0;
  double r_336_1_0 = r_334_scalar_0_0;
  double r_336_2_0 = r_335_scalar_0_0;
  double r_337_scalar_0_0 = act_motion_inv_2_3_0;
  double r_338_scalar_0_0 = act_motion_inv_2_4_0;
  double r_339_scalar_0_0 = act_motion_inv_2_5_0;
  double r_340_0_0 = r_337_scalar_0_0;
  double r_340_1_0 = r_338_scalar_0_0;
  double r_340_2_0 = r_339_scalar_0_0;
  double r_341_matrix_negate_0_0 = -(r_332_matrix_negate_0_0);
  double r_342_scalar_0_0 = r_336_1_0;
  double r_343_mul_0_0 = (r_341_matrix_negate_0_0 * r_342_scalar_0_0);
  double r_344_scalar_0_0 = r_336_0_0;
  double r_345_mul_0_0 = (r_332_matrix_negate_0_0 * r_344_scalar_0_0);
  double r_346_0_0 = 0;
  double r_347_0_0 = r_343_mul_0_0;
  double r_347_1_0 = r_345_mul_0_0;
  double r_347_2_0 = r_346_0_0;
  double alpha_cross_linear_2_0_0 = r_347_0_0;
  double alpha_cross_linear_2_1_0 = r_347_1_0;
  double alpha_cross_linear_2_2_0 = r_347_2_0;
  double r_348_matrix_negate_0_0 = -(r_332_matrix_negate_0_0);
  double r_349_scalar_0_0 = r_340_1_0;
  double r_350_mul_0_0 = (r_348_matrix_negate_0_0 * r_349_scalar_0_0);
  double r_351_scalar_0_0 = r_340_0_0;
  double r_352_mul_0_0 = (r_332_matrix_negate_0_0 * r_351_scalar_0_0);
  double r_353_0_0 = 0;
  double r_354_0_0 = r_350_mul_0_0;
  double r_354_1_0 = r_352_mul_0_0;
  double r_354_2_0 = r_353_0_0;
  double alpha_cross_angular_2_0_0 = r_354_0_0;
  double alpha_cross_angular_2_1_0 = r_354_1_0;
  double alpha_cross_angular_2_2_0 = r_354_2_0;
  double r_355_scalar_0_0 = alpha_cross_linear_2_0_0;
  double r_356_scalar_0_0 = alpha_cross_linear_2_1_0;
  double r_357_scalar_0_0 = alpha_cross_linear_2_2_0;
  double r_358_scalar_0_0 = alpha_cross_angular_2_0_0;
  double r_359_scalar_0_0 = alpha_cross_angular_2_1_0;
  double r_360_scalar_0_0 = alpha_cross_angular_2_2_0;
  double r_361_0_0 = r_355_scalar_0_0;
  double r_361_1_0 = r_356_scalar_0_0;
  double r_361_2_0 = r_357_scalar_0_0;
  double r_361_3_0 = r_358_scalar_0_0;
  double r_361_4_0 = r_359_scalar_0_0;
  double r_361_5_0 = r_360_scalar_0_0;
  double alpha_cross_2_0_0 = r_361_0_0;
  double alpha_cross_2_1_0 = r_361_1_0;
  double alpha_cross_2_2_0 = r_361_2_0;
  double alpha_cross_2_3_0 = r_361_3_0;
  double alpha_cross_2_4_0 = r_361_4_0;
  double alpha_cross_2_5_0 = r_361_5_0;
  double r_362_scalar_0_0 = a_2_0;
  double r_363_scalar_0_0 = alpha_cross_2_5_0;
  double r_364_add_0_0 = (r_362_scalar_0_0 + r_363_scalar_0_0);
  double r_365_scalar_0_0 = alpha_cross_2_0_0;
  double r_366_scalar_0_0 = alpha_cross_2_1_0;
  double r_367_scalar_0_0 = alpha_cross_2_2_0;
  double r_368_scalar_0_0 = alpha_cross_2_3_0;
  double r_369_scalar_0_0 = alpha_cross_2_4_0;
  double r_370_0_0 = r_365_scalar_0_0;
  double r_370_1_0 = r_366_scalar_0_0;
  double r_370_2_0 = r_367_scalar_0_0;
  double r_370_3_0 = r_368_scalar_0_0;
  double r_370_4_0 = r_369_scalar_0_0;
  double r_370_5_0 = r_364_add_0_0;
  double r_371_scalar_0_0 = r_250_add_0_0;
  double r_372_scalar_0_0 = r_250_add_1_0;
  double r_373_scalar_0_0 = r_250_add_2_0;
  double r_374_0_0 = r_371_scalar_0_0;
  double r_374_1_0 = r_372_scalar_0_0;
  double r_374_2_0 = r_373_scalar_0_0;
  double r_375_scalar_0_0 = r_250_add_3_0;
  double r_376_scalar_0_0 = r_250_add_4_0;
  double r_377_scalar_0_0 = r_250_add_5_0;
  double r_378_0_0 = r_375_scalar_0_0;
  double r_378_1_0 = r_376_scalar_0_0;
  double r_378_2_0 = r_377_scalar_0_0;
  double r_379_vector_cross_0_0 = ((limi_translation_2_1_0 * r_378_2_0) - (limi_translation_2_2_0 * r_378_1_0));
  double r_379_vector_cross_1_0 = ((limi_translation_2_2_0 * r_378_0_0) - (limi_translation_2_0_0 * r_378_2_0));
  double r_379_vector_cross_2_0 = ((limi_translation_2_0_0 * r_378_1_0) - (limi_translation_2_1_0 * r_378_0_0));
  double r_380_sub_0_0 = (r_374_0_0 - r_379_vector_cross_0_0);
  double r_380_sub_1_0 = (r_374_1_0 - r_379_vector_cross_1_0);
  double r_380_sub_2_0 = (r_374_2_0 - r_379_vector_cross_2_0);
  double r_381_transpose_0_0 = limi_rotation_2_0_0;
  double r_381_transpose_0_1 = limi_rotation_2_1_0;
  double r_381_transpose_0_2 = limi_rotation_2_2_0;
  double r_381_transpose_1_0 = limi_rotation_2_0_1;
  double r_381_transpose_1_1 = limi_rotation_2_1_1;
  double r_381_transpose_1_2 = limi_rotation_2_2_1;
  double r_381_transpose_2_0 = limi_rotation_2_0_2;
  double r_381_transpose_2_1 = limi_rotation_2_1_2;
  double r_381_transpose_2_2 = limi_rotation_2_2_2;
  double r_382_mul_0_0 = (((r_381_transpose_0_0 * r_380_sub_0_0) + (r_381_transpose_0_1 * r_380_sub_1_0)) + (r_381_transpose_0_2 * r_380_sub_2_0));
  double r_382_mul_1_0 = (((r_381_transpose_1_0 * r_380_sub_0_0) + (r_381_transpose_1_1 * r_380_sub_1_0)) + (r_381_transpose_1_2 * r_380_sub_2_0));
  double r_382_mul_2_0 = (((r_381_transpose_2_0 * r_380_sub_0_0) + (r_381_transpose_2_1 * r_380_sub_1_0)) + (r_381_transpose_2_2 * r_380_sub_2_0));
  double r_383_mul_0_0 = (((r_381_transpose_0_0 * r_378_0_0) + (r_381_transpose_0_1 * r_378_1_0)) + (r_381_transpose_0_2 * r_378_2_0));
  double r_383_mul_1_0 = (((r_381_transpose_1_0 * r_378_0_0) + (r_381_transpose_1_1 * r_378_1_0)) + (r_381_transpose_1_2 * r_378_2_0));
  double r_383_mul_2_0 = (((r_381_transpose_2_0 * r_378_0_0) + (r_381_transpose_2_1 * r_378_1_0)) + (r_381_transpose_2_2 * r_378_2_0));
  double r_384_scalar_0_0 = r_382_mul_0_0;
  double r_385_scalar_0_0 = r_382_mul_1_0;
  double r_386_scalar_0_0 = r_382_mul_2_0;
  double r_387_scalar_0_0 = r_383_mul_0_0;
  double r_388_scalar_0_0 = r_383_mul_1_0;
  double r_389_scalar_0_0 = r_383_mul_2_0;
  double r_390_0_0 = r_384_scalar_0_0;
  double r_390_1_0 = r_385_scalar_0_0;
  double r_390_2_0 = r_386_scalar_0_0;
  double r_390_3_0 = r_387_scalar_0_0;
  double r_390_4_0 = r_388_scalar_0_0;
  double r_390_5_0 = r_389_scalar_0_0;
  double act_inv_2_0_0 = r_390_0_0;
  double act_inv_2_1_0 = r_390_1_0;
  double act_inv_2_2_0 = r_390_2_0;
  double act_inv_2_3_0 = r_390_3_0;
  double act_inv_2_4_0 = r_390_4_0;
  double act_inv_2_5_0 = r_390_5_0;
  double r_391_add_0_0 = (r_370_0_0 + act_inv_2_0_0);
  double r_391_add_1_0 = (r_370_1_0 + act_inv_2_1_0);
  double r_391_add_2_0 = (r_370_2_0 + act_inv_2_2_0);
  double r_391_add_3_0 = (r_370_3_0 + act_inv_2_3_0);
  double r_391_add_4_0 = (r_370_4_0 + act_inv_2_4_0);
  double r_391_add_5_0 = (r_370_5_0 + act_inv_2_5_0);
  double r_392_scalar_0_0 = qcos_3_0;
  double r_393_scalar_0_0 = qsin_3_0;
  double r_394_matrix_negate_0_0 = -(r_393_scalar_0_0);
  double r_395_0_0 = 0;
  double r_396_scalar_0_0 = qsin_3_0;
  double r_397_scalar_0_0 = qcos_3_0;
  double r_398_0_0 = 0;
  double r_399_0_0 = 0;
  double r_400_0_0 = 0;
  double r_401_0_0 = 1;
  double r_402_0_0 = r_392_scalar_0_0;
  double r_402_0_1 = r_394_matrix_negate_0_0;
  double r_402_0_2 = r_395_0_0;
  double r_402_1_0 = r_396_scalar_0_0;
  double r_402_1_1 = r_397_scalar_0_0;
  double r_402_1_2 = r_398_0_0;
  double r_402_2_0 = r_399_0_0;
  double r_402_2_1 = r_400_0_0;
  double r_402_2_2 = r_401_0_0;
  double r_403_0_0 = 0;
  double r_404_0_0 = 1;
  double r_405_0_0 = 1;
  double r_406_0_0 = 0;
  double r_407_0_0 = 1;
  double r_408_0_0 = 0;
  double r_409_mul_0_0 = (r_407_0_0 * r_405_0_0);
  double r_410_mul_0_0 = (r_407_0_0 * r_406_0_0);
  double r_411_mul_0_0 = (r_410_mul_0_0 * r_404_0_0);
  double r_412_mul_0_0 = (r_408_0_0 * r_403_0_0);
  double r_413_sub_0_0 = (r_411_mul_0_0 - r_412_mul_0_0);
  double r_414_mul_0_0 = (r_407_0_0 * r_406_0_0);
  double r_415_mul_0_0 = (r_414_mul_0_0 * r_403_0_0);
  double r_416_mul_0_0 = (r_408_0_0 * r_404_0_0);
  double r_417_add_0_0 = (r_415_mul_0_0 + r_416_mul_0_0);
  double r_418_mul_0_0 = (r_408_0_0 * r_405_0_0);
  double r_419_mul_0_0 = (r_408_0_0 * r_406_0_0);
  double r_420_mul_0_0 = (r_419_mul_0_0 * r_404_0_0);
  double r_421_mul_0_0 = (r_407_0_0 * r_403_0_0);
  double r_422_add_0_0 = (r_420_mul_0_0 + r_421_mul_0_0);
  double r_423_mul_0_0 = (r_408_0_0 * r_406_0_0);
  double r_424_mul_0_0 = (r_423_mul_0_0 * r_403_0_0);
  double r_425_mul_0_0 = (r_407_0_0 * r_404_0_0);
  double r_426_sub_0_0 = (r_424_mul_0_0 - r_425_mul_0_0);
  double r_427_matrix_negate_0_0 = -(r_406_0_0);
  double r_428_mul_0_0 = (r_405_0_0 * r_404_0_0);
  double r_429_mul_0_0 = (r_405_0_0 * r_403_0_0);
  double r_430_0_0 = r_409_mul_0_0;
  double r_430_0_1 = r_413_sub_0_0;
  double r_430_0_2 = r_417_add_0_0;
  double r_430_1_0 = r_418_mul_0_0;
  double r_430_1_1 = r_422_add_0_0;
  double r_430_1_2 = r_426_sub_0_0;
  double r_430_2_0 = r_427_matrix_negate_0_0;
  double r_430_2_1 = r_428_mul_0_0;
  double r_430_2_2 = r_429_mul_0_0;
  double r_431_mul_0_0 = (((r_430_0_0 * r_402_0_0) + (r_430_0_1 * r_402_1_0)) + (r_430_0_2 * r_402_2_0));
  double r_431_mul_0_1 = (((r_430_0_0 * r_402_0_1) + (r_430_0_1 * r_402_1_1)) + (r_430_0_2 * r_402_2_1));
  double r_431_mul_0_2 = (((r_430_0_0 * r_402_0_2) + (r_430_0_1 * r_402_1_2)) + (r_430_0_2 * r_402_2_2));
  double r_431_mul_1_0 = (((r_430_1_0 * r_402_0_0) + (r_430_1_1 * r_402_1_0)) + (r_430_1_2 * r_402_2_0));
  double r_431_mul_1_1 = (((r_430_1_0 * r_402_0_1) + (r_430_1_1 * r_402_1_1)) + (r_430_1_2 * r_402_2_1));
  double r_431_mul_1_2 = (((r_430_1_0 * r_402_0_2) + (r_430_1_1 * r_402_1_2)) + (r_430_1_2 * r_402_2_2));
  double r_431_mul_2_0 = (((r_430_2_0 * r_402_0_0) + (r_430_2_1 * r_402_1_0)) + (r_430_2_2 * r_402_2_0));
  double r_431_mul_2_1 = (((r_430_2_0 * r_402_0_1) + (r_430_2_1 * r_402_1_1)) + (r_430_2_2 * r_402_2_1));
  double r_431_mul_2_2 = (((r_430_2_0 * r_402_0_2) + (r_430_2_1 * r_402_1_2)) + (r_430_2_2 * r_402_2_2));
  double limi_rotation_3_0_0 = r_431_mul_0_0;
  double limi_rotation_3_0_1 = r_431_mul_0_1;
  double limi_rotation_3_0_2 = r_431_mul_0_2;
  double limi_rotation_3_1_0 = r_431_mul_1_0;
  double limi_rotation_3_1_1 = r_431_mul_1_1;
  double limi_rotation_3_1_2 = r_431_mul_1_2;
  double limi_rotation_3_2_0 = r_431_mul_2_0;
  double limi_rotation_3_2_1 = r_431_mul_2_1;
  double limi_rotation_3_2_2 = r_431_mul_2_2;
  double r_432_mul_0_0 = (((r_291_mul_0_0 * limi_rotation_3_0_0) + (r_291_mul_0_1 * limi_rotation_3_1_0)) + (r_291_mul_0_2 * limi_rotation_3_2_0));
  double r_432_mul_0_1 = (((r_291_mul_0_0 * limi_rotation_3_0_1) + (r_291_mul_0_1 * limi_rotation_3_1_1)) + (r_291_mul_0_2 * limi_rotation_3_2_1));
  double r_432_mul_0_2 = (((r_291_mul_0_0 * limi_rotation_3_0_2) + (r_291_mul_0_1 * limi_rotation_3_1_2)) + (r_291_mul_0_2 * limi_rotation_3_2_2));
  double r_432_mul_1_0 = (((r_291_mul_1_0 * limi_rotation_3_0_0) + (r_291_mul_1_1 * limi_rotation_3_1_0)) + (r_291_mul_1_2 * limi_rotation_3_2_0));
  double r_432_mul_1_1 = (((r_291_mul_1_0 * limi_rotation_3_0_1) + (r_291_mul_1_1 * limi_rotation_3_1_1)) + (r_291_mul_1_2 * limi_rotation_3_2_1));
  double r_432_mul_1_2 = (((r_291_mul_1_0 * limi_rotation_3_0_2) + (r_291_mul_1_1 * limi_rotation_3_1_2)) + (r_291_mul_1_2 * limi_rotation_3_2_2));
  double r_432_mul_2_0 = (((r_291_mul_2_0 * limi_rotation_3_0_0) + (r_291_mul_2_1 * limi_rotation_3_1_0)) + (r_291_mul_2_2 * limi_rotation_3_2_0));
  double r_432_mul_2_1 = (((r_291_mul_2_0 * limi_rotation_3_0_1) + (r_291_mul_2_1 * limi_rotation_3_1_1)) + (r_291_mul_2_2 * limi_rotation_3_2_1));
  double r_432_mul_2_2 = (((r_291_mul_2_0 * limi_rotation_3_0_2) + (r_291_mul_2_1 * limi_rotation_3_1_2)) + (r_291_mul_2_2 * limi_rotation_3_2_2));
  double r_433_mul_0_0 = (((r_291_mul_0_0 * limi_translation_3_0_0) + (r_291_mul_0_1 * limi_translation_3_1_0)) + (r_291_mul_0_2 * limi_translation_3_2_0));
  double r_433_mul_1_0 = (((r_291_mul_1_0 * limi_translation_3_0_0) + (r_291_mul_1_1 * limi_translation_3_1_0)) + (r_291_mul_1_2 * limi_translation_3_2_0));
  double r_433_mul_2_0 = (((r_291_mul_2_0 * limi_translation_3_0_0) + (r_291_mul_2_1 * limi_translation_3_1_0)) + (r_291_mul_2_2 * limi_translation_3_2_0));
  double r_434_add_0_0 = (r_293_add_0_0 + r_433_mul_0_0);
  double r_434_add_1_0 = (r_293_add_1_0 + r_433_mul_1_0);
  double r_434_add_2_0 = (r_293_add_2_0 + r_433_mul_2_0);
  double r_435_0_0 = 0;
  double r_436_0_0 = 0;
  double r_437_0_0 = 0;
  double r_438_0_0 = 0;
  double r_439_0_0 = 0;
  double r_440_scalar_0_0 = v_3_0;
  double r_441_0_0 = r_435_0_0;
  double r_441_1_0 = r_436_0_0;
  double r_441_2_0 = r_437_0_0;
  double r_441_3_0 = r_438_0_0;
  double r_441_4_0 = r_439_0_0;
  double r_441_5_0 = r_440_scalar_0_0;
  double r_442_scalar_0_0 = act_motion_inv_2_0_0;
  double r_443_scalar_0_0 = act_motion_inv_2_1_0;
  double r_444_scalar_0_0 = act_motion_inv_2_2_0;
  double r_445_0_0 = r_442_scalar_0_0;
  double r_445_1_0 = r_443_scalar_0_0;
  double r_445_2_0 = r_444_scalar_0_0;
  double r_446_scalar_0_0 = act_motion_inv_2_3_0;
  double r_447_scalar_0_0 = act_motion_inv_2_4_0;
  double r_448_scalar_0_0 = act_motion_inv_2_5_0;
  double r_449_0_0 = r_446_scalar_0_0;
  double r_449_1_0 = r_447_scalar_0_0;
  double r_449_2_0 = r_448_scalar_0_0;
  double r_450_scalar_0_0 = r_441_0_0;
  double r_451_scalar_0_0 = r_441_1_0;
  double r_452_scalar_0_0 = r_441_2_0;
  double r_453_0_0 = r_450_scalar_0_0;
  double r_453_1_0 = r_451_scalar_0_0;
  double r_453_2_0 = r_452_scalar_0_0;
  double r_454_scalar_0_0 = r_441_3_0;
  double r_455_scalar_0_0 = r_441_4_0;
  double r_456_scalar_0_0 = r_441_5_0;
  double r_457_0_0 = r_454_scalar_0_0;
  double r_457_1_0 = r_455_scalar_0_0;
  double r_457_2_0 = r_456_scalar_0_0;
  double r_458_vector_cross_0_0 = ((limi_translation_3_1_0 * r_449_2_0) - (limi_translation_3_2_0 * r_449_1_0));
  double r_458_vector_cross_1_0 = ((limi_translation_3_2_0 * r_449_0_0) - (limi_translation_3_0_0 * r_449_2_0));
  double r_458_vector_cross_2_0 = ((limi_translation_3_0_0 * r_449_1_0) - (limi_translation_3_1_0 * r_449_0_0));
  double r_459_sub_0_0 = (r_445_0_0 - r_458_vector_cross_0_0);
  double r_459_sub_1_0 = (r_445_1_0 - r_458_vector_cross_1_0);
  double r_459_sub_2_0 = (r_445_2_0 - r_458_vector_cross_2_0);
  double r_460_transpose_0_0 = limi_rotation_3_0_0;
  double r_460_transpose_0_1 = limi_rotation_3_1_0;
  double r_460_transpose_0_2 = limi_rotation_3_2_0;
  double r_460_transpose_1_0 = limi_rotation_3_0_1;
  double r_460_transpose_1_1 = limi_rotation_3_1_1;
  double r_460_transpose_1_2 = limi_rotation_3_2_1;
  double r_460_transpose_2_0 = limi_rotation_3_0_2;
  double r_460_transpose_2_1 = limi_rotation_3_1_2;
  double r_460_transpose_2_2 = limi_rotation_3_2_2;
  double r_461_mul_0_0 = (((r_460_transpose_0_0 * r_459_sub_0_0) + (r_460_transpose_0_1 * r_459_sub_1_0)) + (r_460_transpose_0_2 * r_459_sub_2_0));
  double r_461_mul_1_0 = (((r_460_transpose_1_0 * r_459_sub_0_0) + (r_460_transpose_1_1 * r_459_sub_1_0)) + (r_460_transpose_1_2 * r_459_sub_2_0));
  double r_461_mul_2_0 = (((r_460_transpose_2_0 * r_459_sub_0_0) + (r_460_transpose_2_1 * r_459_sub_1_0)) + (r_460_transpose_2_2 * r_459_sub_2_0));
  double r_462_add_0_0 = (r_453_0_0 + r_461_mul_0_0);
  double r_462_add_1_0 = (r_453_1_0 + r_461_mul_1_0);
  double r_462_add_2_0 = (r_453_2_0 + r_461_mul_2_0);
  double r_463_mul_0_0 = (((r_460_transpose_0_0 * r_449_0_0) + (r_460_transpose_0_1 * r_449_1_0)) + (r_460_transpose_0_2 * r_449_2_0));
  double r_463_mul_1_0 = (((r_460_transpose_1_0 * r_449_0_0) + (r_460_transpose_1_1 * r_449_1_0)) + (r_460_transpose_1_2 * r_449_2_0));
  double r_463_mul_2_0 = (((r_460_transpose_2_0 * r_449_0_0) + (r_460_transpose_2_1 * r_449_1_0)) + (r_460_transpose_2_2 * r_449_2_0));
  double r_464_add_0_0 = (r_457_0_0 + r_463_mul_0_0);
  double r_464_add_1_0 = (r_457_1_0 + r_463_mul_1_0);
  double r_464_add_2_0 = (r_457_2_0 + r_463_mul_2_0);
  double r_465_scalar_0_0 = r_462_add_0_0;
  double r_466_scalar_0_0 = r_462_add_1_0;
  double r_467_scalar_0_0 = r_462_add_2_0;
  double r_468_scalar_0_0 = r_464_add_0_0;
  double r_469_scalar_0_0 = r_464_add_1_0;
  double r_470_scalar_0_0 = r_464_add_2_0;
  double r_471_0_0 = r_465_scalar_0_0;
  double r_471_1_0 = r_466_scalar_0_0;
  double r_471_2_0 = r_467_scalar_0_0;
  double r_471_3_0 = r_468_scalar_0_0;
  double r_471_4_0 = r_469_scalar_0_0;
  double r_471_5_0 = r_470_scalar_0_0;
  double act_motion_inv_3_0_0 = r_471_0_0;
  double act_motion_inv_3_1_0 = r_471_1_0;
  double act_motion_inv_3_2_0 = r_471_2_0;
  double act_motion_inv_3_3_0 = r_471_3_0;
  double act_motion_inv_3_4_0 = r_471_4_0;
  double act_motion_inv_3_5_0 = r_471_5_0;
  double r_472_scalar_0_0 = v_3_0;
  double r_473_matrix_negate_0_0 = -(r_472_scalar_0_0);
  double r_474_scalar_0_0 = act_motion_inv_3_0_0;
  double r_475_scalar_0_0 = act_motion_inv_3_1_0;
  double r_476_scalar_0_0 = act_motion_inv_3_2_0;
  double r_477_0_0 = r_474_scalar_0_0;
  double r_477_1_0 = r_475_scalar_0_0;
  double r_477_2_0 = r_476_scalar_0_0;
  double r_478_scalar_0_0 = act_motion_inv_3_3_0;
  double r_479_scalar_0_0 = act_motion_inv_3_4_0;
  double r_480_scalar_0_0 = act_motion_inv_3_5_0;
  double r_481_0_0 = r_478_scalar_0_0;
  double r_481_1_0 = r_479_scalar_0_0;
  double r_481_2_0 = r_480_scalar_0_0;
  double r_482_matrix_negate_0_0 = -(r_473_matrix_negate_0_0);
  double r_483_scalar_0_0 = r_477_1_0;
  double r_484_mul_0_0 = (r_482_matrix_negate_0_0 * r_483_scalar_0_0);
  double r_485_scalar_0_0 = r_477_0_0;
  double r_486_mul_0_0 = (r_473_matrix_negate_0_0 * r_485_scalar_0_0);
  double r_487_0_0 = 0;
  double r_488_0_0 = r_484_mul_0_0;
  double r_488_1_0 = r_486_mul_0_0;
  double r_488_2_0 = r_487_0_0;
  double alpha_cross_linear_3_0_0 = r_488_0_0;
  double alpha_cross_linear_3_1_0 = r_488_1_0;
  double alpha_cross_linear_3_2_0 = r_488_2_0;
  double r_489_matrix_negate_0_0 = -(r_473_matrix_negate_0_0);
  double r_490_scalar_0_0 = r_481_1_0;
  double r_491_mul_0_0 = (r_489_matrix_negate_0_0 * r_490_scalar_0_0);
  double r_492_scalar_0_0 = r_481_0_0;
  double r_493_mul_0_0 = (r_473_matrix_negate_0_0 * r_492_scalar_0_0);
  double r_494_0_0 = 0;
  double r_495_0_0 = r_491_mul_0_0;
  double r_495_1_0 = r_493_mul_0_0;
  double r_495_2_0 = r_494_0_0;
  double alpha_cross_angular_3_0_0 = r_495_0_0;
  double alpha_cross_angular_3_1_0 = r_495_1_0;
  double alpha_cross_angular_3_2_0 = r_495_2_0;
  double r_496_scalar_0_0 = alpha_cross_linear_3_0_0;
  double r_497_scalar_0_0 = alpha_cross_linear_3_1_0;
  double r_498_scalar_0_0 = alpha_cross_linear_3_2_0;
  double r_499_scalar_0_0 = alpha_cross_angular_3_0_0;
  double r_500_scalar_0_0 = alpha_cross_angular_3_1_0;
  double r_501_scalar_0_0 = alpha_cross_angular_3_2_0;
  double r_502_0_0 = r_496_scalar_0_0;
  double r_502_1_0 = r_497_scalar_0_0;
  double r_502_2_0 = r_498_scalar_0_0;
  double r_502_3_0 = r_499_scalar_0_0;
  double r_502_4_0 = r_500_scalar_0_0;
  double r_502_5_0 = r_501_scalar_0_0;
  double alpha_cross_3_0_0 = r_502_0_0;
  double alpha_cross_3_1_0 = r_502_1_0;
  double alpha_cross_3_2_0 = r_502_2_0;
  double alpha_cross_3_3_0 = r_502_3_0;
  double alpha_cross_3_4_0 = r_502_4_0;
  double alpha_cross_3_5_0 = r_502_5_0;
  double r_503_scalar_0_0 = a_3_0;
  double r_504_scalar_0_0 = alpha_cross_3_5_0;
  double r_505_add_0_0 = (r_503_scalar_0_0 + r_504_scalar_0_0);
  double r_506_scalar_0_0 = alpha_cross_3_0_0;
  double r_507_scalar_0_0 = alpha_cross_3_1_0;
  double r_508_scalar_0_0 = alpha_cross_3_2_0;
  double r_509_scalar_0_0 = alpha_cross_3_3_0;
  double r_510_scalar_0_0 = alpha_cross_3_4_0;
  double r_511_0_0 = r_506_scalar_0_0;
  double r_511_1_0 = r_507_scalar_0_0;
  double r_511_2_0 = r_508_scalar_0_0;
  double r_511_3_0 = r_509_scalar_0_0;
  double r_511_4_0 = r_510_scalar_0_0;
  double r_511_5_0 = r_505_add_0_0;
  double r_512_scalar_0_0 = r_391_add_0_0;
  double r_513_scalar_0_0 = r_391_add_1_0;
  double r_514_scalar_0_0 = r_391_add_2_0;
  double r_515_0_0 = r_512_scalar_0_0;
  double r_515_1_0 = r_513_scalar_0_0;
  double r_515_2_0 = r_514_scalar_0_0;
  double r_516_scalar_0_0 = r_391_add_3_0;
  double r_517_scalar_0_0 = r_391_add_4_0;
  double r_518_scalar_0_0 = r_391_add_5_0;
  double r_519_0_0 = r_516_scalar_0_0;
  double r_519_1_0 = r_517_scalar_0_0;
  double r_519_2_0 = r_518_scalar_0_0;
  double r_520_vector_cross_0_0 = ((limi_translation_3_1_0 * r_519_2_0) - (limi_translation_3_2_0 * r_519_1_0));
  double r_520_vector_cross_1_0 = ((limi_translation_3_2_0 * r_519_0_0) - (limi_translation_3_0_0 * r_519_2_0));
  double r_520_vector_cross_2_0 = ((limi_translation_3_0_0 * r_519_1_0) - (limi_translation_3_1_0 * r_519_0_0));
  double r_521_sub_0_0 = (r_515_0_0 - r_520_vector_cross_0_0);
  double r_521_sub_1_0 = (r_515_1_0 - r_520_vector_cross_1_0);
  double r_521_sub_2_0 = (r_515_2_0 - r_520_vector_cross_2_0);
  double r_522_transpose_0_0 = limi_rotation_3_0_0;
  double r_522_transpose_0_1 = limi_rotation_3_1_0;
  double r_522_transpose_0_2 = limi_rotation_3_2_0;
  double r_522_transpose_1_0 = limi_rotation_3_0_1;
  double r_522_transpose_1_1 = limi_rotation_3_1_1;
  double r_522_transpose_1_2 = limi_rotation_3_2_1;
  double r_522_transpose_2_0 = limi_rotation_3_0_2;
  double r_522_transpose_2_1 = limi_rotation_3_1_2;
  double r_522_transpose_2_2 = limi_rotation_3_2_2;
  double r_523_mul_0_0 = (((r_522_transpose_0_0 * r_521_sub_0_0) + (r_522_transpose_0_1 * r_521_sub_1_0)) + (r_522_transpose_0_2 * r_521_sub_2_0));
  double r_523_mul_1_0 = (((r_522_transpose_1_0 * r_521_sub_0_0) + (r_522_transpose_1_1 * r_521_sub_1_0)) + (r_522_transpose_1_2 * r_521_sub_2_0));
  double r_523_mul_2_0 = (((r_522_transpose_2_0 * r_521_sub_0_0) + (r_522_transpose_2_1 * r_521_sub_1_0)) + (r_522_transpose_2_2 * r_521_sub_2_0));
  double r_524_mul_0_0 = (((r_522_transpose_0_0 * r_519_0_0) + (r_522_transpose_0_1 * r_519_1_0)) + (r_522_transpose_0_2 * r_519_2_0));
  double r_524_mul_1_0 = (((r_522_transpose_1_0 * r_519_0_0) + (r_522_transpose_1_1 * r_519_1_0)) + (r_522_transpose_1_2 * r_519_2_0));
  double r_524_mul_2_0 = (((r_522_transpose_2_0 * r_519_0_0) + (r_522_transpose_2_1 * r_519_1_0)) + (r_522_transpose_2_2 * r_519_2_0));
  double r_525_scalar_0_0 = r_523_mul_0_0;
  double r_526_scalar_0_0 = r_523_mul_1_0;
  double r_527_scalar_0_0 = r_523_mul_2_0;
  double r_528_scalar_0_0 = r_524_mul_0_0;
  double r_529_scalar_0_0 = r_524_mul_1_0;
  double r_530_scalar_0_0 = r_524_mul_2_0;
  double r_531_0_0 = r_525_scalar_0_0;
  double r_531_1_0 = r_526_scalar_0_0;
  double r_531_2_0 = r_527_scalar_0_0;
  double r_531_3_0 = r_528_scalar_0_0;
  double r_531_4_0 = r_529_scalar_0_0;
  double r_531_5_0 = r_530_scalar_0_0;
  double act_inv_3_0_0 = r_531_0_0;
  double act_inv_3_1_0 = r_531_1_0;
  double act_inv_3_2_0 = r_531_2_0;
  double act_inv_3_3_0 = r_531_3_0;
  double act_inv_3_4_0 = r_531_4_0;
  double act_inv_3_5_0 = r_531_5_0;
  double r_532_add_0_0 = (r_511_0_0 + act_inv_3_0_0);
  double r_532_add_1_0 = (r_511_1_0 + act_inv_3_1_0);
  double r_532_add_2_0 = (r_511_2_0 + act_inv_3_2_0);
  double r_532_add_3_0 = (r_511_3_0 + act_inv_3_3_0);
  double r_532_add_4_0 = (r_511_4_0 + act_inv_3_4_0);
  double r_532_add_5_0 = (r_511_5_0 + act_inv_3_5_0);
  double r_533_scalar_0_0 = qcos_4_0;
  double r_534_scalar_0_0 = qsin_4_0;
  double r_535_matrix_negate_0_0 = -(r_534_scalar_0_0);
  double r_536_0_0 = 0;
  double r_537_scalar_0_0 = qsin_4_0;
  double r_538_scalar_0_0 = qcos_4_0;
  double r_539_0_0 = 0;
  double r_540_0_0 = 0;
  double r_541_0_0 = 0;
  double r_542_0_0 = 1;
  double r_543_0_0 = r_533_scalar_0_0;
  double r_543_0_1 = r_535_matrix_negate_0_0;
  double r_543_0_2 = r_536_0_0;
  double r_543_1_0 = r_537_scalar_0_0;
  double r_543_1_1 = r_538_scalar_0_0;
  double r_543_1_2 = r_539_0_0;
  double r_543_2_0 = r_540_0_0;
  double r_543_2_1 = r_541_0_0;
  double r_543_2_2 = r_542_0_0;
  double r_544_0_0 = 0;
  double r_545_0_0 = -1;
  double r_546_0_0 = 1;
  double r_547_0_0 = 0;
  double r_548_0_0 = 1;
  double r_549_0_0 = 0;
  double r_550_mul_0_0 = (r_548_0_0 * r_546_0_0);
  double r_551_mul_0_0 = (r_548_0_0 * r_547_0_0);
  double r_552_mul_0_0 = (r_551_mul_0_0 * r_545_0_0);
  double r_553_mul_0_0 = (r_549_0_0 * r_544_0_0);
  double r_554_sub_0_0 = (r_552_mul_0_0 - r_553_mul_0_0);
  double r_555_mul_0_0 = (r_548_0_0 * r_547_0_0);
  double r_556_mul_0_0 = (r_555_mul_0_0 * r_544_0_0);
  double r_557_mul_0_0 = (r_549_0_0 * r_545_0_0);
  double r_558_add_0_0 = (r_556_mul_0_0 + r_557_mul_0_0);
  double r_559_mul_0_0 = (r_549_0_0 * r_546_0_0);
  double r_560_mul_0_0 = (r_549_0_0 * r_547_0_0);
  double r_561_mul_0_0 = (r_560_mul_0_0 * r_545_0_0);
  double r_562_mul_0_0 = (r_548_0_0 * r_544_0_0);
  double r_563_add_0_0 = (r_561_mul_0_0 + r_562_mul_0_0);
  double r_564_mul_0_0 = (r_549_0_0 * r_547_0_0);
  double r_565_mul_0_0 = (r_564_mul_0_0 * r_544_0_0);
  double r_566_mul_0_0 = (r_548_0_0 * r_545_0_0);
  double r_567_sub_0_0 = (r_565_mul_0_0 - r_566_mul_0_0);
  double r_568_matrix_negate_0_0 = -(r_547_0_0);
  double r_569_mul_0_0 = (r_546_0_0 * r_545_0_0);
  double r_570_mul_0_0 = (r_546_0_0 * r_544_0_0);
  double r_571_0_0 = r_550_mul_0_0;
  double r_571_0_1 = r_554_sub_0_0;
  double r_571_0_2 = r_558_add_0_0;
  double r_571_1_0 = r_559_mul_0_0;
  double r_571_1_1 = r_563_add_0_0;
  double r_571_1_2 = r_567_sub_0_0;
  double r_571_2_0 = r_568_matrix_negate_0_0;
  double r_571_2_1 = r_569_mul_0_0;
  double r_571_2_2 = r_570_mul_0_0;
  double r_572_mul_0_0 = (((r_571_0_0 * r_543_0_0) + (r_571_0_1 * r_543_1_0)) + (r_571_0_2 * r_543_2_0));
  double r_572_mul_0_1 = (((r_571_0_0 * r_543_0_1) + (r_571_0_1 * r_543_1_1)) + (r_571_0_2 * r_543_2_1));
  double r_572_mul_0_2 = (((r_571_0_0 * r_543_0_2) + (r_571_0_1 * r_543_1_2)) + (r_571_0_2 * r_543_2_2));
  double r_572_mul_1_0 = (((r_571_1_0 * r_543_0_0) + (r_571_1_1 * r_543_1_0)) + (r_571_1_2 * r_543_2_0));
  double r_572_mul_1_1 = (((r_571_1_0 * r_543_0_1) + (r_571_1_1 * r_543_1_1)) + (r_571_1_2 * r_543_2_1));
  double r_572_mul_1_2 = (((r_571_1_0 * r_543_0_2) + (r_571_1_1 * r_543_1_2)) + (r_571_1_2 * r_543_2_2));
  double r_572_mul_2_0 = (((r_571_2_0 * r_543_0_0) + (r_571_2_1 * r_543_1_0)) + (r_571_2_2 * r_543_2_0));
  double r_572_mul_2_1 = (((r_571_2_0 * r_543_0_1) + (r_571_2_1 * r_543_1_1)) + (r_571_2_2 * r_543_2_1));
  double r_572_mul_2_2 = (((r_571_2_0 * r_543_0_2) + (r_571_2_1 * r_543_1_2)) + (r_571_2_2 * r_543_2_2));
  double limi_rotation_4_0_0 = r_572_mul_0_0;
  double limi_rotation_4_0_1 = r_572_mul_0_1;
  double limi_rotation_4_0_2 = r_572_mul_0_2;
  double limi_rotation_4_1_0 = r_572_mul_1_0;
  double limi_rotation_4_1_1 = r_572_mul_1_1;
  double limi_rotation_4_1_2 = r_572_mul_1_2;
  double limi_rotation_4_2_0 = r_572_mul_2_0;
  double limi_rotation_4_2_1 = r_572_mul_2_1;
  double limi_rotation_4_2_2 = r_572_mul_2_2;
  double r_573_mul_0_0 = (((r_432_mul_0_0 * limi_rotation_4_0_0) + (r_432_mul_0_1 * limi_rotation_4_1_0)) + (r_432_mul_0_2 * limi_rotation_4_2_0));
  double r_573_mul_0_1 = (((r_432_mul_0_0 * limi_rotation_4_0_1) + (r_432_mul_0_1 * limi_rotation_4_1_1)) + (r_432_mul_0_2 * limi_rotation_4_2_1));
  double r_573_mul_0_2 = (((r_432_mul_0_0 * limi_rotation_4_0_2) + (r_432_mul_0_1 * limi_rotation_4_1_2)) + (r_432_mul_0_2 * limi_rotation_4_2_2));
  double r_573_mul_1_0 = (((r_432_mul_1_0 * limi_rotation_4_0_0) + (r_432_mul_1_1 * limi_rotation_4_1_0)) + (r_432_mul_1_2 * limi_rotation_4_2_0));
  double r_573_mul_1_1 = (((r_432_mul_1_0 * limi_rotation_4_0_1) + (r_432_mul_1_1 * limi_rotation_4_1_1)) + (r_432_mul_1_2 * limi_rotation_4_2_1));
  double r_573_mul_1_2 = (((r_432_mul_1_0 * limi_rotation_4_0_2) + (r_432_mul_1_1 * limi_rotation_4_1_2)) + (r_432_mul_1_2 * limi_rotation_4_2_2));
  double r_573_mul_2_0 = (((r_432_mul_2_0 * limi_rotation_4_0_0) + (r_432_mul_2_1 * limi_rotation_4_1_0)) + (r_432_mul_2_2 * limi_rotation_4_2_0));
  double r_573_mul_2_1 = (((r_432_mul_2_0 * limi_rotation_4_0_1) + (r_432_mul_2_1 * limi_rotation_4_1_1)) + (r_432_mul_2_2 * limi_rotation_4_2_1));
  double r_573_mul_2_2 = (((r_432_mul_2_0 * limi_rotation_4_0_2) + (r_432_mul_2_1 * limi_rotation_4_1_2)) + (r_432_mul_2_2 * limi_rotation_4_2_2));
  double r_574_mul_0_0 = (((r_432_mul_0_0 * limi_translation_4_0_0) + (r_432_mul_0_1 * limi_translation_4_1_0)) + (r_432_mul_0_2 * limi_translation_4_2_0));
  double r_574_mul_1_0 = (((r_432_mul_1_0 * limi_translation_4_0_0) + (r_432_mul_1_1 * limi_translation_4_1_0)) + (r_432_mul_1_2 * limi_translation_4_2_0));
  double r_574_mul_2_0 = (((r_432_mul_2_0 * limi_translation_4_0_0) + (r_432_mul_2_1 * limi_translation_4_1_0)) + (r_432_mul_2_2 * limi_translation_4_2_0));
  double r_575_add_0_0 = (r_434_add_0_0 + r_574_mul_0_0);
  double r_575_add_1_0 = (r_434_add_1_0 + r_574_mul_1_0);
  double r_575_add_2_0 = (r_434_add_2_0 + r_574_mul_2_0);
  double r_576_0_0 = 0;
  double r_577_0_0 = 0;
  double r_578_0_0 = 0;
  double r_579_0_0 = 0;
  double r_580_0_0 = 0;
  double r_581_scalar_0_0 = v_4_0;
  double r_582_0_0 = r_576_0_0;
  double r_582_1_0 = r_577_0_0;
  double r_582_2_0 = r_578_0_0;
  double r_582_3_0 = r_579_0_0;
  double r_582_4_0 = r_580_0_0;
  double r_582_5_0 = r_581_scalar_0_0;
  double r_583_scalar_0_0 = act_motion_inv_3_0_0;
  double r_584_scalar_0_0 = act_motion_inv_3_1_0;
  double r_585_scalar_0_0 = act_motion_inv_3_2_0;
  double r_586_0_0 = r_583_scalar_0_0;
  double r_586_1_0 = r_584_scalar_0_0;
  double r_586_2_0 = r_585_scalar_0_0;
  double r_587_scalar_0_0 = act_motion_inv_3_3_0;
  double r_588_scalar_0_0 = act_motion_inv_3_4_0;
  double r_589_scalar_0_0 = act_motion_inv_3_5_0;
  double r_590_0_0 = r_587_scalar_0_0;
  double r_590_1_0 = r_588_scalar_0_0;
  double r_590_2_0 = r_589_scalar_0_0;
  double r_591_scalar_0_0 = r_582_0_0;
  double r_592_scalar_0_0 = r_582_1_0;
  double r_593_scalar_0_0 = r_582_2_0;
  double r_594_0_0 = r_591_scalar_0_0;
  double r_594_1_0 = r_592_scalar_0_0;
  double r_594_2_0 = r_593_scalar_0_0;
  double r_595_scalar_0_0 = r_582_3_0;
  double r_596_scalar_0_0 = r_582_4_0;
  double r_597_scalar_0_0 = r_582_5_0;
  double r_598_0_0 = r_595_scalar_0_0;
  double r_598_1_0 = r_596_scalar_0_0;
  double r_598_2_0 = r_597_scalar_0_0;
  double r_599_vector_cross_0_0 = ((limi_translation_4_1_0 * r_590_2_0) - (limi_translation_4_2_0 * r_590_1_0));
  double r_599_vector_cross_1_0 = ((limi_translation_4_2_0 * r_590_0_0) - (limi_translation_4_0_0 * r_590_2_0));
  double r_599_vector_cross_2_0 = ((limi_translation_4_0_0 * r_590_1_0) - (limi_translation_4_1_0 * r_590_0_0));
  double r_600_sub_0_0 = (r_586_0_0 - r_599_vector_cross_0_0);
  double r_600_sub_1_0 = (r_586_1_0 - r_599_vector_cross_1_0);
  double r_600_sub_2_0 = (r_586_2_0 - r_599_vector_cross_2_0);
  double r_601_transpose_0_0 = limi_rotation_4_0_0;
  double r_601_transpose_0_1 = limi_rotation_4_1_0;
  double r_601_transpose_0_2 = limi_rotation_4_2_0;
  double r_601_transpose_1_0 = limi_rotation_4_0_1;
  double r_601_transpose_1_1 = limi_rotation_4_1_1;
  double r_601_transpose_1_2 = limi_rotation_4_2_1;
  double r_601_transpose_2_0 = limi_rotation_4_0_2;
  double r_601_transpose_2_1 = limi_rotation_4_1_2;
  double r_601_transpose_2_2 = limi_rotation_4_2_2;
  double r_602_mul_0_0 = (((r_601_transpose_0_0 * r_600_sub_0_0) + (r_601_transpose_0_1 * r_600_sub_1_0)) + (r_601_transpose_0_2 * r_600_sub_2_0));
  double r_602_mul_1_0 = (((r_601_transpose_1_0 * r_600_sub_0_0) + (r_601_transpose_1_1 * r_600_sub_1_0)) + (r_601_transpose_1_2 * r_600_sub_2_0));
  double r_602_mul_2_0 = (((r_601_transpose_2_0 * r_600_sub_0_0) + (r_601_transpose_2_1 * r_600_sub_1_0)) + (r_601_transpose_2_2 * r_600_sub_2_0));
  double r_603_add_0_0 = (r_594_0_0 + r_602_mul_0_0);
  double r_603_add_1_0 = (r_594_1_0 + r_602_mul_1_0);
  double r_603_add_2_0 = (r_594_2_0 + r_602_mul_2_0);
  double r_604_mul_0_0 = (((r_601_transpose_0_0 * r_590_0_0) + (r_601_transpose_0_1 * r_590_1_0)) + (r_601_transpose_0_2 * r_590_2_0));
  double r_604_mul_1_0 = (((r_601_transpose_1_0 * r_590_0_0) + (r_601_transpose_1_1 * r_590_1_0)) + (r_601_transpose_1_2 * r_590_2_0));
  double r_604_mul_2_0 = (((r_601_transpose_2_0 * r_590_0_0) + (r_601_transpose_2_1 * r_590_1_0)) + (r_601_transpose_2_2 * r_590_2_0));
  double r_605_add_0_0 = (r_598_0_0 + r_604_mul_0_0);
  double r_605_add_1_0 = (r_598_1_0 + r_604_mul_1_0);
  double r_605_add_2_0 = (r_598_2_0 + r_604_mul_2_0);
  double r_606_scalar_0_0 = r_603_add_0_0;
  double r_607_scalar_0_0 = r_603_add_1_0;
  double r_608_scalar_0_0 = r_603_add_2_0;
  double r_609_scalar_0_0 = r_605_add_0_0;
  double r_610_scalar_0_0 = r_605_add_1_0;
  double r_611_scalar_0_0 = r_605_add_2_0;
  double r_612_0_0 = r_606_scalar_0_0;
  double r_612_1_0 = r_607_scalar_0_0;
  double r_612_2_0 = r_608_scalar_0_0;
  double r_612_3_0 = r_609_scalar_0_0;
  double r_612_4_0 = r_610_scalar_0_0;
  double r_612_5_0 = r_611_scalar_0_0;
  double act_motion_inv_4_0_0 = r_612_0_0;
  double act_motion_inv_4_1_0 = r_612_1_0;
  double act_motion_inv_4_2_0 = r_612_2_0;
  double act_motion_inv_4_3_0 = r_612_3_0;
  double act_motion_inv_4_4_0 = r_612_4_0;
  double act_motion_inv_4_5_0 = r_612_5_0;
  double r_613_scalar_0_0 = v_4_0;
  double r_614_matrix_negate_0_0 = -(r_613_scalar_0_0);
  double r_615_scalar_0_0 = act_motion_inv_4_0_0;
  double r_616_scalar_0_0 = act_motion_inv_4_1_0;
  double r_617_scalar_0_0 = act_motion_inv_4_2_0;
  double r_618_0_0 = r_615_scalar_0_0;
  double r_618_1_0 = r_616_scalar_0_0;
  double r_618_2_0 = r_617_scalar_0_0;
  double r_619_scalar_0_0 = act_motion_inv_4_3_0;
  double r_620_scalar_0_0 = act_motion_inv_4_4_0;
  double r_621_scalar_0_0 = act_motion_inv_4_5_0;
  double r_622_0_0 = r_619_scalar_0_0;
  double r_622_1_0 = r_620_scalar_0_0;
  double r_622_2_0 = r_621_scalar_0_0;
  double r_623_matrix_negate_0_0 = -(r_614_matrix_negate_0_0);
  double r_624_scalar_0_0 = r_618_1_0;
  double r_625_mul_0_0 = (r_623_matrix_negate_0_0 * r_624_scalar_0_0);
  double r_626_scalar_0_0 = r_618_0_0;
  double r_627_mul_0_0 = (r_614_matrix_negate_0_0 * r_626_scalar_0_0);
  double r_628_0_0 = 0;
  double r_629_0_0 = r_625_mul_0_0;
  double r_629_1_0 = r_627_mul_0_0;
  double r_629_2_0 = r_628_0_0;
  double alpha_cross_linear_4_0_0 = r_629_0_0;
  double alpha_cross_linear_4_1_0 = r_629_1_0;
  double alpha_cross_linear_4_2_0 = r_629_2_0;
  double r_630_matrix_negate_0_0 = -(r_614_matrix_negate_0_0);
  double r_631_scalar_0_0 = r_622_1_0;
  double r_632_mul_0_0 = (r_630_matrix_negate_0_0 * r_631_scalar_0_0);
  double r_633_scalar_0_0 = r_622_0_0;
  double r_634_mul_0_0 = (r_614_matrix_negate_0_0 * r_633_scalar_0_0);
  double r_635_0_0 = 0;
  double r_636_0_0 = r_632_mul_0_0;
  double r_636_1_0 = r_634_mul_0_0;
  double r_636_2_0 = r_635_0_0;
  double alpha_cross_angular_4_0_0 = r_636_0_0;
  double alpha_cross_angular_4_1_0 = r_636_1_0;
  double alpha_cross_angular_4_2_0 = r_636_2_0;
  double r_637_scalar_0_0 = alpha_cross_linear_4_0_0;
  double r_638_scalar_0_0 = alpha_cross_linear_4_1_0;
  double r_639_scalar_0_0 = alpha_cross_linear_4_2_0;
  double r_640_scalar_0_0 = alpha_cross_angular_4_0_0;
  double r_641_scalar_0_0 = alpha_cross_angular_4_1_0;
  double r_642_scalar_0_0 = alpha_cross_angular_4_2_0;
  double r_643_0_0 = r_637_scalar_0_0;
  double r_643_1_0 = r_638_scalar_0_0;
  double r_643_2_0 = r_639_scalar_0_0;
  double r_643_3_0 = r_640_scalar_0_0;
  double r_643_4_0 = r_641_scalar_0_0;
  double r_643_5_0 = r_642_scalar_0_0;
  double alpha_cross_4_0_0 = r_643_0_0;
  double alpha_cross_4_1_0 = r_643_1_0;
  double alpha_cross_4_2_0 = r_643_2_0;
  double alpha_cross_4_3_0 = r_643_3_0;
  double alpha_cross_4_4_0 = r_643_4_0;
  double alpha_cross_4_5_0 = r_643_5_0;
  double r_644_scalar_0_0 = a_4_0;
  double r_645_scalar_0_0 = alpha_cross_4_5_0;
  double r_646_add_0_0 = (r_644_scalar_0_0 + r_645_scalar_0_0);
  double r_647_scalar_0_0 = alpha_cross_4_0_0;
  double r_648_scalar_0_0 = alpha_cross_4_1_0;
  double r_649_scalar_0_0 = alpha_cross_4_2_0;
  double r_650_scalar_0_0 = alpha_cross_4_3_0;
  double r_651_scalar_0_0 = alpha_cross_4_4_0;
  double r_652_0_0 = r_647_scalar_0_0;
  double r_652_1_0 = r_648_scalar_0_0;
  double r_652_2_0 = r_649_scalar_0_0;
  double r_652_3_0 = r_650_scalar_0_0;
  double r_652_4_0 = r_651_scalar_0_0;
  double r_652_5_0 = r_646_add_0_0;
  double r_653_scalar_0_0 = r_532_add_0_0;
  double r_654_scalar_0_0 = r_532_add_1_0;
  double r_655_scalar_0_0 = r_532_add_2_0;
  double r_656_0_0 = r_653_scalar_0_0;
  double r_656_1_0 = r_654_scalar_0_0;
  double r_656_2_0 = r_655_scalar_0_0;
  double r_657_scalar_0_0 = r_532_add_3_0;
  double r_658_scalar_0_0 = r_532_add_4_0;
  double r_659_scalar_0_0 = r_532_add_5_0;
  double r_660_0_0 = r_657_scalar_0_0;
  double r_660_1_0 = r_658_scalar_0_0;
  double r_660_2_0 = r_659_scalar_0_0;
  double r_661_vector_cross_0_0 = ((limi_translation_4_1_0 * r_660_2_0) - (limi_translation_4_2_0 * r_660_1_0));
  double r_661_vector_cross_1_0 = ((limi_translation_4_2_0 * r_660_0_0) - (limi_translation_4_0_0 * r_660_2_0));
  double r_661_vector_cross_2_0 = ((limi_translation_4_0_0 * r_660_1_0) - (limi_translation_4_1_0 * r_660_0_0));
  double r_662_sub_0_0 = (r_656_0_0 - r_661_vector_cross_0_0);
  double r_662_sub_1_0 = (r_656_1_0 - r_661_vector_cross_1_0);
  double r_662_sub_2_0 = (r_656_2_0 - r_661_vector_cross_2_0);
  double r_663_transpose_0_0 = limi_rotation_4_0_0;
  double r_663_transpose_0_1 = limi_rotation_4_1_0;
  double r_663_transpose_0_2 = limi_rotation_4_2_0;
  double r_663_transpose_1_0 = limi_rotation_4_0_1;
  double r_663_transpose_1_1 = limi_rotation_4_1_1;
  double r_663_transpose_1_2 = limi_rotation_4_2_1;
  double r_663_transpose_2_0 = limi_rotation_4_0_2;
  double r_663_transpose_2_1 = limi_rotation_4_1_2;
  double r_663_transpose_2_2 = limi_rotation_4_2_2;
  double r_664_mul_0_0 = (((r_663_transpose_0_0 * r_662_sub_0_0) + (r_663_transpose_0_1 * r_662_sub_1_0)) + (r_663_transpose_0_2 * r_662_sub_2_0));
  double r_664_mul_1_0 = (((r_663_transpose_1_0 * r_662_sub_0_0) + (r_663_transpose_1_1 * r_662_sub_1_0)) + (r_663_transpose_1_2 * r_662_sub_2_0));
  double r_664_mul_2_0 = (((r_663_transpose_2_0 * r_662_sub_0_0) + (r_663_transpose_2_1 * r_662_sub_1_0)) + (r_663_transpose_2_2 * r_662_sub_2_0));
  double r_665_mul_0_0 = (((r_663_transpose_0_0 * r_660_0_0) + (r_663_transpose_0_1 * r_660_1_0)) + (r_663_transpose_0_2 * r_660_2_0));
  double r_665_mul_1_0 = (((r_663_transpose_1_0 * r_660_0_0) + (r_663_transpose_1_1 * r_660_1_0)) + (r_663_transpose_1_2 * r_660_2_0));
  double r_665_mul_2_0 = (((r_663_transpose_2_0 * r_660_0_0) + (r_663_transpose_2_1 * r_660_1_0)) + (r_663_transpose_2_2 * r_660_2_0));
  double r_666_scalar_0_0 = r_664_mul_0_0;
  double r_667_scalar_0_0 = r_664_mul_1_0;
  double r_668_scalar_0_0 = r_664_mul_2_0;
  double r_669_scalar_0_0 = r_665_mul_0_0;
  double r_670_scalar_0_0 = r_665_mul_1_0;
  double r_671_scalar_0_0 = r_665_mul_2_0;
  double r_672_0_0 = r_666_scalar_0_0;
  double r_672_1_0 = r_667_scalar_0_0;
  double r_672_2_0 = r_668_scalar_0_0;
  double r_672_3_0 = r_669_scalar_0_0;
  double r_672_4_0 = r_670_scalar_0_0;
  double r_672_5_0 = r_671_scalar_0_0;
  double act_inv_4_0_0 = r_672_0_0;
  double act_inv_4_1_0 = r_672_1_0;
  double act_inv_4_2_0 = r_672_2_0;
  double act_inv_4_3_0 = r_672_3_0;
  double act_inv_4_4_0 = r_672_4_0;
  double act_inv_4_5_0 = r_672_5_0;
  double r_673_add_0_0 = (r_652_0_0 + act_inv_4_0_0);
  double r_673_add_1_0 = (r_652_1_0 + act_inv_4_1_0);
  double r_673_add_2_0 = (r_652_2_0 + act_inv_4_2_0);
  double r_673_add_3_0 = (r_652_3_0 + act_inv_4_3_0);
  double r_673_add_4_0 = (r_652_4_0 + act_inv_4_4_0);
  double r_673_add_5_0 = (r_652_5_0 + act_inv_4_5_0);
  double r_674_scalar_0_0 = qcos_5_0;
  double r_675_scalar_0_0 = qsin_5_0;
  double r_676_matrix_negate_0_0 = -(r_675_scalar_0_0);
  double r_677_0_0 = 0;
  double r_678_scalar_0_0 = qsin_5_0;
  double r_679_scalar_0_0 = qcos_5_0;
  double r_680_0_0 = 0;
  double r_681_0_0 = 0;
  double r_682_0_0 = 0;
  double r_683_0_0 = 1;
  double r_684_0_0 = r_674_scalar_0_0;
  double r_684_0_1 = r_676_matrix_negate_0_0;
  double r_684_0_2 = r_677_0_0;
  double r_684_1_0 = r_678_scalar_0_0;
  double r_684_1_1 = r_679_scalar_0_0;
  double r_684_1_2 = r_680_0_0;
  double r_684_2_0 = r_681_0_0;
  double r_684_2_1 = r_682_0_0;
  double r_684_2_2 = r_683_0_0;
  double r_685_0_0 = 0;
  double r_686_0_0 = 1;
  double r_687_0_0 = 1;
  double r_688_0_0 = 0;
  double r_689_0_0 = 1;
  double r_690_0_0 = 0;
  double r_691_mul_0_0 = (r_689_0_0 * r_687_0_0);
  double r_692_mul_0_0 = (r_689_0_0 * r_688_0_0);
  double r_693_mul_0_0 = (r_692_mul_0_0 * r_686_0_0);
  double r_694_mul_0_0 = (r_690_0_0 * r_685_0_0);
  double r_695_sub_0_0 = (r_693_mul_0_0 - r_694_mul_0_0);
  double r_696_mul_0_0 = (r_689_0_0 * r_688_0_0);
  double r_697_mul_0_0 = (r_696_mul_0_0 * r_685_0_0);
  double r_698_mul_0_0 = (r_690_0_0 * r_686_0_0);
  double r_699_add_0_0 = (r_697_mul_0_0 + r_698_mul_0_0);
  double r_700_mul_0_0 = (r_690_0_0 * r_687_0_0);
  double r_701_mul_0_0 = (r_690_0_0 * r_688_0_0);
  double r_702_mul_0_0 = (r_701_mul_0_0 * r_686_0_0);
  double r_703_mul_0_0 = (r_689_0_0 * r_685_0_0);
  double r_704_add_0_0 = (r_702_mul_0_0 + r_703_mul_0_0);
  double r_705_mul_0_0 = (r_690_0_0 * r_688_0_0);
  double r_706_mul_0_0 = (r_705_mul_0_0 * r_685_0_0);
  double r_707_mul_0_0 = (r_689_0_0 * r_686_0_0);
  double r_708_sub_0_0 = (r_706_mul_0_0 - r_707_mul_0_0);
  double r_709_matrix_negate_0_0 = -(r_688_0_0);
  double r_710_mul_0_0 = (r_687_0_0 * r_686_0_0);
  double r_711_mul_0_0 = (r_687_0_0 * r_685_0_0);
  double r_712_0_0 = r_691_mul_0_0;
  double r_712_0_1 = r_695_sub_0_0;
  double r_712_0_2 = r_699_add_0_0;
  double r_712_1_0 = r_700_mul_0_0;
  double r_712_1_1 = r_704_add_0_0;
  double r_712_1_2 = r_708_sub_0_0;
  double r_712_2_0 = r_709_matrix_negate_0_0;
  double r_712_2_1 = r_710_mul_0_0;
  double r_712_2_2 = r_711_mul_0_0;
  double r_713_mul_0_0 = (((r_712_0_0 * r_684_0_0) + (r_712_0_1 * r_684_1_0)) + (r_712_0_2 * r_684_2_0));
  double r_713_mul_0_1 = (((r_712_0_0 * r_684_0_1) + (r_712_0_1 * r_684_1_1)) + (r_712_0_2 * r_684_2_1));
  double r_713_mul_0_2 = (((r_712_0_0 * r_684_0_2) + (r_712_0_1 * r_684_1_2)) + (r_712_0_2 * r_684_2_2));
  double r_713_mul_1_0 = (((r_712_1_0 * r_684_0_0) + (r_712_1_1 * r_684_1_0)) + (r_712_1_2 * r_684_2_0));
  double r_713_mul_1_1 = (((r_712_1_0 * r_684_0_1) + (r_712_1_1 * r_684_1_1)) + (r_712_1_2 * r_684_2_1));
  double r_713_mul_1_2 = (((r_712_1_0 * r_684_0_2) + (r_712_1_1 * r_684_1_2)) + (r_712_1_2 * r_684_2_2));
  double r_713_mul_2_0 = (((r_712_2_0 * r_684_0_0) + (r_712_2_1 * r_684_1_0)) + (r_712_2_2 * r_684_2_0));
  double r_713_mul_2_1 = (((r_712_2_0 * r_684_0_1) + (r_712_2_1 * r_684_1_1)) + (r_712_2_2 * r_684_2_1));
  double r_713_mul_2_2 = (((r_712_2_0 * r_684_0_2) + (r_712_2_1 * r_684_1_2)) + (r_712_2_2 * r_684_2_2));
  double limi_rotation_5_0_0 = r_713_mul_0_0;
  double limi_rotation_5_0_1 = r_713_mul_0_1;
  double limi_rotation_5_0_2 = r_713_mul_0_2;
  double limi_rotation_5_1_0 = r_713_mul_1_0;
  double limi_rotation_5_1_1 = r_713_mul_1_1;
  double limi_rotation_5_1_2 = r_713_mul_1_2;
  double limi_rotation_5_2_0 = r_713_mul_2_0;
  double limi_rotation_5_2_1 = r_713_mul_2_1;
  double limi_rotation_5_2_2 = r_713_mul_2_2;
  double r_714_mul_0_0 = (((r_573_mul_0_0 * limi_rotation_5_0_0) + (r_573_mul_0_1 * limi_rotation_5_1_0)) + (r_573_mul_0_2 * limi_rotation_5_2_0));
  double r_714_mul_0_1 = (((r_573_mul_0_0 * limi_rotation_5_0_1) + (r_573_mul_0_1 * limi_rotation_5_1_1)) + (r_573_mul_0_2 * limi_rotation_5_2_1));
  double r_714_mul_0_2 = (((r_573_mul_0_0 * limi_rotation_5_0_2) + (r_573_mul_0_1 * limi_rotation_5_1_2)) + (r_573_mul_0_2 * limi_rotation_5_2_2));
  double r_714_mul_1_0 = (((r_573_mul_1_0 * limi_rotation_5_0_0) + (r_573_mul_1_1 * limi_rotation_5_1_0)) + (r_573_mul_1_2 * limi_rotation_5_2_0));
  double r_714_mul_1_1 = (((r_573_mul_1_0 * limi_rotation_5_0_1) + (r_573_mul_1_1 * limi_rotation_5_1_1)) + (r_573_mul_1_2 * limi_rotation_5_2_1));
  double r_714_mul_1_2 = (((r_573_mul_1_0 * limi_rotation_5_0_2) + (r_573_mul_1_1 * limi_rotation_5_1_2)) + (r_573_mul_1_2 * limi_rotation_5_2_2));
  double r_714_mul_2_0 = (((r_573_mul_2_0 * limi_rotation_5_0_0) + (r_573_mul_2_1 * limi_rotation_5_1_0)) + (r_573_mul_2_2 * limi_rotation_5_2_0));
  double r_714_mul_2_1 = (((r_573_mul_2_0 * limi_rotation_5_0_1) + (r_573_mul_2_1 * limi_rotation_5_1_1)) + (r_573_mul_2_2 * limi_rotation_5_2_1));
  double r_714_mul_2_2 = (((r_573_mul_2_0 * limi_rotation_5_0_2) + (r_573_mul_2_1 * limi_rotation_5_1_2)) + (r_573_mul_2_2 * limi_rotation_5_2_2));
  double r_715_mul_0_0 = (((r_573_mul_0_0 * limi_translation_5_0_0) + (r_573_mul_0_1 * limi_translation_5_1_0)) + (r_573_mul_0_2 * limi_translation_5_2_0));
  double r_715_mul_1_0 = (((r_573_mul_1_0 * limi_translation_5_0_0) + (r_573_mul_1_1 * limi_translation_5_1_0)) + (r_573_mul_1_2 * limi_translation_5_2_0));
  double r_715_mul_2_0 = (((r_573_mul_2_0 * limi_translation_5_0_0) + (r_573_mul_2_1 * limi_translation_5_1_0)) + (r_573_mul_2_2 * limi_translation_5_2_0));
  double r_716_add_0_0 = (r_575_add_0_0 + r_715_mul_0_0);
  double r_716_add_1_0 = (r_575_add_1_0 + r_715_mul_1_0);
  double r_716_add_2_0 = (r_575_add_2_0 + r_715_mul_2_0);
  double r_717_0_0 = 0;
  double r_718_0_0 = 0;
  double r_719_0_0 = 0;
  double r_720_0_0 = 0;
  double r_721_0_0 = 0;
  double r_722_scalar_0_0 = v_5_0;
  double r_723_0_0 = r_717_0_0;
  double r_723_1_0 = r_718_0_0;
  double r_723_2_0 = r_719_0_0;
  double r_723_3_0 = r_720_0_0;
  double r_723_4_0 = r_721_0_0;
  double r_723_5_0 = r_722_scalar_0_0;
  double r_724_scalar_0_0 = act_motion_inv_4_0_0;
  double r_725_scalar_0_0 = act_motion_inv_4_1_0;
  double r_726_scalar_0_0 = act_motion_inv_4_2_0;
  double r_727_0_0 = r_724_scalar_0_0;
  double r_727_1_0 = r_725_scalar_0_0;
  double r_727_2_0 = r_726_scalar_0_0;
  double r_728_scalar_0_0 = act_motion_inv_4_3_0;
  double r_729_scalar_0_0 = act_motion_inv_4_4_0;
  double r_730_scalar_0_0 = act_motion_inv_4_5_0;
  double r_731_0_0 = r_728_scalar_0_0;
  double r_731_1_0 = r_729_scalar_0_0;
  double r_731_2_0 = r_730_scalar_0_0;
  double r_732_scalar_0_0 = r_723_0_0;
  double r_733_scalar_0_0 = r_723_1_0;
  double r_734_scalar_0_0 = r_723_2_0;
  double r_735_0_0 = r_732_scalar_0_0;
  double r_735_1_0 = r_733_scalar_0_0;
  double r_735_2_0 = r_734_scalar_0_0;
  double r_736_scalar_0_0 = r_723_3_0;
  double r_737_scalar_0_0 = r_723_4_0;
  double r_738_scalar_0_0 = r_723_5_0;
  double r_739_0_0 = r_736_scalar_0_0;
  double r_739_1_0 = r_737_scalar_0_0;
  double r_739_2_0 = r_738_scalar_0_0;
  double r_740_vector_cross_0_0 = ((limi_translation_5_1_0 * r_731_2_0) - (limi_translation_5_2_0 * r_731_1_0));
  double r_740_vector_cross_1_0 = ((limi_translation_5_2_0 * r_731_0_0) - (limi_translation_5_0_0 * r_731_2_0));
  double r_740_vector_cross_2_0 = ((limi_translation_5_0_0 * r_731_1_0) - (limi_translation_5_1_0 * r_731_0_0));
  double r_741_sub_0_0 = (r_727_0_0 - r_740_vector_cross_0_0);
  double r_741_sub_1_0 = (r_727_1_0 - r_740_vector_cross_1_0);
  double r_741_sub_2_0 = (r_727_2_0 - r_740_vector_cross_2_0);
  double r_742_transpose_0_0 = limi_rotation_5_0_0;
  double r_742_transpose_0_1 = limi_rotation_5_1_0;
  double r_742_transpose_0_2 = limi_rotation_5_2_0;
  double r_742_transpose_1_0 = limi_rotation_5_0_1;
  double r_742_transpose_1_1 = limi_rotation_5_1_1;
  double r_742_transpose_1_2 = limi_rotation_5_2_1;
  double r_742_transpose_2_0 = limi_rotation_5_0_2;
  double r_742_transpose_2_1 = limi_rotation_5_1_2;
  double r_742_transpose_2_2 = limi_rotation_5_2_2;
  double r_743_mul_0_0 = (((r_742_transpose_0_0 * r_741_sub_0_0) + (r_742_transpose_0_1 * r_741_sub_1_0)) + (r_742_transpose_0_2 * r_741_sub_2_0));
  double r_743_mul_1_0 = (((r_742_transpose_1_0 * r_741_sub_0_0) + (r_742_transpose_1_1 * r_741_sub_1_0)) + (r_742_transpose_1_2 * r_741_sub_2_0));
  double r_743_mul_2_0 = (((r_742_transpose_2_0 * r_741_sub_0_0) + (r_742_transpose_2_1 * r_741_sub_1_0)) + (r_742_transpose_2_2 * r_741_sub_2_0));
  double r_744_add_0_0 = (r_735_0_0 + r_743_mul_0_0);
  double r_744_add_1_0 = (r_735_1_0 + r_743_mul_1_0);
  double r_744_add_2_0 = (r_735_2_0 + r_743_mul_2_0);
  double r_745_mul_0_0 = (((r_742_transpose_0_0 * r_731_0_0) + (r_742_transpose_0_1 * r_731_1_0)) + (r_742_transpose_0_2 * r_731_2_0));
  double r_745_mul_1_0 = (((r_742_transpose_1_0 * r_731_0_0) + (r_742_transpose_1_1 * r_731_1_0)) + (r_742_transpose_1_2 * r_731_2_0));
  double r_745_mul_2_0 = (((r_742_transpose_2_0 * r_731_0_0) + (r_742_transpose_2_1 * r_731_1_0)) + (r_742_transpose_2_2 * r_731_2_0));
  double r_746_add_0_0 = (r_739_0_0 + r_745_mul_0_0);
  double r_746_add_1_0 = (r_739_1_0 + r_745_mul_1_0);
  double r_746_add_2_0 = (r_739_2_0 + r_745_mul_2_0);
  double r_747_scalar_0_0 = r_744_add_0_0;
  double r_748_scalar_0_0 = r_744_add_1_0;
  double r_749_scalar_0_0 = r_744_add_2_0;
  double r_750_scalar_0_0 = r_746_add_0_0;
  double r_751_scalar_0_0 = r_746_add_1_0;
  double r_752_scalar_0_0 = r_746_add_2_0;
  double r_753_0_0 = r_747_scalar_0_0;
  double r_753_1_0 = r_748_scalar_0_0;
  double r_753_2_0 = r_749_scalar_0_0;
  double r_753_3_0 = r_750_scalar_0_0;
  double r_753_4_0 = r_751_scalar_0_0;
  double r_753_5_0 = r_752_scalar_0_0;
  double act_motion_inv_5_0_0 = r_753_0_0;
  double act_motion_inv_5_1_0 = r_753_1_0;
  double act_motion_inv_5_2_0 = r_753_2_0;
  double act_motion_inv_5_3_0 = r_753_3_0;
  double act_motion_inv_5_4_0 = r_753_4_0;
  double act_motion_inv_5_5_0 = r_753_5_0;
  double r_754_scalar_0_0 = v_5_0;
  double r_755_matrix_negate_0_0 = -(r_754_scalar_0_0);
  double r_756_scalar_0_0 = act_motion_inv_5_0_0;
  double r_757_scalar_0_0 = act_motion_inv_5_1_0;
  double r_758_scalar_0_0 = act_motion_inv_5_2_0;
  double r_759_0_0 = r_756_scalar_0_0;
  double r_759_1_0 = r_757_scalar_0_0;
  double r_759_2_0 = r_758_scalar_0_0;
  double r_760_scalar_0_0 = act_motion_inv_5_3_0;
  double r_761_scalar_0_0 = act_motion_inv_5_4_0;
  double r_762_scalar_0_0 = act_motion_inv_5_5_0;
  double r_763_0_0 = r_760_scalar_0_0;
  double r_763_1_0 = r_761_scalar_0_0;
  double r_763_2_0 = r_762_scalar_0_0;
  double r_764_matrix_negate_0_0 = -(r_755_matrix_negate_0_0);
  double r_765_scalar_0_0 = r_759_1_0;
  double r_766_mul_0_0 = (r_764_matrix_negate_0_0 * r_765_scalar_0_0);
  double r_767_scalar_0_0 = r_759_0_0;
  double r_768_mul_0_0 = (r_755_matrix_negate_0_0 * r_767_scalar_0_0);
  double r_769_0_0 = 0;
  double r_770_0_0 = r_766_mul_0_0;
  double r_770_1_0 = r_768_mul_0_0;
  double r_770_2_0 = r_769_0_0;
  double alpha_cross_linear_5_0_0 = r_770_0_0;
  double alpha_cross_linear_5_1_0 = r_770_1_0;
  double alpha_cross_linear_5_2_0 = r_770_2_0;
  double r_771_matrix_negate_0_0 = -(r_755_matrix_negate_0_0);
  double r_772_scalar_0_0 = r_763_1_0;
  double r_773_mul_0_0 = (r_771_matrix_negate_0_0 * r_772_scalar_0_0);
  double r_774_scalar_0_0 = r_763_0_0;
  double r_775_mul_0_0 = (r_755_matrix_negate_0_0 * r_774_scalar_0_0);
  double r_776_0_0 = 0;
  double r_777_0_0 = r_773_mul_0_0;
  double r_777_1_0 = r_775_mul_0_0;
  double r_777_2_0 = r_776_0_0;
  double alpha_cross_angular_5_0_0 = r_777_0_0;
  double alpha_cross_angular_5_1_0 = r_777_1_0;
  double alpha_cross_angular_5_2_0 = r_777_2_0;
  double r_778_scalar_0_0 = alpha_cross_linear_5_0_0;
  double r_779_scalar_0_0 = alpha_cross_linear_5_1_0;
  double r_780_scalar_0_0 = alpha_cross_linear_5_2_0;
  double r_781_scalar_0_0 = alpha_cross_angular_5_0_0;
  double r_782_scalar_0_0 = alpha_cross_angular_5_1_0;
  double r_783_scalar_0_0 = alpha_cross_angular_5_2_0;
  double r_784_0_0 = r_778_scalar_0_0;
  double r_784_1_0 = r_779_scalar_0_0;
  double r_784_2_0 = r_780_scalar_0_0;
  double r_784_3_0 = r_781_scalar_0_0;
  double r_784_4_0 = r_782_scalar_0_0;
  double r_784_5_0 = r_783_scalar_0_0;
  double alpha_cross_5_0_0 = r_784_0_0;
  double alpha_cross_5_1_0 = r_784_1_0;
  double alpha_cross_5_2_0 = r_784_2_0;
  double alpha_cross_5_3_0 = r_784_3_0;
  double alpha_cross_5_4_0 = r_784_4_0;
  double alpha_cross_5_5_0 = r_784_5_0;
  double r_785_scalar_0_0 = a_5_0;
  double r_786_scalar_0_0 = alpha_cross_5_5_0;
  double r_787_add_0_0 = (r_785_scalar_0_0 + r_786_scalar_0_0);
  double r_788_scalar_0_0 = alpha_cross_5_0_0;
  double r_789_scalar_0_0 = alpha_cross_5_1_0;
  double r_790_scalar_0_0 = alpha_cross_5_2_0;
  double r_791_scalar_0_0 = alpha_cross_5_3_0;
  double r_792_scalar_0_0 = alpha_cross_5_4_0;
  double r_793_0_0 = r_788_scalar_0_0;
  double r_793_1_0 = r_789_scalar_0_0;
  double r_793_2_0 = r_790_scalar_0_0;
  double r_793_3_0 = r_791_scalar_0_0;
  double r_793_4_0 = r_792_scalar_0_0;
  double r_793_5_0 = r_787_add_0_0;
  double r_794_scalar_0_0 = r_673_add_0_0;
  double r_795_scalar_0_0 = r_673_add_1_0;
  double r_796_scalar_0_0 = r_673_add_2_0;
  double r_797_0_0 = r_794_scalar_0_0;
  double r_797_1_0 = r_795_scalar_0_0;
  double r_797_2_0 = r_796_scalar_0_0;
  double r_798_scalar_0_0 = r_673_add_3_0;
  double r_799_scalar_0_0 = r_673_add_4_0;
  double r_800_scalar_0_0 = r_673_add_5_0;
  double r_801_0_0 = r_798_scalar_0_0;
  double r_801_1_0 = r_799_scalar_0_0;
  double r_801_2_0 = r_800_scalar_0_0;
  double r_802_vector_cross_0_0 = ((limi_translation_5_1_0 * r_801_2_0) - (limi_translation_5_2_0 * r_801_1_0));
  double r_802_vector_cross_1_0 = ((limi_translation_5_2_0 * r_801_0_0) - (limi_translation_5_0_0 * r_801_2_0));
  double r_802_vector_cross_2_0 = ((limi_translation_5_0_0 * r_801_1_0) - (limi_translation_5_1_0 * r_801_0_0));
  double r_803_sub_0_0 = (r_797_0_0 - r_802_vector_cross_0_0);
  double r_803_sub_1_0 = (r_797_1_0 - r_802_vector_cross_1_0);
  double r_803_sub_2_0 = (r_797_2_0 - r_802_vector_cross_2_0);
  double r_804_transpose_0_0 = limi_rotation_5_0_0;
  double r_804_transpose_0_1 = limi_rotation_5_1_0;
  double r_804_transpose_0_2 = limi_rotation_5_2_0;
  double r_804_transpose_1_0 = limi_rotation_5_0_1;
  double r_804_transpose_1_1 = limi_rotation_5_1_1;
  double r_804_transpose_1_2 = limi_rotation_5_2_1;
  double r_804_transpose_2_0 = limi_rotation_5_0_2;
  double r_804_transpose_2_1 = limi_rotation_5_1_2;
  double r_804_transpose_2_2 = limi_rotation_5_2_2;
  double r_805_mul_0_0 = (((r_804_transpose_0_0 * r_803_sub_0_0) + (r_804_transpose_0_1 * r_803_sub_1_0)) + (r_804_transpose_0_2 * r_803_sub_2_0));
  double r_805_mul_1_0 = (((r_804_transpose_1_0 * r_803_sub_0_0) + (r_804_transpose_1_1 * r_803_sub_1_0)) + (r_804_transpose_1_2 * r_803_sub_2_0));
  double r_805_mul_2_0 = (((r_804_transpose_2_0 * r_803_sub_0_0) + (r_804_transpose_2_1 * r_803_sub_1_0)) + (r_804_transpose_2_2 * r_803_sub_2_0));
  double r_806_mul_0_0 = (((r_804_transpose_0_0 * r_801_0_0) + (r_804_transpose_0_1 * r_801_1_0)) + (r_804_transpose_0_2 * r_801_2_0));
  double r_806_mul_1_0 = (((r_804_transpose_1_0 * r_801_0_0) + (r_804_transpose_1_1 * r_801_1_0)) + (r_804_transpose_1_2 * r_801_2_0));
  double r_806_mul_2_0 = (((r_804_transpose_2_0 * r_801_0_0) + (r_804_transpose_2_1 * r_801_1_0)) + (r_804_transpose_2_2 * r_801_2_0));
  double r_807_scalar_0_0 = r_805_mul_0_0;
  double r_808_scalar_0_0 = r_805_mul_1_0;
  double r_809_scalar_0_0 = r_805_mul_2_0;
  double r_810_scalar_0_0 = r_806_mul_0_0;
  double r_811_scalar_0_0 = r_806_mul_1_0;
  double r_812_scalar_0_0 = r_806_mul_2_0;
  double r_813_0_0 = r_807_scalar_0_0;
  double r_813_1_0 = r_808_scalar_0_0;
  double r_813_2_0 = r_809_scalar_0_0;
  double r_813_3_0 = r_810_scalar_0_0;
  double r_813_4_0 = r_811_scalar_0_0;
  double r_813_5_0 = r_812_scalar_0_0;
  double act_inv_5_0_0 = r_813_0_0;
  double act_inv_5_1_0 = r_813_1_0;
  double act_inv_5_2_0 = r_813_2_0;
  double act_inv_5_3_0 = r_813_3_0;
  double act_inv_5_4_0 = r_813_4_0;
  double act_inv_5_5_0 = r_813_5_0;
  double r_814_add_0_0 = (r_793_0_0 + act_inv_5_0_0);
  double r_814_add_1_0 = (r_793_1_0 + act_inv_5_1_0);
  double r_814_add_2_0 = (r_793_2_0 + act_inv_5_2_0);
  double r_814_add_3_0 = (r_793_3_0 + act_inv_5_3_0);
  double r_814_add_4_0 = (r_793_4_0 + act_inv_5_4_0);
  double r_814_add_5_0 = (r_793_5_0 + act_inv_5_5_0);
  double r_815_scalar_0_0 = qcos_6_0;
  double r_816_scalar_0_0 = qsin_6_0;
  double r_817_matrix_negate_0_0 = -(r_816_scalar_0_0);
  double r_818_0_0 = 0;
  double r_819_scalar_0_0 = qsin_6_0;
  double r_820_scalar_0_0 = qcos_6_0;
  double r_821_0_0 = 0;
  double r_822_0_0 = 0;
  double r_823_0_0 = 0;
  double r_824_0_0 = 1;
  double r_825_0_0 = r_815_scalar_0_0;
  double r_825_0_1 = r_817_matrix_negate_0_0;
  double r_825_0_2 = r_818_0_0;
  double r_825_1_0 = r_819_scalar_0_0;
  double r_825_1_1 = r_820_scalar_0_0;
  double r_825_1_2 = r_821_0_0;
  double r_825_2_0 = r_822_0_0;
  double r_825_2_1 = r_823_0_0;
  double r_825_2_2 = r_824_0_0;
  double r_826_0_0 = 0;
  double r_827_0_0 = 1;
  double r_828_0_0 = 1;
  double r_829_0_0 = 0;
  double r_830_0_0 = 1;
  double r_831_0_0 = 0;
  double r_832_mul_0_0 = (r_830_0_0 * r_828_0_0);
  double r_833_mul_0_0 = (r_830_0_0 * r_829_0_0);
  double r_834_mul_0_0 = (r_833_mul_0_0 * r_827_0_0);
  double r_835_mul_0_0 = (r_831_0_0 * r_826_0_0);
  double r_836_sub_0_0 = (r_834_mul_0_0 - r_835_mul_0_0);
  double r_837_mul_0_0 = (r_830_0_0 * r_829_0_0);
  double r_838_mul_0_0 = (r_837_mul_0_0 * r_826_0_0);
  double r_839_mul_0_0 = (r_831_0_0 * r_827_0_0);
  double r_840_add_0_0 = (r_838_mul_0_0 + r_839_mul_0_0);
  double r_841_mul_0_0 = (r_831_0_0 * r_828_0_0);
  double r_842_mul_0_0 = (r_831_0_0 * r_829_0_0);
  double r_843_mul_0_0 = (r_842_mul_0_0 * r_827_0_0);
  double r_844_mul_0_0 = (r_830_0_0 * r_826_0_0);
  double r_845_add_0_0 = (r_843_mul_0_0 + r_844_mul_0_0);
  double r_846_mul_0_0 = (r_831_0_0 * r_829_0_0);
  double r_847_mul_0_0 = (r_846_mul_0_0 * r_826_0_0);
  double r_848_mul_0_0 = (r_830_0_0 * r_827_0_0);
  double r_849_sub_0_0 = (r_847_mul_0_0 - r_848_mul_0_0);
  double r_850_matrix_negate_0_0 = -(r_829_0_0);
  double r_851_mul_0_0 = (r_828_0_0 * r_827_0_0);
  double r_852_mul_0_0 = (r_828_0_0 * r_826_0_0);
  double r_853_0_0 = r_832_mul_0_0;
  double r_853_0_1 = r_836_sub_0_0;
  double r_853_0_2 = r_840_add_0_0;
  double r_853_1_0 = r_841_mul_0_0;
  double r_853_1_1 = r_845_add_0_0;
  double r_853_1_2 = r_849_sub_0_0;
  double r_853_2_0 = r_850_matrix_negate_0_0;
  double r_853_2_1 = r_851_mul_0_0;
  double r_853_2_2 = r_852_mul_0_0;
  double r_854_mul_0_0 = (((r_853_0_0 * r_825_0_0) + (r_853_0_1 * r_825_1_0)) + (r_853_0_2 * r_825_2_0));
  double r_854_mul_0_1 = (((r_853_0_0 * r_825_0_1) + (r_853_0_1 * r_825_1_1)) + (r_853_0_2 * r_825_2_1));
  double r_854_mul_0_2 = (((r_853_0_0 * r_825_0_2) + (r_853_0_1 * r_825_1_2)) + (r_853_0_2 * r_825_2_2));
  double r_854_mul_1_0 = (((r_853_1_0 * r_825_0_0) + (r_853_1_1 * r_825_1_0)) + (r_853_1_2 * r_825_2_0));
  double r_854_mul_1_1 = (((r_853_1_0 * r_825_0_1) + (r_853_1_1 * r_825_1_1)) + (r_853_1_2 * r_825_2_1));
  double r_854_mul_1_2 = (((r_853_1_0 * r_825_0_2) + (r_853_1_1 * r_825_1_2)) + (r_853_1_2 * r_825_2_2));
  double r_854_mul_2_0 = (((r_853_2_0 * r_825_0_0) + (r_853_2_1 * r_825_1_0)) + (r_853_2_2 * r_825_2_0));
  double r_854_mul_2_1 = (((r_853_2_0 * r_825_0_1) + (r_853_2_1 * r_825_1_1)) + (r_853_2_2 * r_825_2_1));
  double r_854_mul_2_2 = (((r_853_2_0 * r_825_0_2) + (r_853_2_1 * r_825_1_2)) + (r_853_2_2 * r_825_2_2));
  double limi_rotation_6_0_0 = r_854_mul_0_0;
  double limi_rotation_6_0_1 = r_854_mul_0_1;
  double limi_rotation_6_0_2 = r_854_mul_0_2;
  double limi_rotation_6_1_0 = r_854_mul_1_0;
  double limi_rotation_6_1_1 = r_854_mul_1_1;
  double limi_rotation_6_1_2 = r_854_mul_1_2;
  double limi_rotation_6_2_0 = r_854_mul_2_0;
  double limi_rotation_6_2_1 = r_854_mul_2_1;
  double limi_rotation_6_2_2 = r_854_mul_2_2;
  double r_855_mul_0_0 = (((r_714_mul_0_0 * limi_rotation_6_0_0) + (r_714_mul_0_1 * limi_rotation_6_1_0)) + (r_714_mul_0_2 * limi_rotation_6_2_0));
  double r_855_mul_0_1 = (((r_714_mul_0_0 * limi_rotation_6_0_1) + (r_714_mul_0_1 * limi_rotation_6_1_1)) + (r_714_mul_0_2 * limi_rotation_6_2_1));
  double r_855_mul_0_2 = (((r_714_mul_0_0 * limi_rotation_6_0_2) + (r_714_mul_0_1 * limi_rotation_6_1_2)) + (r_714_mul_0_2 * limi_rotation_6_2_2));
  double r_855_mul_1_0 = (((r_714_mul_1_0 * limi_rotation_6_0_0) + (r_714_mul_1_1 * limi_rotation_6_1_0)) + (r_714_mul_1_2 * limi_rotation_6_2_0));
  double r_855_mul_1_1 = (((r_714_mul_1_0 * limi_rotation_6_0_1) + (r_714_mul_1_1 * limi_rotation_6_1_1)) + (r_714_mul_1_2 * limi_rotation_6_2_1));
  double r_855_mul_1_2 = (((r_714_mul_1_0 * limi_rotation_6_0_2) + (r_714_mul_1_1 * limi_rotation_6_1_2)) + (r_714_mul_1_2 * limi_rotation_6_2_2));
  double r_855_mul_2_0 = (((r_714_mul_2_0 * limi_rotation_6_0_0) + (r_714_mul_2_1 * limi_rotation_6_1_0)) + (r_714_mul_2_2 * limi_rotation_6_2_0));
  double r_855_mul_2_1 = (((r_714_mul_2_0 * limi_rotation_6_0_1) + (r_714_mul_2_1 * limi_rotation_6_1_1)) + (r_714_mul_2_2 * limi_rotation_6_2_1));
  double r_855_mul_2_2 = (((r_714_mul_2_0 * limi_rotation_6_0_2) + (r_714_mul_2_1 * limi_rotation_6_1_2)) + (r_714_mul_2_2 * limi_rotation_6_2_2));
  double r_856_mul_0_0 = (((r_714_mul_0_0 * limi_translation_6_0_0) + (r_714_mul_0_1 * limi_translation_6_1_0)) + (r_714_mul_0_2 * limi_translation_6_2_0));
  double r_856_mul_1_0 = (((r_714_mul_1_0 * limi_translation_6_0_0) + (r_714_mul_1_1 * limi_translation_6_1_0)) + (r_714_mul_1_2 * limi_translation_6_2_0));
  double r_856_mul_2_0 = (((r_714_mul_2_0 * limi_translation_6_0_0) + (r_714_mul_2_1 * limi_translation_6_1_0)) + (r_714_mul_2_2 * limi_translation_6_2_0));
  double r_857_add_0_0 = (r_716_add_0_0 + r_856_mul_0_0);
  double r_857_add_1_0 = (r_716_add_1_0 + r_856_mul_1_0);
  double r_857_add_2_0 = (r_716_add_2_0 + r_856_mul_2_0);
  double r_858_0_0 = 0;
  double r_859_0_0 = 0;
  double r_860_0_0 = 0;
  double r_861_0_0 = 0;
  double r_862_0_0 = 0;
  double r_863_scalar_0_0 = v_6_0;
  double r_864_0_0 = r_858_0_0;
  double r_864_1_0 = r_859_0_0;
  double r_864_2_0 = r_860_0_0;
  double r_864_3_0 = r_861_0_0;
  double r_864_4_0 = r_862_0_0;
  double r_864_5_0 = r_863_scalar_0_0;
  double r_865_scalar_0_0 = act_motion_inv_5_0_0;
  double r_866_scalar_0_0 = act_motion_inv_5_1_0;
  double r_867_scalar_0_0 = act_motion_inv_5_2_0;
  double r_868_0_0 = r_865_scalar_0_0;
  double r_868_1_0 = r_866_scalar_0_0;
  double r_868_2_0 = r_867_scalar_0_0;
  double r_869_scalar_0_0 = act_motion_inv_5_3_0;
  double r_870_scalar_0_0 = act_motion_inv_5_4_0;
  double r_871_scalar_0_0 = act_motion_inv_5_5_0;
  double r_872_0_0 = r_869_scalar_0_0;
  double r_872_1_0 = r_870_scalar_0_0;
  double r_872_2_0 = r_871_scalar_0_0;
  double r_873_scalar_0_0 = r_864_0_0;
  double r_874_scalar_0_0 = r_864_1_0;
  double r_875_scalar_0_0 = r_864_2_0;
  double r_876_0_0 = r_873_scalar_0_0;
  double r_876_1_0 = r_874_scalar_0_0;
  double r_876_2_0 = r_875_scalar_0_0;
  double r_877_scalar_0_0 = r_864_3_0;
  double r_878_scalar_0_0 = r_864_4_0;
  double r_879_scalar_0_0 = r_864_5_0;
  double r_880_0_0 = r_877_scalar_0_0;
  double r_880_1_0 = r_878_scalar_0_0;
  double r_880_2_0 = r_879_scalar_0_0;
  double r_881_vector_cross_0_0 = ((limi_translation_6_1_0 * r_872_2_0) - (limi_translation_6_2_0 * r_872_1_0));
  double r_881_vector_cross_1_0 = ((limi_translation_6_2_0 * r_872_0_0) - (limi_translation_6_0_0 * r_872_2_0));
  double r_881_vector_cross_2_0 = ((limi_translation_6_0_0 * r_872_1_0) - (limi_translation_6_1_0 * r_872_0_0));
  double r_882_sub_0_0 = (r_868_0_0 - r_881_vector_cross_0_0);
  double r_882_sub_1_0 = (r_868_1_0 - r_881_vector_cross_1_0);
  double r_882_sub_2_0 = (r_868_2_0 - r_881_vector_cross_2_0);
  double r_883_transpose_0_0 = limi_rotation_6_0_0;
  double r_883_transpose_0_1 = limi_rotation_6_1_0;
  double r_883_transpose_0_2 = limi_rotation_6_2_0;
  double r_883_transpose_1_0 = limi_rotation_6_0_1;
  double r_883_transpose_1_1 = limi_rotation_6_1_1;
  double r_883_transpose_1_2 = limi_rotation_6_2_1;
  double r_883_transpose_2_0 = limi_rotation_6_0_2;
  double r_883_transpose_2_1 = limi_rotation_6_1_2;
  double r_883_transpose_2_2 = limi_rotation_6_2_2;
  double r_884_mul_0_0 = (((r_883_transpose_0_0 * r_882_sub_0_0) + (r_883_transpose_0_1 * r_882_sub_1_0)) + (r_883_transpose_0_2 * r_882_sub_2_0));
  double r_884_mul_1_0 = (((r_883_transpose_1_0 * r_882_sub_0_0) + (r_883_transpose_1_1 * r_882_sub_1_0)) + (r_883_transpose_1_2 * r_882_sub_2_0));
  double r_884_mul_2_0 = (((r_883_transpose_2_0 * r_882_sub_0_0) + (r_883_transpose_2_1 * r_882_sub_1_0)) + (r_883_transpose_2_2 * r_882_sub_2_0));
  double r_885_add_0_0 = (r_876_0_0 + r_884_mul_0_0);
  double r_885_add_1_0 = (r_876_1_0 + r_884_mul_1_0);
  double r_885_add_2_0 = (r_876_2_0 + r_884_mul_2_0);
  double r_886_mul_0_0 = (((r_883_transpose_0_0 * r_872_0_0) + (r_883_transpose_0_1 * r_872_1_0)) + (r_883_transpose_0_2 * r_872_2_0));
  double r_886_mul_1_0 = (((r_883_transpose_1_0 * r_872_0_0) + (r_883_transpose_1_1 * r_872_1_0)) + (r_883_transpose_1_2 * r_872_2_0));
  double r_886_mul_2_0 = (((r_883_transpose_2_0 * r_872_0_0) + (r_883_transpose_2_1 * r_872_1_0)) + (r_883_transpose_2_2 * r_872_2_0));
  double r_887_add_0_0 = (r_880_0_0 + r_886_mul_0_0);
  double r_887_add_1_0 = (r_880_1_0 + r_886_mul_1_0);
  double r_887_add_2_0 = (r_880_2_0 + r_886_mul_2_0);
  double r_888_scalar_0_0 = r_885_add_0_0;
  double r_889_scalar_0_0 = r_885_add_1_0;
  double r_890_scalar_0_0 = r_885_add_2_0;
  double r_891_scalar_0_0 = r_887_add_0_0;
  double r_892_scalar_0_0 = r_887_add_1_0;
  double r_893_scalar_0_0 = r_887_add_2_0;
  double r_894_0_0 = r_888_scalar_0_0;
  double r_894_1_0 = r_889_scalar_0_0;
  double r_894_2_0 = r_890_scalar_0_0;
  double r_894_3_0 = r_891_scalar_0_0;
  double r_894_4_0 = r_892_scalar_0_0;
  double r_894_5_0 = r_893_scalar_0_0;
  double act_motion_inv_6_0_0 = r_894_0_0;
  double act_motion_inv_6_1_0 = r_894_1_0;
  double act_motion_inv_6_2_0 = r_894_2_0;
  double act_motion_inv_6_3_0 = r_894_3_0;
  double act_motion_inv_6_4_0 = r_894_4_0;
  double act_motion_inv_6_5_0 = r_894_5_0;
  double r_895_scalar_0_0 = v_6_0;
  double r_896_matrix_negate_0_0 = -(r_895_scalar_0_0);
  double r_897_scalar_0_0 = act_motion_inv_6_0_0;
  double r_898_scalar_0_0 = act_motion_inv_6_1_0;
  double r_899_scalar_0_0 = act_motion_inv_6_2_0;
  double r_900_0_0 = r_897_scalar_0_0;
  double r_900_1_0 = r_898_scalar_0_0;
  double r_900_2_0 = r_899_scalar_0_0;
  double r_901_scalar_0_0 = act_motion_inv_6_3_0;
  double r_902_scalar_0_0 = act_motion_inv_6_4_0;
  double r_903_scalar_0_0 = act_motion_inv_6_5_0;
  double r_904_0_0 = r_901_scalar_0_0;
  double r_904_1_0 = r_902_scalar_0_0;
  double r_904_2_0 = r_903_scalar_0_0;
  double r_905_matrix_negate_0_0 = -(r_896_matrix_negate_0_0);
  double r_906_scalar_0_0 = r_900_1_0;
  double r_907_mul_0_0 = (r_905_matrix_negate_0_0 * r_906_scalar_0_0);
  double r_908_scalar_0_0 = r_900_0_0;
  double r_909_mul_0_0 = (r_896_matrix_negate_0_0 * r_908_scalar_0_0);
  double r_910_0_0 = 0;
  double r_911_0_0 = r_907_mul_0_0;
  double r_911_1_0 = r_909_mul_0_0;
  double r_911_2_0 = r_910_0_0;
  double alpha_cross_linear_6_0_0 = r_911_0_0;
  double alpha_cross_linear_6_1_0 = r_911_1_0;
  double alpha_cross_linear_6_2_0 = r_911_2_0;
  double r_912_matrix_negate_0_0 = -(r_896_matrix_negate_0_0);
  double r_913_scalar_0_0 = r_904_1_0;
  double r_914_mul_0_0 = (r_912_matrix_negate_0_0 * r_913_scalar_0_0);
  double r_915_scalar_0_0 = r_904_0_0;
  double r_916_mul_0_0 = (r_896_matrix_negate_0_0 * r_915_scalar_0_0);
  double r_917_0_0 = 0;
  double r_918_0_0 = r_914_mul_0_0;
  double r_918_1_0 = r_916_mul_0_0;
  double r_918_2_0 = r_917_0_0;
  double alpha_cross_angular_6_0_0 = r_918_0_0;
  double alpha_cross_angular_6_1_0 = r_918_1_0;
  double alpha_cross_angular_6_2_0 = r_918_2_0;
  double r_919_scalar_0_0 = alpha_cross_linear_6_0_0;
  double r_920_scalar_0_0 = alpha_cross_linear_6_1_0;
  double r_921_scalar_0_0 = alpha_cross_linear_6_2_0;
  double r_922_scalar_0_0 = alpha_cross_angular_6_0_0;
  double r_923_scalar_0_0 = alpha_cross_angular_6_1_0;
  double r_924_scalar_0_0 = alpha_cross_angular_6_2_0;
  double r_925_0_0 = r_919_scalar_0_0;
  double r_925_1_0 = r_920_scalar_0_0;
  double r_925_2_0 = r_921_scalar_0_0;
  double r_925_3_0 = r_922_scalar_0_0;
  double r_925_4_0 = r_923_scalar_0_0;
  double r_925_5_0 = r_924_scalar_0_0;
  double alpha_cross_6_0_0 = r_925_0_0;
  double alpha_cross_6_1_0 = r_925_1_0;
  double alpha_cross_6_2_0 = r_925_2_0;
  double alpha_cross_6_3_0 = r_925_3_0;
  double alpha_cross_6_4_0 = r_925_4_0;
  double alpha_cross_6_5_0 = r_925_5_0;
  double r_926_scalar_0_0 = a_6_0;
  double r_927_scalar_0_0 = alpha_cross_6_5_0;
  double r_928_add_0_0 = (r_926_scalar_0_0 + r_927_scalar_0_0);
  double r_929_scalar_0_0 = alpha_cross_6_0_0;
  double r_930_scalar_0_0 = alpha_cross_6_1_0;
  double r_931_scalar_0_0 = alpha_cross_6_2_0;
  double r_932_scalar_0_0 = alpha_cross_6_3_0;
  double r_933_scalar_0_0 = alpha_cross_6_4_0;
  double r_934_0_0 = r_929_scalar_0_0;
  double r_934_1_0 = r_930_scalar_0_0;
  double r_934_2_0 = r_931_scalar_0_0;
  double r_934_3_0 = r_932_scalar_0_0;
  double r_934_4_0 = r_933_scalar_0_0;
  double r_934_5_0 = r_928_add_0_0;
  double r_935_scalar_0_0 = r_814_add_0_0;
  double r_936_scalar_0_0 = r_814_add_1_0;
  double r_937_scalar_0_0 = r_814_add_2_0;
  double r_938_0_0 = r_935_scalar_0_0;
  double r_938_1_0 = r_936_scalar_0_0;
  double r_938_2_0 = r_937_scalar_0_0;
  double r_939_scalar_0_0 = r_814_add_3_0;
  double r_940_scalar_0_0 = r_814_add_4_0;
  double r_941_scalar_0_0 = r_814_add_5_0;
  double r_942_0_0 = r_939_scalar_0_0;
  double r_942_1_0 = r_940_scalar_0_0;
  double r_942_2_0 = r_941_scalar_0_0;
  double r_943_vector_cross_0_0 = ((limi_translation_6_1_0 * r_942_2_0) - (limi_translation_6_2_0 * r_942_1_0));
  double r_943_vector_cross_1_0 = ((limi_translation_6_2_0 * r_942_0_0) - (limi_translation_6_0_0 * r_942_2_0));
  double r_943_vector_cross_2_0 = ((limi_translation_6_0_0 * r_942_1_0) - (limi_translation_6_1_0 * r_942_0_0));
  double r_944_sub_0_0 = (r_938_0_0 - r_943_vector_cross_0_0);
  double r_944_sub_1_0 = (r_938_1_0 - r_943_vector_cross_1_0);
  double r_944_sub_2_0 = (r_938_2_0 - r_943_vector_cross_2_0);
  double r_945_transpose_0_0 = limi_rotation_6_0_0;
  double r_945_transpose_0_1 = limi_rotation_6_1_0;
  double r_945_transpose_0_2 = limi_rotation_6_2_0;
  double r_945_transpose_1_0 = limi_rotation_6_0_1;
  double r_945_transpose_1_1 = limi_rotation_6_1_1;
  double r_945_transpose_1_2 = limi_rotation_6_2_1;
  double r_945_transpose_2_0 = limi_rotation_6_0_2;
  double r_945_transpose_2_1 = limi_rotation_6_1_2;
  double r_945_transpose_2_2 = limi_rotation_6_2_2;
  double r_946_mul_0_0 = (((r_945_transpose_0_0 * r_944_sub_0_0) + (r_945_transpose_0_1 * r_944_sub_1_0)) + (r_945_transpose_0_2 * r_944_sub_2_0));
  double r_946_mul_1_0 = (((r_945_transpose_1_0 * r_944_sub_0_0) + (r_945_transpose_1_1 * r_944_sub_1_0)) + (r_945_transpose_1_2 * r_944_sub_2_0));
  double r_946_mul_2_0 = (((r_945_transpose_2_0 * r_944_sub_0_0) + (r_945_transpose_2_1 * r_944_sub_1_0)) + (r_945_transpose_2_2 * r_944_sub_2_0));
  double r_947_mul_0_0 = (((r_945_transpose_0_0 * r_942_0_0) + (r_945_transpose_0_1 * r_942_1_0)) + (r_945_transpose_0_2 * r_942_2_0));
  double r_947_mul_1_0 = (((r_945_transpose_1_0 * r_942_0_0) + (r_945_transpose_1_1 * r_942_1_0)) + (r_945_transpose_1_2 * r_942_2_0));
  double r_947_mul_2_0 = (((r_945_transpose_2_0 * r_942_0_0) + (r_945_transpose_2_1 * r_942_1_0)) + (r_945_transpose_2_2 * r_942_2_0));
  double r_948_scalar_0_0 = r_946_mul_0_0;
  double r_949_scalar_0_0 = r_946_mul_1_0;
  double r_950_scalar_0_0 = r_946_mul_2_0;
  double r_951_scalar_0_0 = r_947_mul_0_0;
  double r_952_scalar_0_0 = r_947_mul_1_0;
  double r_953_scalar_0_0 = r_947_mul_2_0;
  double r_954_0_0 = r_948_scalar_0_0;
  double r_954_1_0 = r_949_scalar_0_0;
  double r_954_2_0 = r_950_scalar_0_0;
  double r_954_3_0 = r_951_scalar_0_0;
  double r_954_4_0 = r_952_scalar_0_0;
  double r_954_5_0 = r_953_scalar_0_0;
  double act_inv_6_0_0 = r_954_0_0;
  double act_inv_6_1_0 = r_954_1_0;
  double act_inv_6_2_0 = r_954_2_0;
  double act_inv_6_3_0 = r_954_3_0;
  double act_inv_6_4_0 = r_954_4_0;
  double act_inv_6_5_0 = r_954_5_0;
  double r_955_add_0_0 = (r_934_0_0 + act_inv_6_0_0);
  double r_955_add_1_0 = (r_934_1_0 + act_inv_6_1_0);
  double r_955_add_2_0 = (r_934_2_0 + act_inv_6_2_0);
  double r_955_add_3_0 = (r_934_3_0 + act_inv_6_3_0);
  double r_955_add_4_0 = (r_934_4_0 + act_inv_6_4_0);
  double r_955_add_5_0 = (r_934_5_0 + act_inv_6_5_0);
  double final_omi_translations_0_0_0 = limi_translation_0_0_0;
  double final_omi_translations_0_1_0 = limi_translation_0_1_0;
  double final_omi_translations_0_2_0 = limi_translation_0_2_0;
  double final_omi_rotations_0_0_0 = limi_rotation_0_0_0;
  double final_omi_rotations_0_0_1 = limi_rotation_0_0_1;
  double final_omi_rotations_0_0_2 = limi_rotation_0_0_2;
  double final_omi_rotations_0_1_0 = limi_rotation_0_1_0;
  double final_omi_rotations_0_1_1 = limi_rotation_0_1_1;
  double final_omi_rotations_0_1_2 = limi_rotation_0_1_2;
  double final_omi_rotations_0_2_0 = limi_rotation_0_2_0;
  double final_omi_rotations_0_2_1 = limi_rotation_0_2_1;
  double final_omi_rotations_0_2_2 = limi_rotation_0_2_2;
  double final_v_0_0_0 = r_69_0_0;
  double final_v_0_1_0 = r_69_1_0;
  double final_v_0_2_0 = r_69_2_0;
  double final_v_0_3_0 = r_69_3_0;
  double final_v_0_4_0 = r_69_4_0;
  double final_v_0_5_0 = r_69_5_0;
  double final_a_0_0_0 = r_109_0_0;
  double final_a_0_1_0 = r_109_1_0;
  double final_a_0_2_0 = r_109_2_0;
  double final_a_0_3_0 = r_109_3_0;
  double final_a_0_4_0 = r_109_4_0;
  double final_a_0_5_0 = r_109_5_0;
  double final_omi_translations_1_0_0 = r_152_add_0_0;
  double final_omi_translations_1_1_0 = r_152_add_1_0;
  double final_omi_translations_1_2_0 = r_152_add_2_0;
  double final_omi_rotations_1_0_0 = r_150_mul_0_0;
  double final_omi_rotations_1_0_1 = r_150_mul_0_1;
  double final_omi_rotations_1_0_2 = r_150_mul_0_2;
  double final_omi_rotations_1_1_0 = r_150_mul_1_0;
  double final_omi_rotations_1_1_1 = r_150_mul_1_1;
  double final_omi_rotations_1_1_2 = r_150_mul_1_2;
  double final_omi_rotations_1_2_0 = r_150_mul_2_0;
  double final_omi_rotations_1_2_1 = r_150_mul_2_1;
  double final_omi_rotations_1_2_2 = r_150_mul_2_2;
  double final_v_1_0_0 = act_motion_inv_1_0_0;
  double final_v_1_1_0 = act_motion_inv_1_1_0;
  double final_v_1_2_0 = act_motion_inv_1_2_0;
  double final_v_1_3_0 = act_motion_inv_1_3_0;
  double final_v_1_4_0 = act_motion_inv_1_4_0;
  double final_v_1_5_0 = act_motion_inv_1_5_0;
  double final_a_1_0_0 = r_250_add_0_0;
  double final_a_1_1_0 = r_250_add_1_0;
  double final_a_1_2_0 = r_250_add_2_0;
  double final_a_1_3_0 = r_250_add_3_0;
  double final_a_1_4_0 = r_250_add_4_0;
  double final_a_1_5_0 = r_250_add_5_0;
  double final_omi_translations_2_0_0 = r_293_add_0_0;
  double final_omi_translations_2_1_0 = r_293_add_1_0;
  double final_omi_translations_2_2_0 = r_293_add_2_0;
  double final_omi_rotations_2_0_0 = r_291_mul_0_0;
  double final_omi_rotations_2_0_1 = r_291_mul_0_1;
  double final_omi_rotations_2_0_2 = r_291_mul_0_2;
  double final_omi_rotations_2_1_0 = r_291_mul_1_0;
  double final_omi_rotations_2_1_1 = r_291_mul_1_1;
  double final_omi_rotations_2_1_2 = r_291_mul_1_2;
  double final_omi_rotations_2_2_0 = r_291_mul_2_0;
  double final_omi_rotations_2_2_1 = r_291_mul_2_1;
  double final_omi_rotations_2_2_2 = r_291_mul_2_2;
  double final_v_2_0_0 = act_motion_inv_2_0_0;
  double final_v_2_1_0 = act_motion_inv_2_1_0;
  double final_v_2_2_0 = act_motion_inv_2_2_0;
  double final_v_2_3_0 = act_motion_inv_2_3_0;
  double final_v_2_4_0 = act_motion_inv_2_4_0;
  double final_v_2_5_0 = act_motion_inv_2_5_0;
  double final_a_2_0_0 = r_391_add_0_0;
  double final_a_2_1_0 = r_391_add_1_0;
  double final_a_2_2_0 = r_391_add_2_0;
  double final_a_2_3_0 = r_391_add_3_0;
  double final_a_2_4_0 = r_391_add_4_0;
  double final_a_2_5_0 = r_391_add_5_0;
  double final_omi_translations_3_0_0 = r_434_add_0_0;
  double final_omi_translations_3_1_0 = r_434_add_1_0;
  double final_omi_translations_3_2_0 = r_434_add_2_0;
  double final_omi_rotations_3_0_0 = r_432_mul_0_0;
  double final_omi_rotations_3_0_1 = r_432_mul_0_1;
  double final_omi_rotations_3_0_2 = r_432_mul_0_2;
  double final_omi_rotations_3_1_0 = r_432_mul_1_0;
  double final_omi_rotations_3_1_1 = r_432_mul_1_1;
  double final_omi_rotations_3_1_2 = r_432_mul_1_2;
  double final_omi_rotations_3_2_0 = r_432_mul_2_0;
  double final_omi_rotations_3_2_1 = r_432_mul_2_1;
  double final_omi_rotations_3_2_2 = r_432_mul_2_2;
  double final_v_3_0_0 = act_motion_inv_3_0_0;
  double final_v_3_1_0 = act_motion_inv_3_1_0;
  double final_v_3_2_0 = act_motion_inv_3_2_0;
  double final_v_3_3_0 = act_motion_inv_3_3_0;
  double final_v_3_4_0 = act_motion_inv_3_4_0;
  double final_v_3_5_0 = act_motion_inv_3_5_0;
  double final_a_3_0_0 = r_532_add_0_0;
  double final_a_3_1_0 = r_532_add_1_0;
  double final_a_3_2_0 = r_532_add_2_0;
  double final_a_3_3_0 = r_532_add_3_0;
  double final_a_3_4_0 = r_532_add_4_0;
  double final_a_3_5_0 = r_532_add_5_0;
  double final_omi_translations_4_0_0 = r_575_add_0_0;
  double final_omi_translations_4_1_0 = r_575_add_1_0;
  double final_omi_translations_4_2_0 = r_575_add_2_0;
  double final_omi_rotations_4_0_0 = r_573_mul_0_0;
  double final_omi_rotations_4_0_1 = r_573_mul_0_1;
  double final_omi_rotations_4_0_2 = r_573_mul_0_2;
  double final_omi_rotations_4_1_0 = r_573_mul_1_0;
  double final_omi_rotations_4_1_1 = r_573_mul_1_1;
  double final_omi_rotations_4_1_2 = r_573_mul_1_2;
  double final_omi_rotations_4_2_0 = r_573_mul_2_0;
  double final_omi_rotations_4_2_1 = r_573_mul_2_1;
  double final_omi_rotations_4_2_2 = r_573_mul_2_2;
  double final_v_4_0_0 = act_motion_inv_4_0_0;
  double final_v_4_1_0 = act_motion_inv_4_1_0;
  double final_v_4_2_0 = act_motion_inv_4_2_0;
  double final_v_4_3_0 = act_motion_inv_4_3_0;
  double final_v_4_4_0 = act_motion_inv_4_4_0;
  double final_v_4_5_0 = act_motion_inv_4_5_0;
  double final_a_4_0_0 = r_673_add_0_0;
  double final_a_4_1_0 = r_673_add_1_0;
  double final_a_4_2_0 = r_673_add_2_0;
  double final_a_4_3_0 = r_673_add_3_0;
  double final_a_4_4_0 = r_673_add_4_0;
  double final_a_4_5_0 = r_673_add_5_0;
  double final_omi_translations_5_0_0 = r_716_add_0_0;
  double final_omi_translations_5_1_0 = r_716_add_1_0;
  double final_omi_translations_5_2_0 = r_716_add_2_0;
  double final_omi_rotations_5_0_0 = r_714_mul_0_0;
  double final_omi_rotations_5_0_1 = r_714_mul_0_1;
  double final_omi_rotations_5_0_2 = r_714_mul_0_2;
  double final_omi_rotations_5_1_0 = r_714_mul_1_0;
  double final_omi_rotations_5_1_1 = r_714_mul_1_1;
  double final_omi_rotations_5_1_2 = r_714_mul_1_2;
  double final_omi_rotations_5_2_0 = r_714_mul_2_0;
  double final_omi_rotations_5_2_1 = r_714_mul_2_1;
  double final_omi_rotations_5_2_2 = r_714_mul_2_2;
  double final_v_5_0_0 = act_motion_inv_5_0_0;
  double final_v_5_1_0 = act_motion_inv_5_1_0;
  double final_v_5_2_0 = act_motion_inv_5_2_0;
  double final_v_5_3_0 = act_motion_inv_5_3_0;
  double final_v_5_4_0 = act_motion_inv_5_4_0;
  double final_v_5_5_0 = act_motion_inv_5_5_0;
  double final_a_5_0_0 = r_814_add_0_0;
  double final_a_5_1_0 = r_814_add_1_0;
  double final_a_5_2_0 = r_814_add_2_0;
  double final_a_5_3_0 = r_814_add_3_0;
  double final_a_5_4_0 = r_814_add_4_0;
  double final_a_5_5_0 = r_814_add_5_0;
  double final_omi_translations_6_0_0 = r_857_add_0_0;
  double final_omi_translations_6_1_0 = r_857_add_1_0;
  double final_omi_translations_6_2_0 = r_857_add_2_0;
  double final_omi_rotations_6_0_0 = r_855_mul_0_0;
  double final_omi_rotations_6_0_1 = r_855_mul_0_1;
  double final_omi_rotations_6_0_2 = r_855_mul_0_2;
  double final_omi_rotations_6_1_0 = r_855_mul_1_0;
  double final_omi_rotations_6_1_1 = r_855_mul_1_1;
  double final_omi_rotations_6_1_2 = r_855_mul_1_2;
  double final_omi_rotations_6_2_0 = r_855_mul_2_0;
  double final_omi_rotations_6_2_1 = r_855_mul_2_1;
  double final_omi_rotations_6_2_2 = r_855_mul_2_2;
  double final_v_6_0_0 = act_motion_inv_6_0_0;
  double final_v_6_1_0 = act_motion_inv_6_1_0;
  double final_v_6_2_0 = act_motion_inv_6_2_0;
  double final_v_6_3_0 = act_motion_inv_6_3_0;
  double final_v_6_4_0 = act_motion_inv_6_4_0;
  double final_v_6_5_0 = act_motion_inv_6_5_0;
  double final_a_6_0_0 = r_955_add_0_0;
  double final_a_6_1_0 = r_955_add_1_0;
  double final_a_6_2_0 = r_955_add_2_0;
  double final_a_6_3_0 = r_955_add_3_0;
  double final_a_6_4_0 = r_955_add_4_0;
  double final_a_6_5_0 = r_955_add_5_0;

    fk_return result; // Create the struct

    // --- Copy oMis ---
    result.oMis[0] = oMi{ /* ... final_omi_rotations_0_... , final_omi_translations_0_... */
         { {final_omi_rotations_0_0_0, final_omi_rotations_0_0_1, final_omi_rotations_0_0_2},
           {final_omi_rotations_0_1_0, final_omi_rotations_0_1_1, final_omi_rotations_0_1_2},
           {final_omi_rotations_0_2_0, final_omi_rotations_0_2_1, final_omi_rotations_0_2_2} },
         {final_omi_translations_0_0_0, final_omi_translations_0_1_0, final_omi_translations_0_2_0}
    };
    result.oMis[1] = oMi{ /* ... final_omi_rotations_1_... , final_omi_translations_1_... */
         { {final_omi_rotations_1_0_0, final_omi_rotations_1_0_1, final_omi_rotations_1_0_2},
           {final_omi_rotations_1_1_0, final_omi_rotations_1_1_1, final_omi_rotations_1_1_2},
           {final_omi_rotations_1_2_0, final_omi_rotations_1_2_1, final_omi_rotations_1_2_2} },
         {final_omi_translations_1_0_0, final_omi_translations_1_1_0, final_omi_translations_1_2_0}
    };
     result.oMis[2] = oMi{ /* ... final_omi_rotations_2_... , final_omi_translations_2_... */
         { {final_omi_rotations_2_0_0, final_omi_rotations_2_0_1, final_omi_rotations_2_0_2},
           {final_omi_rotations_2_1_0, final_omi_rotations_2_1_1, final_omi_rotations_2_1_2},
           {final_omi_rotations_2_2_0, final_omi_rotations_2_2_1, final_omi_rotations_2_2_2} },
         {final_omi_translations_2_0_0, final_omi_translations_2_1_0, final_omi_translations_2_2_0}
    };
     result.oMis[3] = oMi{ /* ... final_omi_rotations_3_... , final_omi_translations_3_... */
         { {final_omi_rotations_3_0_0, final_omi_rotations_3_0_1, final_omi_rotations_3_0_2},
           {final_omi_rotations_3_1_0, final_omi_rotations_3_1_1, final_omi_rotations_3_1_2},
           {final_omi_rotations_3_2_0, final_omi_rotations_3_2_1, final_omi_rotations_3_2_2} },
         {final_omi_translations_3_0_0, final_omi_translations_3_1_0, final_omi_translations_3_2_0}
    };
     result.oMis[4] = oMi{ /* ... final_omi_rotations_4_... , final_omi_translations_4_... */
         { {final_omi_rotations_4_0_0, final_omi_rotations_4_0_1, final_omi_rotations_4_0_2},
           {final_omi_rotations_4_1_0, final_omi_rotations_4_1_1, final_omi_rotations_4_1_2},
           {final_omi_rotations_4_2_0, final_omi_rotations_4_2_1, final_omi_rotations_4_2_2} },
         {final_omi_translations_4_0_0, final_omi_translations_4_1_0, final_omi_translations_4_2_0}
    };
    result.oMis[5] = oMi{ /* ... final_omi_rotations_5_... , final_omi_translations_5_... */
        { {final_omi_rotations_5_0_0, final_omi_rotations_5_0_1, final_omi_rotations_5_0_2},
        {final_omi_rotations_5_1_0, final_omi_rotations_5_1_1, final_omi_rotations_5_1_2},
        {final_omi_rotations_5_2_0, final_omi_rotations_5_2_1, final_omi_rotations_5_2_2} },
        {final_omi_translations_5_0_0, final_omi_translations_5_1_0, final_omi_translations_5_2_0}
    };
    result.oMis[6] = oMi{ /* ... final_omi_rotations_6_... , final_omi_translations_6_... */
        { {final_omi_rotations_6_0_0, final_omi_rotations_6_0_1, final_omi_rotations_6_0_2},
        {final_omi_rotations_6_1_0, final_omi_rotations_6_1_1, final_omi_rotations_6_1_2},
        {final_omi_rotations_6_2_0, final_omi_rotations_6_2_1, final_omi_rotations_6_2_2} },
        {final_omi_translations_6_0_0, final_omi_translations_6_1_0, final_omi_translations_6_2_0}
    };

    // --- Copy v ---
    result.v[0][0] = final_v_0_0_0; result.v[0][1] = final_v_0_1_0; result.v[0][2] = final_v_0_2_0;
    result.v[0][3] = final_v_0_3_0; result.v[0][4] = final_v_0_4_0; result.v[0][5] = final_v_0_5_0;
    result.v[1][0] = final_v_1_0_0; result.v[1][1] = final_v_1_1_0; result.v[1][2] = final_v_1_2_0;
    result.v[1][3] = final_v_1_3_0; result.v[1][4] = final_v_1_4_0; result.v[1][5] = final_v_1_5_0;
    result.v[2][0] = final_v_2_0_0; result.v[2][1] = final_v_2_1_0; result.v[2][2] = final_v_2_2_0;
    result.v[2][3] = final_v_2_3_0; result.v[2][4] = final_v_2_4_0; result.v[2][5] = final_v_2_5_0;
    result.v[3][0] = final_v_3_0_0; result.v[3][1] = final_v_3_1_0; result.v[3][2] = final_v_3_2_0;
    result.v[3][3] = final_v_3_3_0; result.v[3][4] = final_v_3_4_0; result.v[3][5] = final_v_3_5_0;
    result.v[4][0] = final_v_4_0_0; result.v[4][1] = final_v_4_1_0; result.v[4][2] = final_v_4_2_0;
    result.v[4][3] = final_v_4_3_0; result.v[4][4] = final_v_4_4_0; result.v[4][5] = final_v_4_5_0;
    result.v[5][0] = final_v_5_0_0; result.v[5][1] = final_v_5_1_0; result.v[5][2] = final_v_5_2_0;
    result.v[5][3] = final_v_5_3_0; result.v[5][4] = final_v_5_4_0; result.v[5][5] = final_v_5_5_0;
    result.v[6][0] = final_v_6_0_0; result.v[6][1] = final_v_6_1_0; result.v[6][2] = final_v_6_2_0;
    result.v[6][3] = final_v_6_3_0; result.v[6][4] = final_v_6_4_0; result.v[6][5] = final_v_6_5_0;

    // --- Copy a ---
    result.a[0][0] = final_a_0_0_0; result.a[0][1] = final_a_0_1_0; result.a[0][2] = final_a_0_2_0;
    result.a[0][3] = final_a_0_3_0; result.a[0][4] = final_a_0_4_0; result.a[0][5] = final_a_0_5_0;
    result.a[1][0] = final_a_1_0_0; result.a[1][1] = final_a_1_1_0; result.a[1][2] = final_a_1_2_0;
    result.a[1][3] = final_a_1_3_0; result.a[1][4] = final_a_1_4_0; result.a[1][5] = final_a_1_5_0;
    result.a[2][0] = final_a_2_0_0; result.a[2][1] = final_a_2_1_0; result.a[2][2] = final_a_2_2_0;
    result.a[2][3] = final_a_2_3_0; result.a[2][4] = final_a_2_4_0; result.a[2][5] = final_a_2_5_0;
    result.a[3][0] = final_a_3_0_0; result.a[3][1] = final_a_3_1_0; result.a[3][2] = final_a_3_2_0;
    result.a[3][3] = final_a_3_3_0; result.a[3][4] = final_a_3_4_0; result.a[3][5] = final_a_3_5_0;
    result.a[4][0] = final_a_4_0_0; result.a[4][1] = final_a_4_1_0; result.a[4][2] = final_a_4_2_0;
    result.a[4][3] = final_a_4_3_0; result.a[4][4] = final_a_4_4_0; result.a[4][5] = final_a_4_5_0;
    result.a[5][0] = final_a_5_0_0; result.a[5][1] = final_a_5_1_0; result.a[5][2] = final_a_5_2_0;
    result.a[5][3] = final_a_5_3_0; result.a[5][4] = final_a_5_4_0; result.a[5][5] = final_a_5_5_0;
    result.a[6][0] = final_a_6_0_0; result.a[6][1] = final_a_6_1_0; result.a[6][2] = final_a_6_2_0;
    result.a[6][3] = final_a_6_3_0; result.a[6][4] = final_a_6_4_0; result.a[6][5] = final_a_6_5_0;

    
    return result; // Return the fully populated struct
}

