#include "return.hpp"

fk_return FK_Roarm3_double(
    double qcos_0_0, double qcos_1_0, double qcos_2_0, double qcos_3_0, double qcos_4_0, 
    double qsin_0_0, double qsin_1_0, double qsin_2_0, double qsin_3_0, double qsin_4_0, 
    double v_0_0, double v_1_0, double v_2_0, double v_3_0, double v_4_0, 
    double a_0_0, double a_1_0, double a_2_0, double a_3_0, double a_4_0
) {
  double r_1_0_0 = 0;
  double r_1_1_0 = 0;
  double r_1_2_0 = 0;
  double limi_translation_0_0_0 = r_1_0_0;
  double limi_translation_0_1_0 = r_1_1_0;
  double limi_translation_0_2_0 = r_1_2_0;
  double r_2_0_0 = 0;
  double r_2_1_0 = 0;
  double r_2_2_0 = 0.051959;
  double limi_translation_1_0_0 = r_2_0_0;
  double limi_translation_1_1_0 = r_2_1_0;
  double limi_translation_1_2_0 = r_2_2_0;
  double r_3_0_0 = 0.236815;
  double r_3_1_0 = 0.030002;
  double r_3_2_0 = 0;
  double limi_translation_2_0_0 = r_3_0_0;
  double limi_translation_2_1_0 = r_3_1_0;
  double limi_translation_2_2_0 = r_3_2_0;
  double r_4_0_0 = 0;
  double r_4_1_0 = -0.144586;
  double r_4_2_0 = 0;
  double limi_translation_3_0_0 = r_4_0_0;
  double limi_translation_3_1_0 = r_4_1_0;
  double limi_translation_3_2_0 = r_4_2_0;
  double r_5_0_0 = 0.015147;
  double r_5_1_0 = -0.053653;
  double r_5_2_0 = 0;
  double limi_translation_4_0_0 = r_5_0_0;
  double limi_translation_4_1_0 = r_5_1_0;
  double limi_translation_4_2_0 = r_5_2_0;
  double r_6_0_0 = 0;
  double r_6_1_0 = 0;
  double r_6_2_0 = 0.037;
  double lever_0_0_0 = r_6_0_0;
  double lever_0_1_0 = r_6_1_0;
  double lever_0_2_0 = r_6_2_0;
  double r_7_0_0 = 0.119;
  double r_7_1_0 = 0.012247;
  double r_7_2_0 = -1.0E-4;
  double lever_1_0_0 = r_7_0_0;
  double lever_1_1_0 = r_7_1_0;
  double lever_1_2_0 = r_7_2_0;
  double r_8_0_0 = -0.0015;
  double r_8_1_0 = -0.0765;
  double r_8_2_0 = 0.00505;
  double lever_2_0_0 = r_8_0_0;
  double lever_2_1_0 = r_8_1_0;
  double lever_2_2_0 = r_8_2_0;
  double r_9_0_0 = -0.0015;
  double r_9_1_0 = -0.022;
  double r_9_2_0 = -7.5E-4;
  double lever_3_0_0 = r_9_0_0;
  double lever_3_1_0 = r_9_1_0;
  double lever_3_2_0 = r_9_2_0;
  double r_10_0_0 = -0.0078;
  double r_10_1_0 = 0;
  double r_10_2_0 = 0.0595;
  double lever_4_0_0 = r_10_0_0;
  double lever_4_1_0 = r_10_1_0;
  double lever_4_2_0 = r_10_2_0;
  double r_11_0_0 = 0.0729177;
  double r_11_1_0 = 0.0703216;
  double r_11_2_0 = 0.021608;
  double r_11_3_0 = 0.0099933;
  double r_11_4_0 = 0.0153928;
  double masses_0_0 = r_11_0_0;
  double masses_1_0 = r_11_1_0;
  double masses_2_0 = r_11_2_0;
  double masses_3_0 = r_11_3_0;
  double masses_4_0 = r_11_4_0;
  double r_12_0_0 = 4.68465E-5;
  double r_12_0_1 = 0;
  double r_12_0_2 = 0;
  double r_12_1_0 = 0;
  double r_12_1_1 = 3.32107E-5;
  double r_12_1_2 = 0;
  double r_12_2_0 = 0;
  double r_12_2_1 = 0;
  double r_12_2_2 = 5.01023E-5;
  double inertia_0_0_0 = r_12_0_0;
  double inertia_0_0_1 = r_12_0_1;
  double inertia_0_0_2 = r_12_0_2;
  double inertia_0_1_0 = r_12_1_0;
  double inertia_0_1_1 = r_12_1_1;
  double inertia_0_1_2 = r_12_1_2;
  double inertia_0_2_0 = r_12_2_0;
  double inertia_0_2_1 = r_12_2_1;
  double inertia_0_2_2 = r_12_2_2;
  double r_13_0_0 = 5.46501E-5;
  double r_13_0_1 = 0;
  double r_13_0_2 = 0;
  double r_13_1_0 = 0;
  double r_13_1_1 = 4.23091E-4;
  double r_13_1_2 = 0;
  double r_13_2_0 = 0;
  double r_13_2_1 = 0;
  double r_13_2_2 = 4.04557E-4;
  double inertia_1_0_0 = r_13_0_0;
  double inertia_1_0_1 = r_13_0_1;
  double inertia_1_0_2 = r_13_0_2;
  double inertia_1_1_0 = r_13_1_0;
  double inertia_1_1_1 = r_13_1_1;
  double inertia_1_1_2 = r_13_1_2;
  double inertia_1_2_0 = r_13_2_0;
  double inertia_1_2_1 = r_13_2_1;
  double inertia_1_2_2 = r_13_2_2;
  double r_14_0_0 = 6.37699E-5;
  double r_14_0_1 = 0;
  double r_14_0_2 = 0;
  double r_14_1_0 = 0;
  double r_14_1_1 = 3.67026E-6;
  double r_14_1_2 = 0;
  double r_14_2_0 = 0;
  double r_14_2_1 = 0;
  double r_14_2_2 = 6.28965E-5;
  double inertia_2_0_0 = r_14_0_0;
  double inertia_2_0_1 = r_14_0_1;
  double inertia_2_0_2 = r_14_0_2;
  double inertia_2_1_0 = r_14_1_0;
  double inertia_2_1_1 = r_14_1_1;
  double inertia_2_1_2 = r_14_1_2;
  double inertia_2_2_0 = r_14_2_0;
  double inertia_2_2_1 = r_14_2_1;
  double inertia_2_2_2 = r_14_2_2;
  double r_15_0_0 = 4.53979E-6;
  double r_15_0_1 = 0;
  double r_15_0_2 = 0;
  double r_15_1_0 = 0;
  double r_15_1_1 = 3.78103E-6;
  double r_15_1_2 = 0;
  double r_15_2_0 = 0;
  double r_15_2_1 = 0;
  double r_15_2_2 = 5.60238E-6;
  double inertia_3_0_0 = r_15_0_0;
  double inertia_3_0_1 = r_15_0_1;
  double inertia_3_0_2 = r_15_0_2;
  double inertia_3_1_0 = r_15_1_0;
  double inertia_3_1_1 = r_15_1_1;
  double inertia_3_1_2 = r_15_1_2;
  double inertia_3_2_0 = r_15_2_0;
  double inertia_3_2_1 = r_15_2_1;
  double inertia_3_2_2 = r_15_2_2;
  double r_16_0_0 = 2.02869E-5;
  double r_16_0_1 = 0;
  double r_16_0_2 = 0;
  double r_16_1_0 = 0;
  double r_16_1_1 = 2.14427E-5;
  double r_16_1_2 = 0;
  double r_16_2_0 = 0;
  double r_16_2_1 = 0;
  double r_16_2_2 = 4.39495E-6;
  double inertia_4_0_0 = r_16_0_0;
  double inertia_4_0_1 = r_16_0_1;
  double inertia_4_0_2 = r_16_0_2;
  double inertia_4_1_0 = r_16_1_0;
  double inertia_4_1_1 = r_16_1_1;
  double inertia_4_1_2 = r_16_1_2;
  double inertia_4_2_0 = r_16_2_0;
  double inertia_4_2_1 = r_16_2_1;
  double inertia_4_2_2 = r_16_2_2;
  double r_17_scalar_0_0 = qcos_0_0;
  double r_18_scalar_0_0 = qsin_0_0;
  double r_19_matrix_negate_0_0 = -(r_18_scalar_0_0);
  double r_20_0_0 = 0;
  double r_21_scalar_0_0 = qsin_0_0;
  double r_22_scalar_0_0 = qcos_0_0;
  double r_23_0_0 = 0;
  double r_24_0_0 = 0;
  double r_25_0_0 = 0;
  double r_26_0_0 = 1;
  double r_27_0_0 = r_17_scalar_0_0;
  double r_27_0_1 = r_19_matrix_negate_0_0;
  double r_27_0_2 = r_20_0_0;
  double r_27_1_0 = r_21_scalar_0_0;
  double r_27_1_1 = r_22_scalar_0_0;
  double r_27_1_2 = r_23_0_0;
  double r_27_2_0 = r_24_0_0;
  double r_27_2_1 = r_25_0_0;
  double r_27_2_2 = r_26_0_0;
  double r_28_0_0 = 1;
  double r_29_0_0 = 0;
  double r_30_0_0 = 1;
  double r_31_0_0 = 0;
  double r_32_0_0 = 1;
  double r_33_0_0 = 0;
  double r_34_mul_0_0 = (r_32_0_0 * r_30_0_0);
  double r_35_mul_0_0 = (r_32_0_0 * r_31_0_0);
  double r_36_mul_0_0 = (r_35_mul_0_0 * r_29_0_0);
  double r_37_mul_0_0 = (r_33_0_0 * r_28_0_0);
  double r_38_sub_0_0 = (r_36_mul_0_0 - r_37_mul_0_0);
  double r_39_mul_0_0 = (r_32_0_0 * r_31_0_0);
  double r_40_mul_0_0 = (r_39_mul_0_0 * r_28_0_0);
  double r_41_mul_0_0 = (r_33_0_0 * r_29_0_0);
  double r_42_add_0_0 = (r_40_mul_0_0 + r_41_mul_0_0);
  double r_43_mul_0_0 = (r_33_0_0 * r_30_0_0);
  double r_44_mul_0_0 = (r_33_0_0 * r_31_0_0);
  double r_45_mul_0_0 = (r_44_mul_0_0 * r_29_0_0);
  double r_46_mul_0_0 = (r_32_0_0 * r_28_0_0);
  double r_47_add_0_0 = (r_45_mul_0_0 + r_46_mul_0_0);
  double r_48_mul_0_0 = (r_33_0_0 * r_31_0_0);
  double r_49_mul_0_0 = (r_48_mul_0_0 * r_28_0_0);
  double r_50_mul_0_0 = (r_32_0_0 * r_29_0_0);
  double r_51_sub_0_0 = (r_49_mul_0_0 - r_50_mul_0_0);
  double r_52_matrix_negate_0_0 = -(r_31_0_0);
  double r_53_mul_0_0 = (r_30_0_0 * r_29_0_0);
  double r_54_mul_0_0 = (r_30_0_0 * r_28_0_0);
  double r_55_0_0 = r_34_mul_0_0;
  double r_55_0_1 = r_38_sub_0_0;
  double r_55_0_2 = r_42_add_0_0;
  double r_55_1_0 = r_43_mul_0_0;
  double r_55_1_1 = r_47_add_0_0;
  double r_55_1_2 = r_51_sub_0_0;
  double r_55_2_0 = r_52_matrix_negate_0_0;
  double r_55_2_1 = r_53_mul_0_0;
  double r_55_2_2 = r_54_mul_0_0;
  double r_56_mul_0_0 = (((r_55_0_0 * r_27_0_0) + (r_55_0_1 * r_27_1_0)) + (r_55_0_2 * r_27_2_0));
  double r_56_mul_0_1 = (((r_55_0_0 * r_27_0_1) + (r_55_0_1 * r_27_1_1)) + (r_55_0_2 * r_27_2_1));
  double r_56_mul_0_2 = (((r_55_0_0 * r_27_0_2) + (r_55_0_1 * r_27_1_2)) + (r_55_0_2 * r_27_2_2));
  double r_56_mul_1_0 = (((r_55_1_0 * r_27_0_0) + (r_55_1_1 * r_27_1_0)) + (r_55_1_2 * r_27_2_0));
  double r_56_mul_1_1 = (((r_55_1_0 * r_27_0_1) + (r_55_1_1 * r_27_1_1)) + (r_55_1_2 * r_27_2_1));
  double r_56_mul_1_2 = (((r_55_1_0 * r_27_0_2) + (r_55_1_1 * r_27_1_2)) + (r_55_1_2 * r_27_2_2));
  double r_56_mul_2_0 = (((r_55_2_0 * r_27_0_0) + (r_55_2_1 * r_27_1_0)) + (r_55_2_2 * r_27_2_0));
  double r_56_mul_2_1 = (((r_55_2_0 * r_27_0_1) + (r_55_2_1 * r_27_1_1)) + (r_55_2_2 * r_27_2_1));
  double r_56_mul_2_2 = (((r_55_2_0 * r_27_0_2) + (r_55_2_1 * r_27_1_2)) + (r_55_2_2 * r_27_2_2));
  double limi_rotation_0_0_0 = r_56_mul_0_0;
  double limi_rotation_0_0_1 = r_56_mul_0_1;
  double limi_rotation_0_0_2 = r_56_mul_0_2;
  double limi_rotation_0_1_0 = r_56_mul_1_0;
  double limi_rotation_0_1_1 = r_56_mul_1_1;
  double limi_rotation_0_1_2 = r_56_mul_1_2;
  double limi_rotation_0_2_0 = r_56_mul_2_0;
  double limi_rotation_0_2_1 = r_56_mul_2_1;
  double limi_rotation_0_2_2 = r_56_mul_2_2;
  double r_57_0_0 = 0;
  double r_58_0_0 = 0;
  double r_59_0_0 = 0;
  double r_60_0_0 = 0;
  double r_61_0_0 = 0;
  double r_62_scalar_0_0 = v_0_0;
  double r_63_0_0 = r_57_0_0;
  double r_63_1_0 = r_58_0_0;
  double r_63_2_0 = r_59_0_0;
  double r_63_3_0 = r_60_0_0;
  double r_63_4_0 = r_61_0_0;
  double r_63_5_0 = r_62_scalar_0_0;
  double r_64_scalar_0_0 = v_0_0;
  double r_65_matrix_negate_0_0 = -(r_64_scalar_0_0);
  double r_66_scalar_0_0 = r_63_0_0;
  double r_67_scalar_0_0 = r_63_1_0;
  double r_68_scalar_0_0 = r_63_2_0;
  double r_69_0_0 = r_66_scalar_0_0;
  double r_69_1_0 = r_67_scalar_0_0;
  double r_69_2_0 = r_68_scalar_0_0;
  double r_70_scalar_0_0 = r_63_3_0;
  double r_71_scalar_0_0 = r_63_4_0;
  double r_72_scalar_0_0 = r_63_5_0;
  double r_73_0_0 = r_70_scalar_0_0;
  double r_73_1_0 = r_71_scalar_0_0;
  double r_73_2_0 = r_72_scalar_0_0;
  double r_74_matrix_negate_0_0 = -(r_65_matrix_negate_0_0);
  double r_75_scalar_0_0 = r_69_1_0;
  double r_76_mul_0_0 = (r_74_matrix_negate_0_0 * r_75_scalar_0_0);
  double r_77_scalar_0_0 = r_69_0_0;
  double r_78_mul_0_0 = (r_65_matrix_negate_0_0 * r_77_scalar_0_0);
  double r_79_0_0 = 0;
  double r_80_0_0 = r_76_mul_0_0;
  double r_80_1_0 = r_78_mul_0_0;
  double r_80_2_0 = r_79_0_0;
  double alpha_cross_linear_0_0_0 = r_80_0_0;
  double alpha_cross_linear_0_1_0 = r_80_1_0;
  double alpha_cross_linear_0_2_0 = r_80_2_0;
  double r_81_matrix_negate_0_0 = -(r_65_matrix_negate_0_0);
  double r_82_scalar_0_0 = r_73_1_0;
  double r_83_mul_0_0 = (r_81_matrix_negate_0_0 * r_82_scalar_0_0);
  double r_84_scalar_0_0 = r_73_0_0;
  double r_85_mul_0_0 = (r_65_matrix_negate_0_0 * r_84_scalar_0_0);
  double r_86_0_0 = 0;
  double r_87_0_0 = r_83_mul_0_0;
  double r_87_1_0 = r_85_mul_0_0;
  double r_87_2_0 = r_86_0_0;
  double alpha_cross_angular_0_0_0 = r_87_0_0;
  double alpha_cross_angular_0_1_0 = r_87_1_0;
  double alpha_cross_angular_0_2_0 = r_87_2_0;
  double r_88_scalar_0_0 = alpha_cross_linear_0_0_0;
  double r_89_scalar_0_0 = alpha_cross_linear_0_1_0;
  double r_90_scalar_0_0 = alpha_cross_linear_0_2_0;
  double r_91_scalar_0_0 = alpha_cross_angular_0_0_0;
  double r_92_scalar_0_0 = alpha_cross_angular_0_1_0;
  double r_93_scalar_0_0 = alpha_cross_angular_0_2_0;
  double r_94_0_0 = r_88_scalar_0_0;
  double r_94_1_0 = r_89_scalar_0_0;
  double r_94_2_0 = r_90_scalar_0_0;
  double r_94_3_0 = r_91_scalar_0_0;
  double r_94_4_0 = r_92_scalar_0_0;
  double r_94_5_0 = r_93_scalar_0_0;
  double alpha_cross_0_0_0 = r_94_0_0;
  double alpha_cross_0_1_0 = r_94_1_0;
  double alpha_cross_0_2_0 = r_94_2_0;
  double alpha_cross_0_3_0 = r_94_3_0;
  double alpha_cross_0_4_0 = r_94_4_0;
  double alpha_cross_0_5_0 = r_94_5_0;
  double r_95_scalar_0_0 = a_0_0;
  double r_96_scalar_0_0 = alpha_cross_0_5_0;
  double r_97_add_0_0 = (r_95_scalar_0_0 + r_96_scalar_0_0);
  double r_98_scalar_0_0 = alpha_cross_0_0_0;
  double r_99_scalar_0_0 = alpha_cross_0_1_0;
  double r_100_scalar_0_0 = alpha_cross_0_2_0;
  double r_101_scalar_0_0 = alpha_cross_0_3_0;
  double r_102_scalar_0_0 = alpha_cross_0_4_0;
  double r_103_0_0 = r_98_scalar_0_0;
  double r_103_1_0 = r_99_scalar_0_0;
  double r_103_2_0 = r_100_scalar_0_0;
  double r_103_3_0 = r_101_scalar_0_0;
  double r_103_4_0 = r_102_scalar_0_0;
  double r_103_5_0 = r_97_add_0_0;
  double r_104_scalar_0_0 = qcos_1_0;
  double r_105_scalar_0_0 = qsin_1_0;
  double r_106_matrix_negate_0_0 = -(r_105_scalar_0_0);
  double r_107_0_0 = 0;
  double r_108_scalar_0_0 = qsin_1_0;
  double r_109_scalar_0_0 = qcos_1_0;
  double r_110_0_0 = 0;
  double r_111_0_0 = 0;
  double r_112_0_0 = 0;
  double r_113_0_0 = 1;
  double r_114_0_0 = r_104_scalar_0_0;
  double r_114_0_1 = r_106_matrix_negate_0_0;
  double r_114_0_2 = r_107_0_0;
  double r_114_1_0 = r_108_scalar_0_0;
  double r_114_1_1 = r_109_scalar_0_0;
  double r_114_1_2 = r_110_0_0;
  double r_114_2_0 = r_111_0_0;
  double r_114_2_1 = r_112_0_0;
  double r_114_2_2 = r_113_0_0;
  double r_115_0_0 = 0;
  double r_116_0_0 = -1;
  double r_117_0_0 = 0;
  double r_118_0_0 = -1;
  double r_119_0_0 = 1;
  double r_120_0_0 = 0;
  double r_121_mul_0_0 = (r_119_0_0 * r_117_0_0);
  double r_122_mul_0_0 = (r_119_0_0 * r_118_0_0);
  double r_123_mul_0_0 = (r_122_mul_0_0 * r_116_0_0);
  double r_124_mul_0_0 = (r_120_0_0 * r_115_0_0);
  double r_125_sub_0_0 = (r_123_mul_0_0 - r_124_mul_0_0);
  double r_126_mul_0_0 = (r_119_0_0 * r_118_0_0);
  double r_127_mul_0_0 = (r_126_mul_0_0 * r_115_0_0);
  double r_128_mul_0_0 = (r_120_0_0 * r_116_0_0);
  double r_129_add_0_0 = (r_127_mul_0_0 + r_128_mul_0_0);
  double r_130_mul_0_0 = (r_120_0_0 * r_117_0_0);
  double r_131_mul_0_0 = (r_120_0_0 * r_118_0_0);
  double r_132_mul_0_0 = (r_131_mul_0_0 * r_116_0_0);
  double r_133_mul_0_0 = (r_119_0_0 * r_115_0_0);
  double r_134_add_0_0 = (r_132_mul_0_0 + r_133_mul_0_0);
  double r_135_mul_0_0 = (r_120_0_0 * r_118_0_0);
  double r_136_mul_0_0 = (r_135_mul_0_0 * r_115_0_0);
  double r_137_mul_0_0 = (r_119_0_0 * r_116_0_0);
  double r_138_sub_0_0 = (r_136_mul_0_0 - r_137_mul_0_0);
  double r_139_matrix_negate_0_0 = -(r_118_0_0);
  double r_140_mul_0_0 = (r_117_0_0 * r_116_0_0);
  double r_141_mul_0_0 = (r_117_0_0 * r_115_0_0);
  double r_142_0_0 = r_121_mul_0_0;
  double r_142_0_1 = r_125_sub_0_0;
  double r_142_0_2 = r_129_add_0_0;
  double r_142_1_0 = r_130_mul_0_0;
  double r_142_1_1 = r_134_add_0_0;
  double r_142_1_2 = r_138_sub_0_0;
  double r_142_2_0 = r_139_matrix_negate_0_0;
  double r_142_2_1 = r_140_mul_0_0;
  double r_142_2_2 = r_141_mul_0_0;
  double r_143_mul_0_0 = (((r_142_0_0 * r_114_0_0) + (r_142_0_1 * r_114_1_0)) + (r_142_0_2 * r_114_2_0));
  double r_143_mul_0_1 = (((r_142_0_0 * r_114_0_1) + (r_142_0_1 * r_114_1_1)) + (r_142_0_2 * r_114_2_1));
  double r_143_mul_0_2 = (((r_142_0_0 * r_114_0_2) + (r_142_0_1 * r_114_1_2)) + (r_142_0_2 * r_114_2_2));
  double r_143_mul_1_0 = (((r_142_1_0 * r_114_0_0) + (r_142_1_1 * r_114_1_0)) + (r_142_1_2 * r_114_2_0));
  double r_143_mul_1_1 = (((r_142_1_0 * r_114_0_1) + (r_142_1_1 * r_114_1_1)) + (r_142_1_2 * r_114_2_1));
  double r_143_mul_1_2 = (((r_142_1_0 * r_114_0_2) + (r_142_1_1 * r_114_1_2)) + (r_142_1_2 * r_114_2_2));
  double r_143_mul_2_0 = (((r_142_2_0 * r_114_0_0) + (r_142_2_1 * r_114_1_0)) + (r_142_2_2 * r_114_2_0));
  double r_143_mul_2_1 = (((r_142_2_0 * r_114_0_1) + (r_142_2_1 * r_114_1_1)) + (r_142_2_2 * r_114_2_1));
  double r_143_mul_2_2 = (((r_142_2_0 * r_114_0_2) + (r_142_2_1 * r_114_1_2)) + (r_142_2_2 * r_114_2_2));
  double limi_rotation_1_0_0 = r_143_mul_0_0;
  double limi_rotation_1_0_1 = r_143_mul_0_1;
  double limi_rotation_1_0_2 = r_143_mul_0_2;
  double limi_rotation_1_1_0 = r_143_mul_1_0;
  double limi_rotation_1_1_1 = r_143_mul_1_1;
  double limi_rotation_1_1_2 = r_143_mul_1_2;
  double limi_rotation_1_2_0 = r_143_mul_2_0;
  double limi_rotation_1_2_1 = r_143_mul_2_1;
  double limi_rotation_1_2_2 = r_143_mul_2_2;
  double r_144_mul_0_0 = (((limi_rotation_0_0_0 * limi_rotation_1_0_0) + (limi_rotation_0_0_1 * limi_rotation_1_1_0)) + (limi_rotation_0_0_2 * limi_rotation_1_2_0));
  double r_144_mul_0_1 = (((limi_rotation_0_0_0 * limi_rotation_1_0_1) + (limi_rotation_0_0_1 * limi_rotation_1_1_1)) + (limi_rotation_0_0_2 * limi_rotation_1_2_1));
  double r_144_mul_0_2 = (((limi_rotation_0_0_0 * limi_rotation_1_0_2) + (limi_rotation_0_0_1 * limi_rotation_1_1_2)) + (limi_rotation_0_0_2 * limi_rotation_1_2_2));
  double r_144_mul_1_0 = (((limi_rotation_0_1_0 * limi_rotation_1_0_0) + (limi_rotation_0_1_1 * limi_rotation_1_1_0)) + (limi_rotation_0_1_2 * limi_rotation_1_2_0));
  double r_144_mul_1_1 = (((limi_rotation_0_1_0 * limi_rotation_1_0_1) + (limi_rotation_0_1_1 * limi_rotation_1_1_1)) + (limi_rotation_0_1_2 * limi_rotation_1_2_1));
  double r_144_mul_1_2 = (((limi_rotation_0_1_0 * limi_rotation_1_0_2) + (limi_rotation_0_1_1 * limi_rotation_1_1_2)) + (limi_rotation_0_1_2 * limi_rotation_1_2_2));
  double r_144_mul_2_0 = (((limi_rotation_0_2_0 * limi_rotation_1_0_0) + (limi_rotation_0_2_1 * limi_rotation_1_1_0)) + (limi_rotation_0_2_2 * limi_rotation_1_2_0));
  double r_144_mul_2_1 = (((limi_rotation_0_2_0 * limi_rotation_1_0_1) + (limi_rotation_0_2_1 * limi_rotation_1_1_1)) + (limi_rotation_0_2_2 * limi_rotation_1_2_1));
  double r_144_mul_2_2 = (((limi_rotation_0_2_0 * limi_rotation_1_0_2) + (limi_rotation_0_2_1 * limi_rotation_1_1_2)) + (limi_rotation_0_2_2 * limi_rotation_1_2_2));
  double r_145_mul_0_0 = (((limi_rotation_0_0_0 * limi_translation_1_0_0) + (limi_rotation_0_0_1 * limi_translation_1_1_0)) + (limi_rotation_0_0_2 * limi_translation_1_2_0));
  double r_145_mul_1_0 = (((limi_rotation_0_1_0 * limi_translation_1_0_0) + (limi_rotation_0_1_1 * limi_translation_1_1_0)) + (limi_rotation_0_1_2 * limi_translation_1_2_0));
  double r_145_mul_2_0 = (((limi_rotation_0_2_0 * limi_translation_1_0_0) + (limi_rotation_0_2_1 * limi_translation_1_1_0)) + (limi_rotation_0_2_2 * limi_translation_1_2_0));
  double r_146_add_0_0 = (limi_translation_0_0_0 + r_145_mul_0_0);
  double r_146_add_1_0 = (limi_translation_0_1_0 + r_145_mul_1_0);
  double r_146_add_2_0 = (limi_translation_0_2_0 + r_145_mul_2_0);
  double r_147_0_0 = 0;
  double r_148_0_0 = 0;
  double r_149_0_0 = 0;
  double r_150_0_0 = 0;
  double r_151_0_0 = 0;
  double r_152_scalar_0_0 = v_1_0;
  double r_153_0_0 = r_147_0_0;
  double r_153_1_0 = r_148_0_0;
  double r_153_2_0 = r_149_0_0;
  double r_153_3_0 = r_150_0_0;
  double r_153_4_0 = r_151_0_0;
  double r_153_5_0 = r_152_scalar_0_0;
  double r_154_scalar_0_0 = r_63_0_0;
  double r_155_scalar_0_0 = r_63_1_0;
  double r_156_scalar_0_0 = r_63_2_0;
  double r_157_0_0 = r_154_scalar_0_0;
  double r_157_1_0 = r_155_scalar_0_0;
  double r_157_2_0 = r_156_scalar_0_0;
  double r_158_scalar_0_0 = r_63_3_0;
  double r_159_scalar_0_0 = r_63_4_0;
  double r_160_scalar_0_0 = r_63_5_0;
  double r_161_0_0 = r_158_scalar_0_0;
  double r_161_1_0 = r_159_scalar_0_0;
  double r_161_2_0 = r_160_scalar_0_0;
  double r_162_scalar_0_0 = r_153_0_0;
  double r_163_scalar_0_0 = r_153_1_0;
  double r_164_scalar_0_0 = r_153_2_0;
  double r_165_0_0 = r_162_scalar_0_0;
  double r_165_1_0 = r_163_scalar_0_0;
  double r_165_2_0 = r_164_scalar_0_0;
  double r_166_scalar_0_0 = r_153_3_0;
  double r_167_scalar_0_0 = r_153_4_0;
  double r_168_scalar_0_0 = r_153_5_0;
  double r_169_0_0 = r_166_scalar_0_0;
  double r_169_1_0 = r_167_scalar_0_0;
  double r_169_2_0 = r_168_scalar_0_0;
  double r_170_vector_cross_0_0 = ((limi_translation_1_1_0 * r_161_2_0) - (limi_translation_1_2_0 * r_161_1_0));
  double r_170_vector_cross_1_0 = ((limi_translation_1_2_0 * r_161_0_0) - (limi_translation_1_0_0 * r_161_2_0));
  double r_170_vector_cross_2_0 = ((limi_translation_1_0_0 * r_161_1_0) - (limi_translation_1_1_0 * r_161_0_0));
  double r_171_sub_0_0 = (r_157_0_0 - r_170_vector_cross_0_0);
  double r_171_sub_1_0 = (r_157_1_0 - r_170_vector_cross_1_0);
  double r_171_sub_2_0 = (r_157_2_0 - r_170_vector_cross_2_0);
  double r_172_transpose_0_0 = limi_rotation_1_0_0;
  double r_172_transpose_0_1 = limi_rotation_1_1_0;
  double r_172_transpose_0_2 = limi_rotation_1_2_0;
  double r_172_transpose_1_0 = limi_rotation_1_0_1;
  double r_172_transpose_1_1 = limi_rotation_1_1_1;
  double r_172_transpose_1_2 = limi_rotation_1_2_1;
  double r_172_transpose_2_0 = limi_rotation_1_0_2;
  double r_172_transpose_2_1 = limi_rotation_1_1_2;
  double r_172_transpose_2_2 = limi_rotation_1_2_2;
  double r_173_mul_0_0 = (((r_172_transpose_0_0 * r_171_sub_0_0) + (r_172_transpose_0_1 * r_171_sub_1_0)) + (r_172_transpose_0_2 * r_171_sub_2_0));
  double r_173_mul_1_0 = (((r_172_transpose_1_0 * r_171_sub_0_0) + (r_172_transpose_1_1 * r_171_sub_1_0)) + (r_172_transpose_1_2 * r_171_sub_2_0));
  double r_173_mul_2_0 = (((r_172_transpose_2_0 * r_171_sub_0_0) + (r_172_transpose_2_1 * r_171_sub_1_0)) + (r_172_transpose_2_2 * r_171_sub_2_0));
  double r_174_add_0_0 = (r_165_0_0 + r_173_mul_0_0);
  double r_174_add_1_0 = (r_165_1_0 + r_173_mul_1_0);
  double r_174_add_2_0 = (r_165_2_0 + r_173_mul_2_0);
  double r_175_mul_0_0 = (((r_172_transpose_0_0 * r_161_0_0) + (r_172_transpose_0_1 * r_161_1_0)) + (r_172_transpose_0_2 * r_161_2_0));
  double r_175_mul_1_0 = (((r_172_transpose_1_0 * r_161_0_0) + (r_172_transpose_1_1 * r_161_1_0)) + (r_172_transpose_1_2 * r_161_2_0));
  double r_175_mul_2_0 = (((r_172_transpose_2_0 * r_161_0_0) + (r_172_transpose_2_1 * r_161_1_0)) + (r_172_transpose_2_2 * r_161_2_0));
  double r_176_add_0_0 = (r_169_0_0 + r_175_mul_0_0);
  double r_176_add_1_0 = (r_169_1_0 + r_175_mul_1_0);
  double r_176_add_2_0 = (r_169_2_0 + r_175_mul_2_0);
  double r_177_scalar_0_0 = r_174_add_0_0;
  double r_178_scalar_0_0 = r_174_add_1_0;
  double r_179_scalar_0_0 = r_174_add_2_0;
  double r_180_scalar_0_0 = r_176_add_0_0;
  double r_181_scalar_0_0 = r_176_add_1_0;
  double r_182_scalar_0_0 = r_176_add_2_0;
  double r_183_0_0 = r_177_scalar_0_0;
  double r_183_1_0 = r_178_scalar_0_0;
  double r_183_2_0 = r_179_scalar_0_0;
  double r_183_3_0 = r_180_scalar_0_0;
  double r_183_4_0 = r_181_scalar_0_0;
  double r_183_5_0 = r_182_scalar_0_0;
  double act_motion_inv_1_0_0 = r_183_0_0;
  double act_motion_inv_1_1_0 = r_183_1_0;
  double act_motion_inv_1_2_0 = r_183_2_0;
  double act_motion_inv_1_3_0 = r_183_3_0;
  double act_motion_inv_1_4_0 = r_183_4_0;
  double act_motion_inv_1_5_0 = r_183_5_0;
  double r_184_scalar_0_0 = v_1_0;
  double r_185_matrix_negate_0_0 = -(r_184_scalar_0_0);
  double r_186_scalar_0_0 = act_motion_inv_1_0_0;
  double r_187_scalar_0_0 = act_motion_inv_1_1_0;
  double r_188_scalar_0_0 = act_motion_inv_1_2_0;
  double r_189_0_0 = r_186_scalar_0_0;
  double r_189_1_0 = r_187_scalar_0_0;
  double r_189_2_0 = r_188_scalar_0_0;
  double r_190_scalar_0_0 = act_motion_inv_1_3_0;
  double r_191_scalar_0_0 = act_motion_inv_1_4_0;
  double r_192_scalar_0_0 = act_motion_inv_1_5_0;
  double r_193_0_0 = r_190_scalar_0_0;
  double r_193_1_0 = r_191_scalar_0_0;
  double r_193_2_0 = r_192_scalar_0_0;
  double r_194_matrix_negate_0_0 = -(r_185_matrix_negate_0_0);
  double r_195_scalar_0_0 = r_189_1_0;
  double r_196_mul_0_0 = (r_194_matrix_negate_0_0 * r_195_scalar_0_0);
  double r_197_scalar_0_0 = r_189_0_0;
  double r_198_mul_0_0 = (r_185_matrix_negate_0_0 * r_197_scalar_0_0);
  double r_199_0_0 = 0;
  double r_200_0_0 = r_196_mul_0_0;
  double r_200_1_0 = r_198_mul_0_0;
  double r_200_2_0 = r_199_0_0;
  double alpha_cross_linear_1_0_0 = r_200_0_0;
  double alpha_cross_linear_1_1_0 = r_200_1_0;
  double alpha_cross_linear_1_2_0 = r_200_2_0;
  double r_201_matrix_negate_0_0 = -(r_185_matrix_negate_0_0);
  double r_202_scalar_0_0 = r_193_1_0;
  double r_203_mul_0_0 = (r_201_matrix_negate_0_0 * r_202_scalar_0_0);
  double r_204_scalar_0_0 = r_193_0_0;
  double r_205_mul_0_0 = (r_185_matrix_negate_0_0 * r_204_scalar_0_0);
  double r_206_0_0 = 0;
  double r_207_0_0 = r_203_mul_0_0;
  double r_207_1_0 = r_205_mul_0_0;
  double r_207_2_0 = r_206_0_0;
  double alpha_cross_angular_1_0_0 = r_207_0_0;
  double alpha_cross_angular_1_1_0 = r_207_1_0;
  double alpha_cross_angular_1_2_0 = r_207_2_0;
  double r_208_scalar_0_0 = alpha_cross_linear_1_0_0;
  double r_209_scalar_0_0 = alpha_cross_linear_1_1_0;
  double r_210_scalar_0_0 = alpha_cross_linear_1_2_0;
  double r_211_scalar_0_0 = alpha_cross_angular_1_0_0;
  double r_212_scalar_0_0 = alpha_cross_angular_1_1_0;
  double r_213_scalar_0_0 = alpha_cross_angular_1_2_0;
  double r_214_0_0 = r_208_scalar_0_0;
  double r_214_1_0 = r_209_scalar_0_0;
  double r_214_2_0 = r_210_scalar_0_0;
  double r_214_3_0 = r_211_scalar_0_0;
  double r_214_4_0 = r_212_scalar_0_0;
  double r_214_5_0 = r_213_scalar_0_0;
  double alpha_cross_1_0_0 = r_214_0_0;
  double alpha_cross_1_1_0 = r_214_1_0;
  double alpha_cross_1_2_0 = r_214_2_0;
  double alpha_cross_1_3_0 = r_214_3_0;
  double alpha_cross_1_4_0 = r_214_4_0;
  double alpha_cross_1_5_0 = r_214_5_0;
  double r_215_scalar_0_0 = a_1_0;
  double r_216_scalar_0_0 = alpha_cross_1_5_0;
  double r_217_add_0_0 = (r_215_scalar_0_0 + r_216_scalar_0_0);
  double r_218_scalar_0_0 = alpha_cross_1_0_0;
  double r_219_scalar_0_0 = alpha_cross_1_1_0;
  double r_220_scalar_0_0 = alpha_cross_1_2_0;
  double r_221_scalar_0_0 = alpha_cross_1_3_0;
  double r_222_scalar_0_0 = alpha_cross_1_4_0;
  double r_223_0_0 = r_218_scalar_0_0;
  double r_223_1_0 = r_219_scalar_0_0;
  double r_223_2_0 = r_220_scalar_0_0;
  double r_223_3_0 = r_221_scalar_0_0;
  double r_223_4_0 = r_222_scalar_0_0;
  double r_223_5_0 = r_217_add_0_0;
  double r_224_scalar_0_0 = r_103_0_0;
  double r_225_scalar_0_0 = r_103_1_0;
  double r_226_scalar_0_0 = r_103_2_0;
  double r_227_0_0 = r_224_scalar_0_0;
  double r_227_1_0 = r_225_scalar_0_0;
  double r_227_2_0 = r_226_scalar_0_0;
  double r_228_scalar_0_0 = r_103_3_0;
  double r_229_scalar_0_0 = r_103_4_0;
  double r_230_scalar_0_0 = r_103_5_0;
  double r_231_0_0 = r_228_scalar_0_0;
  double r_231_1_0 = r_229_scalar_0_0;
  double r_231_2_0 = r_230_scalar_0_0;
  double r_232_vector_cross_0_0 = ((limi_translation_1_1_0 * r_231_2_0) - (limi_translation_1_2_0 * r_231_1_0));
  double r_232_vector_cross_1_0 = ((limi_translation_1_2_0 * r_231_0_0) - (limi_translation_1_0_0 * r_231_2_0));
  double r_232_vector_cross_2_0 = ((limi_translation_1_0_0 * r_231_1_0) - (limi_translation_1_1_0 * r_231_0_0));
  double r_233_sub_0_0 = (r_227_0_0 - r_232_vector_cross_0_0);
  double r_233_sub_1_0 = (r_227_1_0 - r_232_vector_cross_1_0);
  double r_233_sub_2_0 = (r_227_2_0 - r_232_vector_cross_2_0);
  double r_234_transpose_0_0 = limi_rotation_1_0_0;
  double r_234_transpose_0_1 = limi_rotation_1_1_0;
  double r_234_transpose_0_2 = limi_rotation_1_2_0;
  double r_234_transpose_1_0 = limi_rotation_1_0_1;
  double r_234_transpose_1_1 = limi_rotation_1_1_1;
  double r_234_transpose_1_2 = limi_rotation_1_2_1;
  double r_234_transpose_2_0 = limi_rotation_1_0_2;
  double r_234_transpose_2_1 = limi_rotation_1_1_2;
  double r_234_transpose_2_2 = limi_rotation_1_2_2;
  double r_235_mul_0_0 = (((r_234_transpose_0_0 * r_233_sub_0_0) + (r_234_transpose_0_1 * r_233_sub_1_0)) + (r_234_transpose_0_2 * r_233_sub_2_0));
  double r_235_mul_1_0 = (((r_234_transpose_1_0 * r_233_sub_0_0) + (r_234_transpose_1_1 * r_233_sub_1_0)) + (r_234_transpose_1_2 * r_233_sub_2_0));
  double r_235_mul_2_0 = (((r_234_transpose_2_0 * r_233_sub_0_0) + (r_234_transpose_2_1 * r_233_sub_1_0)) + (r_234_transpose_2_2 * r_233_sub_2_0));
  double r_236_mul_0_0 = (((r_234_transpose_0_0 * r_231_0_0) + (r_234_transpose_0_1 * r_231_1_0)) + (r_234_transpose_0_2 * r_231_2_0));
  double r_236_mul_1_0 = (((r_234_transpose_1_0 * r_231_0_0) + (r_234_transpose_1_1 * r_231_1_0)) + (r_234_transpose_1_2 * r_231_2_0));
  double r_236_mul_2_0 = (((r_234_transpose_2_0 * r_231_0_0) + (r_234_transpose_2_1 * r_231_1_0)) + (r_234_transpose_2_2 * r_231_2_0));
  double r_237_scalar_0_0 = r_235_mul_0_0;
  double r_238_scalar_0_0 = r_235_mul_1_0;
  double r_239_scalar_0_0 = r_235_mul_2_0;
  double r_240_scalar_0_0 = r_236_mul_0_0;
  double r_241_scalar_0_0 = r_236_mul_1_0;
  double r_242_scalar_0_0 = r_236_mul_2_0;
  double r_243_0_0 = r_237_scalar_0_0;
  double r_243_1_0 = r_238_scalar_0_0;
  double r_243_2_0 = r_239_scalar_0_0;
  double r_243_3_0 = r_240_scalar_0_0;
  double r_243_4_0 = r_241_scalar_0_0;
  double r_243_5_0 = r_242_scalar_0_0;
  double act_inv_1_0_0 = r_243_0_0;
  double act_inv_1_1_0 = r_243_1_0;
  double act_inv_1_2_0 = r_243_2_0;
  double act_inv_1_3_0 = r_243_3_0;
  double act_inv_1_4_0 = r_243_4_0;
  double act_inv_1_5_0 = r_243_5_0;
  double r_244_add_0_0 = (r_223_0_0 + act_inv_1_0_0);
  double r_244_add_1_0 = (r_223_1_0 + act_inv_1_1_0);
  double r_244_add_2_0 = (r_223_2_0 + act_inv_1_2_0);
  double r_244_add_3_0 = (r_223_3_0 + act_inv_1_3_0);
  double r_244_add_4_0 = (r_223_4_0 + act_inv_1_4_0);
  double r_244_add_5_0 = (r_223_5_0 + act_inv_1_5_0);
  double r_245_scalar_0_0 = qcos_2_0;
  double r_246_scalar_0_0 = qsin_2_0;
  double r_247_matrix_negate_0_0 = -(r_246_scalar_0_0);
  double r_248_0_0 = 0;
  double r_249_scalar_0_0 = qsin_2_0;
  double r_250_scalar_0_0 = qcos_2_0;
  double r_251_0_0 = 0;
  double r_252_0_0 = 0;
  double r_253_0_0 = 0;
  double r_254_0_0 = 1;
  double r_255_0_0 = r_245_scalar_0_0;
  double r_255_0_1 = r_247_matrix_negate_0_0;
  double r_255_0_2 = r_248_0_0;
  double r_255_1_0 = r_249_scalar_0_0;
  double r_255_1_1 = r_250_scalar_0_0;
  double r_255_1_2 = r_251_0_0;
  double r_255_2_0 = r_252_0_0;
  double r_255_2_1 = r_253_0_0;
  double r_255_2_2 = r_254_0_0;
  double r_256_0_0 = 1;
  double r_257_0_0 = 0;
  double r_258_0_0 = 1;
  double r_259_0_0 = 0;
  double r_260_0_0 = 0;
  double r_261_0_0 = 1;
  double r_262_mul_0_0 = (r_260_0_0 * r_258_0_0);
  double r_263_mul_0_0 = (r_260_0_0 * r_259_0_0);
  double r_264_mul_0_0 = (r_263_mul_0_0 * r_257_0_0);
  double r_265_mul_0_0 = (r_261_0_0 * r_256_0_0);
  double r_266_sub_0_0 = (r_264_mul_0_0 - r_265_mul_0_0);
  double r_267_mul_0_0 = (r_260_0_0 * r_259_0_0);
  double r_268_mul_0_0 = (r_267_mul_0_0 * r_256_0_0);
  double r_269_mul_0_0 = (r_261_0_0 * r_257_0_0);
  double r_270_add_0_0 = (r_268_mul_0_0 + r_269_mul_0_0);
  double r_271_mul_0_0 = (r_261_0_0 * r_258_0_0);
  double r_272_mul_0_0 = (r_261_0_0 * r_259_0_0);
  double r_273_mul_0_0 = (r_272_mul_0_0 * r_257_0_0);
  double r_274_mul_0_0 = (r_260_0_0 * r_256_0_0);
  double r_275_add_0_0 = (r_273_mul_0_0 + r_274_mul_0_0);
  double r_276_mul_0_0 = (r_261_0_0 * r_259_0_0);
  double r_277_mul_0_0 = (r_276_mul_0_0 * r_256_0_0);
  double r_278_mul_0_0 = (r_260_0_0 * r_257_0_0);
  double r_279_sub_0_0 = (r_277_mul_0_0 - r_278_mul_0_0);
  double r_280_matrix_negate_0_0 = -(r_259_0_0);
  double r_281_mul_0_0 = (r_258_0_0 * r_257_0_0);
  double r_282_mul_0_0 = (r_258_0_0 * r_256_0_0);
  double r_283_0_0 = r_262_mul_0_0;
  double r_283_0_1 = r_266_sub_0_0;
  double r_283_0_2 = r_270_add_0_0;
  double r_283_1_0 = r_271_mul_0_0;
  double r_283_1_1 = r_275_add_0_0;
  double r_283_1_2 = r_279_sub_0_0;
  double r_283_2_0 = r_280_matrix_negate_0_0;
  double r_283_2_1 = r_281_mul_0_0;
  double r_283_2_2 = r_282_mul_0_0;
  double r_284_mul_0_0 = (((r_283_0_0 * r_255_0_0) + (r_283_0_1 * r_255_1_0)) + (r_283_0_2 * r_255_2_0));
  double r_284_mul_0_1 = (((r_283_0_0 * r_255_0_1) + (r_283_0_1 * r_255_1_1)) + (r_283_0_2 * r_255_2_1));
  double r_284_mul_0_2 = (((r_283_0_0 * r_255_0_2) + (r_283_0_1 * r_255_1_2)) + (r_283_0_2 * r_255_2_2));
  double r_284_mul_1_0 = (((r_283_1_0 * r_255_0_0) + (r_283_1_1 * r_255_1_0)) + (r_283_1_2 * r_255_2_0));
  double r_284_mul_1_1 = (((r_283_1_0 * r_255_0_1) + (r_283_1_1 * r_255_1_1)) + (r_283_1_2 * r_255_2_1));
  double r_284_mul_1_2 = (((r_283_1_0 * r_255_0_2) + (r_283_1_1 * r_255_1_2)) + (r_283_1_2 * r_255_2_2));
  double r_284_mul_2_0 = (((r_283_2_0 * r_255_0_0) + (r_283_2_1 * r_255_1_0)) + (r_283_2_2 * r_255_2_0));
  double r_284_mul_2_1 = (((r_283_2_0 * r_255_0_1) + (r_283_2_1 * r_255_1_1)) + (r_283_2_2 * r_255_2_1));
  double r_284_mul_2_2 = (((r_283_2_0 * r_255_0_2) + (r_283_2_1 * r_255_1_2)) + (r_283_2_2 * r_255_2_2));
  double limi_rotation_2_0_0 = r_284_mul_0_0;
  double limi_rotation_2_0_1 = r_284_mul_0_1;
  double limi_rotation_2_0_2 = r_284_mul_0_2;
  double limi_rotation_2_1_0 = r_284_mul_1_0;
  double limi_rotation_2_1_1 = r_284_mul_1_1;
  double limi_rotation_2_1_2 = r_284_mul_1_2;
  double limi_rotation_2_2_0 = r_284_mul_2_0;
  double limi_rotation_2_2_1 = r_284_mul_2_1;
  double limi_rotation_2_2_2 = r_284_mul_2_2;
  double r_285_mul_0_0 = (((r_144_mul_0_0 * limi_rotation_2_0_0) + (r_144_mul_0_1 * limi_rotation_2_1_0)) + (r_144_mul_0_2 * limi_rotation_2_2_0));
  double r_285_mul_0_1 = (((r_144_mul_0_0 * limi_rotation_2_0_1) + (r_144_mul_0_1 * limi_rotation_2_1_1)) + (r_144_mul_0_2 * limi_rotation_2_2_1));
  double r_285_mul_0_2 = (((r_144_mul_0_0 * limi_rotation_2_0_2) + (r_144_mul_0_1 * limi_rotation_2_1_2)) + (r_144_mul_0_2 * limi_rotation_2_2_2));
  double r_285_mul_1_0 = (((r_144_mul_1_0 * limi_rotation_2_0_0) + (r_144_mul_1_1 * limi_rotation_2_1_0)) + (r_144_mul_1_2 * limi_rotation_2_2_0));
  double r_285_mul_1_1 = (((r_144_mul_1_0 * limi_rotation_2_0_1) + (r_144_mul_1_1 * limi_rotation_2_1_1)) + (r_144_mul_1_2 * limi_rotation_2_2_1));
  double r_285_mul_1_2 = (((r_144_mul_1_0 * limi_rotation_2_0_2) + (r_144_mul_1_1 * limi_rotation_2_1_2)) + (r_144_mul_1_2 * limi_rotation_2_2_2));
  double r_285_mul_2_0 = (((r_144_mul_2_0 * limi_rotation_2_0_0) + (r_144_mul_2_1 * limi_rotation_2_1_0)) + (r_144_mul_2_2 * limi_rotation_2_2_0));
  double r_285_mul_2_1 = (((r_144_mul_2_0 * limi_rotation_2_0_1) + (r_144_mul_2_1 * limi_rotation_2_1_1)) + (r_144_mul_2_2 * limi_rotation_2_2_1));
  double r_285_mul_2_2 = (((r_144_mul_2_0 * limi_rotation_2_0_2) + (r_144_mul_2_1 * limi_rotation_2_1_2)) + (r_144_mul_2_2 * limi_rotation_2_2_2));
  double r_286_mul_0_0 = (((r_144_mul_0_0 * limi_translation_2_0_0) + (r_144_mul_0_1 * limi_translation_2_1_0)) + (r_144_mul_0_2 * limi_translation_2_2_0));
  double r_286_mul_1_0 = (((r_144_mul_1_0 * limi_translation_2_0_0) + (r_144_mul_1_1 * limi_translation_2_1_0)) + (r_144_mul_1_2 * limi_translation_2_2_0));
  double r_286_mul_2_0 = (((r_144_mul_2_0 * limi_translation_2_0_0) + (r_144_mul_2_1 * limi_translation_2_1_0)) + (r_144_mul_2_2 * limi_translation_2_2_0));
  double r_287_add_0_0 = (r_146_add_0_0 + r_286_mul_0_0);
  double r_287_add_1_0 = (r_146_add_1_0 + r_286_mul_1_0);
  double r_287_add_2_0 = (r_146_add_2_0 + r_286_mul_2_0);
  double r_288_0_0 = 0;
  double r_289_0_0 = 0;
  double r_290_0_0 = 0;
  double r_291_0_0 = 0;
  double r_292_0_0 = 0;
  double r_293_scalar_0_0 = v_2_0;
  double r_294_0_0 = r_288_0_0;
  double r_294_1_0 = r_289_0_0;
  double r_294_2_0 = r_290_0_0;
  double r_294_3_0 = r_291_0_0;
  double r_294_4_0 = r_292_0_0;
  double r_294_5_0 = r_293_scalar_0_0;
  double r_295_scalar_0_0 = act_motion_inv_1_0_0;
  double r_296_scalar_0_0 = act_motion_inv_1_1_0;
  double r_297_scalar_0_0 = act_motion_inv_1_2_0;
  double r_298_0_0 = r_295_scalar_0_0;
  double r_298_1_0 = r_296_scalar_0_0;
  double r_298_2_0 = r_297_scalar_0_0;
  double r_299_scalar_0_0 = act_motion_inv_1_3_0;
  double r_300_scalar_0_0 = act_motion_inv_1_4_0;
  double r_301_scalar_0_0 = act_motion_inv_1_5_0;
  double r_302_0_0 = r_299_scalar_0_0;
  double r_302_1_0 = r_300_scalar_0_0;
  double r_302_2_0 = r_301_scalar_0_0;
  double r_303_scalar_0_0 = r_294_0_0;
  double r_304_scalar_0_0 = r_294_1_0;
  double r_305_scalar_0_0 = r_294_2_0;
  double r_306_0_0 = r_303_scalar_0_0;
  double r_306_1_0 = r_304_scalar_0_0;
  double r_306_2_0 = r_305_scalar_0_0;
  double r_307_scalar_0_0 = r_294_3_0;
  double r_308_scalar_0_0 = r_294_4_0;
  double r_309_scalar_0_0 = r_294_5_0;
  double r_310_0_0 = r_307_scalar_0_0;
  double r_310_1_0 = r_308_scalar_0_0;
  double r_310_2_0 = r_309_scalar_0_0;
  double r_311_vector_cross_0_0 = ((limi_translation_2_1_0 * r_302_2_0) - (limi_translation_2_2_0 * r_302_1_0));
  double r_311_vector_cross_1_0 = ((limi_translation_2_2_0 * r_302_0_0) - (limi_translation_2_0_0 * r_302_2_0));
  double r_311_vector_cross_2_0 = ((limi_translation_2_0_0 * r_302_1_0) - (limi_translation_2_1_0 * r_302_0_0));
  double r_312_sub_0_0 = (r_298_0_0 - r_311_vector_cross_0_0);
  double r_312_sub_1_0 = (r_298_1_0 - r_311_vector_cross_1_0);
  double r_312_sub_2_0 = (r_298_2_0 - r_311_vector_cross_2_0);
  double r_313_transpose_0_0 = limi_rotation_2_0_0;
  double r_313_transpose_0_1 = limi_rotation_2_1_0;
  double r_313_transpose_0_2 = limi_rotation_2_2_0;
  double r_313_transpose_1_0 = limi_rotation_2_0_1;
  double r_313_transpose_1_1 = limi_rotation_2_1_1;
  double r_313_transpose_1_2 = limi_rotation_2_2_1;
  double r_313_transpose_2_0 = limi_rotation_2_0_2;
  double r_313_transpose_2_1 = limi_rotation_2_1_2;
  double r_313_transpose_2_2 = limi_rotation_2_2_2;
  double r_314_mul_0_0 = (((r_313_transpose_0_0 * r_312_sub_0_0) + (r_313_transpose_0_1 * r_312_sub_1_0)) + (r_313_transpose_0_2 * r_312_sub_2_0));
  double r_314_mul_1_0 = (((r_313_transpose_1_0 * r_312_sub_0_0) + (r_313_transpose_1_1 * r_312_sub_1_0)) + (r_313_transpose_1_2 * r_312_sub_2_0));
  double r_314_mul_2_0 = (((r_313_transpose_2_0 * r_312_sub_0_0) + (r_313_transpose_2_1 * r_312_sub_1_0)) + (r_313_transpose_2_2 * r_312_sub_2_0));
  double r_315_add_0_0 = (r_306_0_0 + r_314_mul_0_0);
  double r_315_add_1_0 = (r_306_1_0 + r_314_mul_1_0);
  double r_315_add_2_0 = (r_306_2_0 + r_314_mul_2_0);
  double r_316_mul_0_0 = (((r_313_transpose_0_0 * r_302_0_0) + (r_313_transpose_0_1 * r_302_1_0)) + (r_313_transpose_0_2 * r_302_2_0));
  double r_316_mul_1_0 = (((r_313_transpose_1_0 * r_302_0_0) + (r_313_transpose_1_1 * r_302_1_0)) + (r_313_transpose_1_2 * r_302_2_0));
  double r_316_mul_2_0 = (((r_313_transpose_2_0 * r_302_0_0) + (r_313_transpose_2_1 * r_302_1_0)) + (r_313_transpose_2_2 * r_302_2_0));
  double r_317_add_0_0 = (r_310_0_0 + r_316_mul_0_0);
  double r_317_add_1_0 = (r_310_1_0 + r_316_mul_1_0);
  double r_317_add_2_0 = (r_310_2_0 + r_316_mul_2_0);
  double r_318_scalar_0_0 = r_315_add_0_0;
  double r_319_scalar_0_0 = r_315_add_1_0;
  double r_320_scalar_0_0 = r_315_add_2_0;
  double r_321_scalar_0_0 = r_317_add_0_0;
  double r_322_scalar_0_0 = r_317_add_1_0;
  double r_323_scalar_0_0 = r_317_add_2_0;
  double r_324_0_0 = r_318_scalar_0_0;
  double r_324_1_0 = r_319_scalar_0_0;
  double r_324_2_0 = r_320_scalar_0_0;
  double r_324_3_0 = r_321_scalar_0_0;
  double r_324_4_0 = r_322_scalar_0_0;
  double r_324_5_0 = r_323_scalar_0_0;
  double act_motion_inv_2_0_0 = r_324_0_0;
  double act_motion_inv_2_1_0 = r_324_1_0;
  double act_motion_inv_2_2_0 = r_324_2_0;
  double act_motion_inv_2_3_0 = r_324_3_0;
  double act_motion_inv_2_4_0 = r_324_4_0;
  double act_motion_inv_2_5_0 = r_324_5_0;
  double r_325_scalar_0_0 = v_2_0;
  double r_326_matrix_negate_0_0 = -(r_325_scalar_0_0);
  double r_327_scalar_0_0 = act_motion_inv_2_0_0;
  double r_328_scalar_0_0 = act_motion_inv_2_1_0;
  double r_329_scalar_0_0 = act_motion_inv_2_2_0;
  double r_330_0_0 = r_327_scalar_0_0;
  double r_330_1_0 = r_328_scalar_0_0;
  double r_330_2_0 = r_329_scalar_0_0;
  double r_331_scalar_0_0 = act_motion_inv_2_3_0;
  double r_332_scalar_0_0 = act_motion_inv_2_4_0;
  double r_333_scalar_0_0 = act_motion_inv_2_5_0;
  double r_334_0_0 = r_331_scalar_0_0;
  double r_334_1_0 = r_332_scalar_0_0;
  double r_334_2_0 = r_333_scalar_0_0;
  double r_335_matrix_negate_0_0 = -(r_326_matrix_negate_0_0);
  double r_336_scalar_0_0 = r_330_1_0;
  double r_337_mul_0_0 = (r_335_matrix_negate_0_0 * r_336_scalar_0_0);
  double r_338_scalar_0_0 = r_330_0_0;
  double r_339_mul_0_0 = (r_326_matrix_negate_0_0 * r_338_scalar_0_0);
  double r_340_0_0 = 0;
  double r_341_0_0 = r_337_mul_0_0;
  double r_341_1_0 = r_339_mul_0_0;
  double r_341_2_0 = r_340_0_0;
  double alpha_cross_linear_2_0_0 = r_341_0_0;
  double alpha_cross_linear_2_1_0 = r_341_1_0;
  double alpha_cross_linear_2_2_0 = r_341_2_0;
  double r_342_matrix_negate_0_0 = -(r_326_matrix_negate_0_0);
  double r_343_scalar_0_0 = r_334_1_0;
  double r_344_mul_0_0 = (r_342_matrix_negate_0_0 * r_343_scalar_0_0);
  double r_345_scalar_0_0 = r_334_0_0;
  double r_346_mul_0_0 = (r_326_matrix_negate_0_0 * r_345_scalar_0_0);
  double r_347_0_0 = 0;
  double r_348_0_0 = r_344_mul_0_0;
  double r_348_1_0 = r_346_mul_0_0;
  double r_348_2_0 = r_347_0_0;
  double alpha_cross_angular_2_0_0 = r_348_0_0;
  double alpha_cross_angular_2_1_0 = r_348_1_0;
  double alpha_cross_angular_2_2_0 = r_348_2_0;
  double r_349_scalar_0_0 = alpha_cross_linear_2_0_0;
  double r_350_scalar_0_0 = alpha_cross_linear_2_1_0;
  double r_351_scalar_0_0 = alpha_cross_linear_2_2_0;
  double r_352_scalar_0_0 = alpha_cross_angular_2_0_0;
  double r_353_scalar_0_0 = alpha_cross_angular_2_1_0;
  double r_354_scalar_0_0 = alpha_cross_angular_2_2_0;
  double r_355_0_0 = r_349_scalar_0_0;
  double r_355_1_0 = r_350_scalar_0_0;
  double r_355_2_0 = r_351_scalar_0_0;
  double r_355_3_0 = r_352_scalar_0_0;
  double r_355_4_0 = r_353_scalar_0_0;
  double r_355_5_0 = r_354_scalar_0_0;
  double alpha_cross_2_0_0 = r_355_0_0;
  double alpha_cross_2_1_0 = r_355_1_0;
  double alpha_cross_2_2_0 = r_355_2_0;
  double alpha_cross_2_3_0 = r_355_3_0;
  double alpha_cross_2_4_0 = r_355_4_0;
  double alpha_cross_2_5_0 = r_355_5_0;
  double r_356_scalar_0_0 = a_2_0;
  double r_357_scalar_0_0 = alpha_cross_2_5_0;
  double r_358_add_0_0 = (r_356_scalar_0_0 + r_357_scalar_0_0);
  double r_359_scalar_0_0 = alpha_cross_2_0_0;
  double r_360_scalar_0_0 = alpha_cross_2_1_0;
  double r_361_scalar_0_0 = alpha_cross_2_2_0;
  double r_362_scalar_0_0 = alpha_cross_2_3_0;
  double r_363_scalar_0_0 = alpha_cross_2_4_0;
  double r_364_0_0 = r_359_scalar_0_0;
  double r_364_1_0 = r_360_scalar_0_0;
  double r_364_2_0 = r_361_scalar_0_0;
  double r_364_3_0 = r_362_scalar_0_0;
  double r_364_4_0 = r_363_scalar_0_0;
  double r_364_5_0 = r_358_add_0_0;
  double r_365_scalar_0_0 = r_244_add_0_0;
  double r_366_scalar_0_0 = r_244_add_1_0;
  double r_367_scalar_0_0 = r_244_add_2_0;
  double r_368_0_0 = r_365_scalar_0_0;
  double r_368_1_0 = r_366_scalar_0_0;
  double r_368_2_0 = r_367_scalar_0_0;
  double r_369_scalar_0_0 = r_244_add_3_0;
  double r_370_scalar_0_0 = r_244_add_4_0;
  double r_371_scalar_0_0 = r_244_add_5_0;
  double r_372_0_0 = r_369_scalar_0_0;
  double r_372_1_0 = r_370_scalar_0_0;
  double r_372_2_0 = r_371_scalar_0_0;
  double r_373_vector_cross_0_0 = ((limi_translation_2_1_0 * r_372_2_0) - (limi_translation_2_2_0 * r_372_1_0));
  double r_373_vector_cross_1_0 = ((limi_translation_2_2_0 * r_372_0_0) - (limi_translation_2_0_0 * r_372_2_0));
  double r_373_vector_cross_2_0 = ((limi_translation_2_0_0 * r_372_1_0) - (limi_translation_2_1_0 * r_372_0_0));
  double r_374_sub_0_0 = (r_368_0_0 - r_373_vector_cross_0_0);
  double r_374_sub_1_0 = (r_368_1_0 - r_373_vector_cross_1_0);
  double r_374_sub_2_0 = (r_368_2_0 - r_373_vector_cross_2_0);
  double r_375_transpose_0_0 = limi_rotation_2_0_0;
  double r_375_transpose_0_1 = limi_rotation_2_1_0;
  double r_375_transpose_0_2 = limi_rotation_2_2_0;
  double r_375_transpose_1_0 = limi_rotation_2_0_1;
  double r_375_transpose_1_1 = limi_rotation_2_1_1;
  double r_375_transpose_1_2 = limi_rotation_2_2_1;
  double r_375_transpose_2_0 = limi_rotation_2_0_2;
  double r_375_transpose_2_1 = limi_rotation_2_1_2;
  double r_375_transpose_2_2 = limi_rotation_2_2_2;
  double r_376_mul_0_0 = (((r_375_transpose_0_0 * r_374_sub_0_0) + (r_375_transpose_0_1 * r_374_sub_1_0)) + (r_375_transpose_0_2 * r_374_sub_2_0));
  double r_376_mul_1_0 = (((r_375_transpose_1_0 * r_374_sub_0_0) + (r_375_transpose_1_1 * r_374_sub_1_0)) + (r_375_transpose_1_2 * r_374_sub_2_0));
  double r_376_mul_2_0 = (((r_375_transpose_2_0 * r_374_sub_0_0) + (r_375_transpose_2_1 * r_374_sub_1_0)) + (r_375_transpose_2_2 * r_374_sub_2_0));
  double r_377_mul_0_0 = (((r_375_transpose_0_0 * r_372_0_0) + (r_375_transpose_0_1 * r_372_1_0)) + (r_375_transpose_0_2 * r_372_2_0));
  double r_377_mul_1_0 = (((r_375_transpose_1_0 * r_372_0_0) + (r_375_transpose_1_1 * r_372_1_0)) + (r_375_transpose_1_2 * r_372_2_0));
  double r_377_mul_2_0 = (((r_375_transpose_2_0 * r_372_0_0) + (r_375_transpose_2_1 * r_372_1_0)) + (r_375_transpose_2_2 * r_372_2_0));
  double r_378_scalar_0_0 = r_376_mul_0_0;
  double r_379_scalar_0_0 = r_376_mul_1_0;
  double r_380_scalar_0_0 = r_376_mul_2_0;
  double r_381_scalar_0_0 = r_377_mul_0_0;
  double r_382_scalar_0_0 = r_377_mul_1_0;
  double r_383_scalar_0_0 = r_377_mul_2_0;
  double r_384_0_0 = r_378_scalar_0_0;
  double r_384_1_0 = r_379_scalar_0_0;
  double r_384_2_0 = r_380_scalar_0_0;
  double r_384_3_0 = r_381_scalar_0_0;
  double r_384_4_0 = r_382_scalar_0_0;
  double r_384_5_0 = r_383_scalar_0_0;
  double act_inv_2_0_0 = r_384_0_0;
  double act_inv_2_1_0 = r_384_1_0;
  double act_inv_2_2_0 = r_384_2_0;
  double act_inv_2_3_0 = r_384_3_0;
  double act_inv_2_4_0 = r_384_4_0;
  double act_inv_2_5_0 = r_384_5_0;
  double r_385_add_0_0 = (r_364_0_0 + act_inv_2_0_0);
  double r_385_add_1_0 = (r_364_1_0 + act_inv_2_1_0);
  double r_385_add_2_0 = (r_364_2_0 + act_inv_2_2_0);
  double r_385_add_3_0 = (r_364_3_0 + act_inv_2_3_0);
  double r_385_add_4_0 = (r_364_4_0 + act_inv_2_4_0);
  double r_385_add_5_0 = (r_364_5_0 + act_inv_2_5_0);
  double r_386_scalar_0_0 = qcos_3_0;
  double r_387_scalar_0_0 = qsin_3_0;
  double r_388_matrix_negate_0_0 = -(r_387_scalar_0_0);
  double r_389_0_0 = 0;
  double r_390_scalar_0_0 = qsin_3_0;
  double r_391_scalar_0_0 = qcos_3_0;
  double r_392_0_0 = 0;
  double r_393_0_0 = 0;
  double r_394_0_0 = 0;
  double r_395_0_0 = 1;
  double r_396_0_0 = r_386_scalar_0_0;
  double r_396_0_1 = r_388_matrix_negate_0_0;
  double r_396_0_2 = r_389_0_0;
  double r_396_1_0 = r_390_scalar_0_0;
  double r_396_1_1 = r_391_scalar_0_0;
  double r_396_1_2 = r_392_0_0;
  double r_396_2_0 = r_393_0_0;
  double r_396_2_1 = r_394_0_0;
  double r_396_2_2 = r_395_0_0;
  double r_397_0_0 = 1;
  double r_398_0_0 = 0;
  double r_399_0_0 = 1;
  double r_400_0_0 = 0;
  double r_401_0_0 = 1;
  double r_402_0_0 = 0;
  double r_403_mul_0_0 = (r_401_0_0 * r_399_0_0);
  double r_404_mul_0_0 = (r_401_0_0 * r_400_0_0);
  double r_405_mul_0_0 = (r_404_mul_0_0 * r_398_0_0);
  double r_406_mul_0_0 = (r_402_0_0 * r_397_0_0);
  double r_407_sub_0_0 = (r_405_mul_0_0 - r_406_mul_0_0);
  double r_408_mul_0_0 = (r_401_0_0 * r_400_0_0);
  double r_409_mul_0_0 = (r_408_mul_0_0 * r_397_0_0);
  double r_410_mul_0_0 = (r_402_0_0 * r_398_0_0);
  double r_411_add_0_0 = (r_409_mul_0_0 + r_410_mul_0_0);
  double r_412_mul_0_0 = (r_402_0_0 * r_399_0_0);
  double r_413_mul_0_0 = (r_402_0_0 * r_400_0_0);
  double r_414_mul_0_0 = (r_413_mul_0_0 * r_398_0_0);
  double r_415_mul_0_0 = (r_401_0_0 * r_397_0_0);
  double r_416_add_0_0 = (r_414_mul_0_0 + r_415_mul_0_0);
  double r_417_mul_0_0 = (r_402_0_0 * r_400_0_0);
  double r_418_mul_0_0 = (r_417_mul_0_0 * r_397_0_0);
  double r_419_mul_0_0 = (r_401_0_0 * r_398_0_0);
  double r_420_sub_0_0 = (r_418_mul_0_0 - r_419_mul_0_0);
  double r_421_matrix_negate_0_0 = -(r_400_0_0);
  double r_422_mul_0_0 = (r_399_0_0 * r_398_0_0);
  double r_423_mul_0_0 = (r_399_0_0 * r_397_0_0);
  double r_424_0_0 = r_403_mul_0_0;
  double r_424_0_1 = r_407_sub_0_0;
  double r_424_0_2 = r_411_add_0_0;
  double r_424_1_0 = r_412_mul_0_0;
  double r_424_1_1 = r_416_add_0_0;
  double r_424_1_2 = r_420_sub_0_0;
  double r_424_2_0 = r_421_matrix_negate_0_0;
  double r_424_2_1 = r_422_mul_0_0;
  double r_424_2_2 = r_423_mul_0_0;
  double r_425_mul_0_0 = (((r_424_0_0 * r_396_0_0) + (r_424_0_1 * r_396_1_0)) + (r_424_0_2 * r_396_2_0));
  double r_425_mul_0_1 = (((r_424_0_0 * r_396_0_1) + (r_424_0_1 * r_396_1_1)) + (r_424_0_2 * r_396_2_1));
  double r_425_mul_0_2 = (((r_424_0_0 * r_396_0_2) + (r_424_0_1 * r_396_1_2)) + (r_424_0_2 * r_396_2_2));
  double r_425_mul_1_0 = (((r_424_1_0 * r_396_0_0) + (r_424_1_1 * r_396_1_0)) + (r_424_1_2 * r_396_2_0));
  double r_425_mul_1_1 = (((r_424_1_0 * r_396_0_1) + (r_424_1_1 * r_396_1_1)) + (r_424_1_2 * r_396_2_1));
  double r_425_mul_1_2 = (((r_424_1_0 * r_396_0_2) + (r_424_1_1 * r_396_1_2)) + (r_424_1_2 * r_396_2_2));
  double r_425_mul_2_0 = (((r_424_2_0 * r_396_0_0) + (r_424_2_1 * r_396_1_0)) + (r_424_2_2 * r_396_2_0));
  double r_425_mul_2_1 = (((r_424_2_0 * r_396_0_1) + (r_424_2_1 * r_396_1_1)) + (r_424_2_2 * r_396_2_1));
  double r_425_mul_2_2 = (((r_424_2_0 * r_396_0_2) + (r_424_2_1 * r_396_1_2)) + (r_424_2_2 * r_396_2_2));
  double limi_rotation_3_0_0 = r_425_mul_0_0;
  double limi_rotation_3_0_1 = r_425_mul_0_1;
  double limi_rotation_3_0_2 = r_425_mul_0_2;
  double limi_rotation_3_1_0 = r_425_mul_1_0;
  double limi_rotation_3_1_1 = r_425_mul_1_1;
  double limi_rotation_3_1_2 = r_425_mul_1_2;
  double limi_rotation_3_2_0 = r_425_mul_2_0;
  double limi_rotation_3_2_1 = r_425_mul_2_1;
  double limi_rotation_3_2_2 = r_425_mul_2_2;
  double r_426_mul_0_0 = (((r_285_mul_0_0 * limi_rotation_3_0_0) + (r_285_mul_0_1 * limi_rotation_3_1_0)) + (r_285_mul_0_2 * limi_rotation_3_2_0));
  double r_426_mul_0_1 = (((r_285_mul_0_0 * limi_rotation_3_0_1) + (r_285_mul_0_1 * limi_rotation_3_1_1)) + (r_285_mul_0_2 * limi_rotation_3_2_1));
  double r_426_mul_0_2 = (((r_285_mul_0_0 * limi_rotation_3_0_2) + (r_285_mul_0_1 * limi_rotation_3_1_2)) + (r_285_mul_0_2 * limi_rotation_3_2_2));
  double r_426_mul_1_0 = (((r_285_mul_1_0 * limi_rotation_3_0_0) + (r_285_mul_1_1 * limi_rotation_3_1_0)) + (r_285_mul_1_2 * limi_rotation_3_2_0));
  double r_426_mul_1_1 = (((r_285_mul_1_0 * limi_rotation_3_0_1) + (r_285_mul_1_1 * limi_rotation_3_1_1)) + (r_285_mul_1_2 * limi_rotation_3_2_1));
  double r_426_mul_1_2 = (((r_285_mul_1_0 * limi_rotation_3_0_2) + (r_285_mul_1_1 * limi_rotation_3_1_2)) + (r_285_mul_1_2 * limi_rotation_3_2_2));
  double r_426_mul_2_0 = (((r_285_mul_2_0 * limi_rotation_3_0_0) + (r_285_mul_2_1 * limi_rotation_3_1_0)) + (r_285_mul_2_2 * limi_rotation_3_2_0));
  double r_426_mul_2_1 = (((r_285_mul_2_0 * limi_rotation_3_0_1) + (r_285_mul_2_1 * limi_rotation_3_1_1)) + (r_285_mul_2_2 * limi_rotation_3_2_1));
  double r_426_mul_2_2 = (((r_285_mul_2_0 * limi_rotation_3_0_2) + (r_285_mul_2_1 * limi_rotation_3_1_2)) + (r_285_mul_2_2 * limi_rotation_3_2_2));
  double r_427_mul_0_0 = (((r_285_mul_0_0 * limi_translation_3_0_0) + (r_285_mul_0_1 * limi_translation_3_1_0)) + (r_285_mul_0_2 * limi_translation_3_2_0));
  double r_427_mul_1_0 = (((r_285_mul_1_0 * limi_translation_3_0_0) + (r_285_mul_1_1 * limi_translation_3_1_0)) + (r_285_mul_1_2 * limi_translation_3_2_0));
  double r_427_mul_2_0 = (((r_285_mul_2_0 * limi_translation_3_0_0) + (r_285_mul_2_1 * limi_translation_3_1_0)) + (r_285_mul_2_2 * limi_translation_3_2_0));
  double r_428_add_0_0 = (r_287_add_0_0 + r_427_mul_0_0);
  double r_428_add_1_0 = (r_287_add_1_0 + r_427_mul_1_0);
  double r_428_add_2_0 = (r_287_add_2_0 + r_427_mul_2_0);
  double r_429_0_0 = 0;
  double r_430_0_0 = 0;
  double r_431_0_0 = 0;
  double r_432_0_0 = 0;
  double r_433_0_0 = 0;
  double r_434_scalar_0_0 = v_3_0;
  double r_435_0_0 = r_429_0_0;
  double r_435_1_0 = r_430_0_0;
  double r_435_2_0 = r_431_0_0;
  double r_435_3_0 = r_432_0_0;
  double r_435_4_0 = r_433_0_0;
  double r_435_5_0 = r_434_scalar_0_0;
  double r_436_scalar_0_0 = act_motion_inv_2_0_0;
  double r_437_scalar_0_0 = act_motion_inv_2_1_0;
  double r_438_scalar_0_0 = act_motion_inv_2_2_0;
  double r_439_0_0 = r_436_scalar_0_0;
  double r_439_1_0 = r_437_scalar_0_0;
  double r_439_2_0 = r_438_scalar_0_0;
  double r_440_scalar_0_0 = act_motion_inv_2_3_0;
  double r_441_scalar_0_0 = act_motion_inv_2_4_0;
  double r_442_scalar_0_0 = act_motion_inv_2_5_0;
  double r_443_0_0 = r_440_scalar_0_0;
  double r_443_1_0 = r_441_scalar_0_0;
  double r_443_2_0 = r_442_scalar_0_0;
  double r_444_scalar_0_0 = r_435_0_0;
  double r_445_scalar_0_0 = r_435_1_0;
  double r_446_scalar_0_0 = r_435_2_0;
  double r_447_0_0 = r_444_scalar_0_0;
  double r_447_1_0 = r_445_scalar_0_0;
  double r_447_2_0 = r_446_scalar_0_0;
  double r_448_scalar_0_0 = r_435_3_0;
  double r_449_scalar_0_0 = r_435_4_0;
  double r_450_scalar_0_0 = r_435_5_0;
  double r_451_0_0 = r_448_scalar_0_0;
  double r_451_1_0 = r_449_scalar_0_0;
  double r_451_2_0 = r_450_scalar_0_0;
  double r_452_vector_cross_0_0 = ((limi_translation_3_1_0 * r_443_2_0) - (limi_translation_3_2_0 * r_443_1_0));
  double r_452_vector_cross_1_0 = ((limi_translation_3_2_0 * r_443_0_0) - (limi_translation_3_0_0 * r_443_2_0));
  double r_452_vector_cross_2_0 = ((limi_translation_3_0_0 * r_443_1_0) - (limi_translation_3_1_0 * r_443_0_0));
  double r_453_sub_0_0 = (r_439_0_0 - r_452_vector_cross_0_0);
  double r_453_sub_1_0 = (r_439_1_0 - r_452_vector_cross_1_0);
  double r_453_sub_2_0 = (r_439_2_0 - r_452_vector_cross_2_0);
  double r_454_transpose_0_0 = limi_rotation_3_0_0;
  double r_454_transpose_0_1 = limi_rotation_3_1_0;
  double r_454_transpose_0_2 = limi_rotation_3_2_0;
  double r_454_transpose_1_0 = limi_rotation_3_0_1;
  double r_454_transpose_1_1 = limi_rotation_3_1_1;
  double r_454_transpose_1_2 = limi_rotation_3_2_1;
  double r_454_transpose_2_0 = limi_rotation_3_0_2;
  double r_454_transpose_2_1 = limi_rotation_3_1_2;
  double r_454_transpose_2_2 = limi_rotation_3_2_2;
  double r_455_mul_0_0 = (((r_454_transpose_0_0 * r_453_sub_0_0) + (r_454_transpose_0_1 * r_453_sub_1_0)) + (r_454_transpose_0_2 * r_453_sub_2_0));
  double r_455_mul_1_0 = (((r_454_transpose_1_0 * r_453_sub_0_0) + (r_454_transpose_1_1 * r_453_sub_1_0)) + (r_454_transpose_1_2 * r_453_sub_2_0));
  double r_455_mul_2_0 = (((r_454_transpose_2_0 * r_453_sub_0_0) + (r_454_transpose_2_1 * r_453_sub_1_0)) + (r_454_transpose_2_2 * r_453_sub_2_0));
  double r_456_add_0_0 = (r_447_0_0 + r_455_mul_0_0);
  double r_456_add_1_0 = (r_447_1_0 + r_455_mul_1_0);
  double r_456_add_2_0 = (r_447_2_0 + r_455_mul_2_0);
  double r_457_mul_0_0 = (((r_454_transpose_0_0 * r_443_0_0) + (r_454_transpose_0_1 * r_443_1_0)) + (r_454_transpose_0_2 * r_443_2_0));
  double r_457_mul_1_0 = (((r_454_transpose_1_0 * r_443_0_0) + (r_454_transpose_1_1 * r_443_1_0)) + (r_454_transpose_1_2 * r_443_2_0));
  double r_457_mul_2_0 = (((r_454_transpose_2_0 * r_443_0_0) + (r_454_transpose_2_1 * r_443_1_0)) + (r_454_transpose_2_2 * r_443_2_0));
  double r_458_add_0_0 = (r_451_0_0 + r_457_mul_0_0);
  double r_458_add_1_0 = (r_451_1_0 + r_457_mul_1_0);
  double r_458_add_2_0 = (r_451_2_0 + r_457_mul_2_0);
  double r_459_scalar_0_0 = r_456_add_0_0;
  double r_460_scalar_0_0 = r_456_add_1_0;
  double r_461_scalar_0_0 = r_456_add_2_0;
  double r_462_scalar_0_0 = r_458_add_0_0;
  double r_463_scalar_0_0 = r_458_add_1_0;
  double r_464_scalar_0_0 = r_458_add_2_0;
  double r_465_0_0 = r_459_scalar_0_0;
  double r_465_1_0 = r_460_scalar_0_0;
  double r_465_2_0 = r_461_scalar_0_0;
  double r_465_3_0 = r_462_scalar_0_0;
  double r_465_4_0 = r_463_scalar_0_0;
  double r_465_5_0 = r_464_scalar_0_0;
  double act_motion_inv_3_0_0 = r_465_0_0;
  double act_motion_inv_3_1_0 = r_465_1_0;
  double act_motion_inv_3_2_0 = r_465_2_0;
  double act_motion_inv_3_3_0 = r_465_3_0;
  double act_motion_inv_3_4_0 = r_465_4_0;
  double act_motion_inv_3_5_0 = r_465_5_0;
  double r_466_scalar_0_0 = v_3_0;
  double r_467_matrix_negate_0_0 = -(r_466_scalar_0_0);
  double r_468_scalar_0_0 = act_motion_inv_3_0_0;
  double r_469_scalar_0_0 = act_motion_inv_3_1_0;
  double r_470_scalar_0_0 = act_motion_inv_3_2_0;
  double r_471_0_0 = r_468_scalar_0_0;
  double r_471_1_0 = r_469_scalar_0_0;
  double r_471_2_0 = r_470_scalar_0_0;
  double r_472_scalar_0_0 = act_motion_inv_3_3_0;
  double r_473_scalar_0_0 = act_motion_inv_3_4_0;
  double r_474_scalar_0_0 = act_motion_inv_3_5_0;
  double r_475_0_0 = r_472_scalar_0_0;
  double r_475_1_0 = r_473_scalar_0_0;
  double r_475_2_0 = r_474_scalar_0_0;
  double r_476_matrix_negate_0_0 = -(r_467_matrix_negate_0_0);
  double r_477_scalar_0_0 = r_471_1_0;
  double r_478_mul_0_0 = (r_476_matrix_negate_0_0 * r_477_scalar_0_0);
  double r_479_scalar_0_0 = r_471_0_0;
  double r_480_mul_0_0 = (r_467_matrix_negate_0_0 * r_479_scalar_0_0);
  double r_481_0_0 = 0;
  double r_482_0_0 = r_478_mul_0_0;
  double r_482_1_0 = r_480_mul_0_0;
  double r_482_2_0 = r_481_0_0;
  double alpha_cross_linear_3_0_0 = r_482_0_0;
  double alpha_cross_linear_3_1_0 = r_482_1_0;
  double alpha_cross_linear_3_2_0 = r_482_2_0;
  double r_483_matrix_negate_0_0 = -(r_467_matrix_negate_0_0);
  double r_484_scalar_0_0 = r_475_1_0;
  double r_485_mul_0_0 = (r_483_matrix_negate_0_0 * r_484_scalar_0_0);
  double r_486_scalar_0_0 = r_475_0_0;
  double r_487_mul_0_0 = (r_467_matrix_negate_0_0 * r_486_scalar_0_0);
  double r_488_0_0 = 0;
  double r_489_0_0 = r_485_mul_0_0;
  double r_489_1_0 = r_487_mul_0_0;
  double r_489_2_0 = r_488_0_0;
  double alpha_cross_angular_3_0_0 = r_489_0_0;
  double alpha_cross_angular_3_1_0 = r_489_1_0;
  double alpha_cross_angular_3_2_0 = r_489_2_0;
  double r_490_scalar_0_0 = alpha_cross_linear_3_0_0;
  double r_491_scalar_0_0 = alpha_cross_linear_3_1_0;
  double r_492_scalar_0_0 = alpha_cross_linear_3_2_0;
  double r_493_scalar_0_0 = alpha_cross_angular_3_0_0;
  double r_494_scalar_0_0 = alpha_cross_angular_3_1_0;
  double r_495_scalar_0_0 = alpha_cross_angular_3_2_0;
  double r_496_0_0 = r_490_scalar_0_0;
  double r_496_1_0 = r_491_scalar_0_0;
  double r_496_2_0 = r_492_scalar_0_0;
  double r_496_3_0 = r_493_scalar_0_0;
  double r_496_4_0 = r_494_scalar_0_0;
  double r_496_5_0 = r_495_scalar_0_0;
  double alpha_cross_3_0_0 = r_496_0_0;
  double alpha_cross_3_1_0 = r_496_1_0;
  double alpha_cross_3_2_0 = r_496_2_0;
  double alpha_cross_3_3_0 = r_496_3_0;
  double alpha_cross_3_4_0 = r_496_4_0;
  double alpha_cross_3_5_0 = r_496_5_0;
  double r_497_scalar_0_0 = a_3_0;
  double r_498_scalar_0_0 = alpha_cross_3_5_0;
  double r_499_add_0_0 = (r_497_scalar_0_0 + r_498_scalar_0_0);
  double r_500_scalar_0_0 = alpha_cross_3_0_0;
  double r_501_scalar_0_0 = alpha_cross_3_1_0;
  double r_502_scalar_0_0 = alpha_cross_3_2_0;
  double r_503_scalar_0_0 = alpha_cross_3_3_0;
  double r_504_scalar_0_0 = alpha_cross_3_4_0;
  double r_505_0_0 = r_500_scalar_0_0;
  double r_505_1_0 = r_501_scalar_0_0;
  double r_505_2_0 = r_502_scalar_0_0;
  double r_505_3_0 = r_503_scalar_0_0;
  double r_505_4_0 = r_504_scalar_0_0;
  double r_505_5_0 = r_499_add_0_0;
  double r_506_scalar_0_0 = r_385_add_0_0;
  double r_507_scalar_0_0 = r_385_add_1_0;
  double r_508_scalar_0_0 = r_385_add_2_0;
  double r_509_0_0 = r_506_scalar_0_0;
  double r_509_1_0 = r_507_scalar_0_0;
  double r_509_2_0 = r_508_scalar_0_0;
  double r_510_scalar_0_0 = r_385_add_3_0;
  double r_511_scalar_0_0 = r_385_add_4_0;
  double r_512_scalar_0_0 = r_385_add_5_0;
  double r_513_0_0 = r_510_scalar_0_0;
  double r_513_1_0 = r_511_scalar_0_0;
  double r_513_2_0 = r_512_scalar_0_0;
  double r_514_vector_cross_0_0 = ((limi_translation_3_1_0 * r_513_2_0) - (limi_translation_3_2_0 * r_513_1_0));
  double r_514_vector_cross_1_0 = ((limi_translation_3_2_0 * r_513_0_0) - (limi_translation_3_0_0 * r_513_2_0));
  double r_514_vector_cross_2_0 = ((limi_translation_3_0_0 * r_513_1_0) - (limi_translation_3_1_0 * r_513_0_0));
  double r_515_sub_0_0 = (r_509_0_0 - r_514_vector_cross_0_0);
  double r_515_sub_1_0 = (r_509_1_0 - r_514_vector_cross_1_0);
  double r_515_sub_2_0 = (r_509_2_0 - r_514_vector_cross_2_0);
  double r_516_transpose_0_0 = limi_rotation_3_0_0;
  double r_516_transpose_0_1 = limi_rotation_3_1_0;
  double r_516_transpose_0_2 = limi_rotation_3_2_0;
  double r_516_transpose_1_0 = limi_rotation_3_0_1;
  double r_516_transpose_1_1 = limi_rotation_3_1_1;
  double r_516_transpose_1_2 = limi_rotation_3_2_1;
  double r_516_transpose_2_0 = limi_rotation_3_0_2;
  double r_516_transpose_2_1 = limi_rotation_3_1_2;
  double r_516_transpose_2_2 = limi_rotation_3_2_2;
  double r_517_mul_0_0 = (((r_516_transpose_0_0 * r_515_sub_0_0) + (r_516_transpose_0_1 * r_515_sub_1_0)) + (r_516_transpose_0_2 * r_515_sub_2_0));
  double r_517_mul_1_0 = (((r_516_transpose_1_0 * r_515_sub_0_0) + (r_516_transpose_1_1 * r_515_sub_1_0)) + (r_516_transpose_1_2 * r_515_sub_2_0));
  double r_517_mul_2_0 = (((r_516_transpose_2_0 * r_515_sub_0_0) + (r_516_transpose_2_1 * r_515_sub_1_0)) + (r_516_transpose_2_2 * r_515_sub_2_0));
  double r_518_mul_0_0 = (((r_516_transpose_0_0 * r_513_0_0) + (r_516_transpose_0_1 * r_513_1_0)) + (r_516_transpose_0_2 * r_513_2_0));
  double r_518_mul_1_0 = (((r_516_transpose_1_0 * r_513_0_0) + (r_516_transpose_1_1 * r_513_1_0)) + (r_516_transpose_1_2 * r_513_2_0));
  double r_518_mul_2_0 = (((r_516_transpose_2_0 * r_513_0_0) + (r_516_transpose_2_1 * r_513_1_0)) + (r_516_transpose_2_2 * r_513_2_0));
  double r_519_scalar_0_0 = r_517_mul_0_0;
  double r_520_scalar_0_0 = r_517_mul_1_0;
  double r_521_scalar_0_0 = r_517_mul_2_0;
  double r_522_scalar_0_0 = r_518_mul_0_0;
  double r_523_scalar_0_0 = r_518_mul_1_0;
  double r_524_scalar_0_0 = r_518_mul_2_0;
  double r_525_0_0 = r_519_scalar_0_0;
  double r_525_1_0 = r_520_scalar_0_0;
  double r_525_2_0 = r_521_scalar_0_0;
  double r_525_3_0 = r_522_scalar_0_0;
  double r_525_4_0 = r_523_scalar_0_0;
  double r_525_5_0 = r_524_scalar_0_0;
  double act_inv_3_0_0 = r_525_0_0;
  double act_inv_3_1_0 = r_525_1_0;
  double act_inv_3_2_0 = r_525_2_0;
  double act_inv_3_3_0 = r_525_3_0;
  double act_inv_3_4_0 = r_525_4_0;
  double act_inv_3_5_0 = r_525_5_0;
  double r_526_add_0_0 = (r_505_0_0 + act_inv_3_0_0);
  double r_526_add_1_0 = (r_505_1_0 + act_inv_3_1_0);
  double r_526_add_2_0 = (r_505_2_0 + act_inv_3_2_0);
  double r_526_add_3_0 = (r_505_3_0 + act_inv_3_3_0);
  double r_526_add_4_0 = (r_505_4_0 + act_inv_3_4_0);
  double r_526_add_5_0 = (r_505_5_0 + act_inv_3_5_0);
  double r_527_scalar_0_0 = qcos_4_0;
  double r_528_scalar_0_0 = qsin_4_0;
  double r_529_matrix_negate_0_0 = -(r_528_scalar_0_0);
  double r_530_0_0 = 0;
  double r_531_scalar_0_0 = qsin_4_0;
  double r_532_scalar_0_0 = qcos_4_0;
  double r_533_0_0 = 0;
  double r_534_0_0 = 0;
  double r_535_0_0 = 0;
  double r_536_0_0 = 1;
  double r_537_0_0 = r_527_scalar_0_0;
  double r_537_0_1 = r_529_matrix_negate_0_0;
  double r_537_0_2 = r_530_0_0;
  double r_537_1_0 = r_531_scalar_0_0;
  double r_537_1_1 = r_532_scalar_0_0;
  double r_537_1_2 = r_533_0_0;
  double r_537_2_0 = r_534_0_0;
  double r_537_2_1 = r_535_0_0;
  double r_537_2_2 = r_536_0_0;
  double r_538_0_0 = 0;
  double r_539_0_0 = 1;
  double r_540_0_0 = 0;
  double r_541_0_0 = 1;
  double r_542_0_0 = 1;
  double r_543_0_0 = 0;
  double r_544_mul_0_0 = (r_542_0_0 * r_540_0_0);
  double r_545_mul_0_0 = (r_542_0_0 * r_541_0_0);
  double r_546_mul_0_0 = (r_545_mul_0_0 * r_539_0_0);
  double r_547_mul_0_0 = (r_543_0_0 * r_538_0_0);
  double r_548_sub_0_0 = (r_546_mul_0_0 - r_547_mul_0_0);
  double r_549_mul_0_0 = (r_542_0_0 * r_541_0_0);
  double r_550_mul_0_0 = (r_549_mul_0_0 * r_538_0_0);
  double r_551_mul_0_0 = (r_543_0_0 * r_539_0_0);
  double r_552_add_0_0 = (r_550_mul_0_0 + r_551_mul_0_0);
  double r_553_mul_0_0 = (r_543_0_0 * r_540_0_0);
  double r_554_mul_0_0 = (r_543_0_0 * r_541_0_0);
  double r_555_mul_0_0 = (r_554_mul_0_0 * r_539_0_0);
  double r_556_mul_0_0 = (r_542_0_0 * r_538_0_0);
  double r_557_add_0_0 = (r_555_mul_0_0 + r_556_mul_0_0);
  double r_558_mul_0_0 = (r_543_0_0 * r_541_0_0);
  double r_559_mul_0_0 = (r_558_mul_0_0 * r_538_0_0);
  double r_560_mul_0_0 = (r_542_0_0 * r_539_0_0);
  double r_561_sub_0_0 = (r_559_mul_0_0 - r_560_mul_0_0);
  double r_562_matrix_negate_0_0 = -(r_541_0_0);
  double r_563_mul_0_0 = (r_540_0_0 * r_539_0_0);
  double r_564_mul_0_0 = (r_540_0_0 * r_538_0_0);
  double r_565_0_0 = r_544_mul_0_0;
  double r_565_0_1 = r_548_sub_0_0;
  double r_565_0_2 = r_552_add_0_0;
  double r_565_1_0 = r_553_mul_0_0;
  double r_565_1_1 = r_557_add_0_0;
  double r_565_1_2 = r_561_sub_0_0;
  double r_565_2_0 = r_562_matrix_negate_0_0;
  double r_565_2_1 = r_563_mul_0_0;
  double r_565_2_2 = r_564_mul_0_0;
  double r_566_mul_0_0 = (((r_565_0_0 * r_537_0_0) + (r_565_0_1 * r_537_1_0)) + (r_565_0_2 * r_537_2_0));
  double r_566_mul_0_1 = (((r_565_0_0 * r_537_0_1) + (r_565_0_1 * r_537_1_1)) + (r_565_0_2 * r_537_2_1));
  double r_566_mul_0_2 = (((r_565_0_0 * r_537_0_2) + (r_565_0_1 * r_537_1_2)) + (r_565_0_2 * r_537_2_2));
  double r_566_mul_1_0 = (((r_565_1_0 * r_537_0_0) + (r_565_1_1 * r_537_1_0)) + (r_565_1_2 * r_537_2_0));
  double r_566_mul_1_1 = (((r_565_1_0 * r_537_0_1) + (r_565_1_1 * r_537_1_1)) + (r_565_1_2 * r_537_2_1));
  double r_566_mul_1_2 = (((r_565_1_0 * r_537_0_2) + (r_565_1_1 * r_537_1_2)) + (r_565_1_2 * r_537_2_2));
  double r_566_mul_2_0 = (((r_565_2_0 * r_537_0_0) + (r_565_2_1 * r_537_1_0)) + (r_565_2_2 * r_537_2_0));
  double r_566_mul_2_1 = (((r_565_2_0 * r_537_0_1) + (r_565_2_1 * r_537_1_1)) + (r_565_2_2 * r_537_2_1));
  double r_566_mul_2_2 = (((r_565_2_0 * r_537_0_2) + (r_565_2_1 * r_537_1_2)) + (r_565_2_2 * r_537_2_2));
  double limi_rotation_4_0_0 = r_566_mul_0_0;
  double limi_rotation_4_0_1 = r_566_mul_0_1;
  double limi_rotation_4_0_2 = r_566_mul_0_2;
  double limi_rotation_4_1_0 = r_566_mul_1_0;
  double limi_rotation_4_1_1 = r_566_mul_1_1;
  double limi_rotation_4_1_2 = r_566_mul_1_2;
  double limi_rotation_4_2_0 = r_566_mul_2_0;
  double limi_rotation_4_2_1 = r_566_mul_2_1;
  double limi_rotation_4_2_2 = r_566_mul_2_2;
  double r_567_mul_0_0 = (((r_426_mul_0_0 * limi_rotation_4_0_0) + (r_426_mul_0_1 * limi_rotation_4_1_0)) + (r_426_mul_0_2 * limi_rotation_4_2_0));
  double r_567_mul_0_1 = (((r_426_mul_0_0 * limi_rotation_4_0_1) + (r_426_mul_0_1 * limi_rotation_4_1_1)) + (r_426_mul_0_2 * limi_rotation_4_2_1));
  double r_567_mul_0_2 = (((r_426_mul_0_0 * limi_rotation_4_0_2) + (r_426_mul_0_1 * limi_rotation_4_1_2)) + (r_426_mul_0_2 * limi_rotation_4_2_2));
  double r_567_mul_1_0 = (((r_426_mul_1_0 * limi_rotation_4_0_0) + (r_426_mul_1_1 * limi_rotation_4_1_0)) + (r_426_mul_1_2 * limi_rotation_4_2_0));
  double r_567_mul_1_1 = (((r_426_mul_1_0 * limi_rotation_4_0_1) + (r_426_mul_1_1 * limi_rotation_4_1_1)) + (r_426_mul_1_2 * limi_rotation_4_2_1));
  double r_567_mul_1_2 = (((r_426_mul_1_0 * limi_rotation_4_0_2) + (r_426_mul_1_1 * limi_rotation_4_1_2)) + (r_426_mul_1_2 * limi_rotation_4_2_2));
  double r_567_mul_2_0 = (((r_426_mul_2_0 * limi_rotation_4_0_0) + (r_426_mul_2_1 * limi_rotation_4_1_0)) + (r_426_mul_2_2 * limi_rotation_4_2_0));
  double r_567_mul_2_1 = (((r_426_mul_2_0 * limi_rotation_4_0_1) + (r_426_mul_2_1 * limi_rotation_4_1_1)) + (r_426_mul_2_2 * limi_rotation_4_2_1));
  double r_567_mul_2_2 = (((r_426_mul_2_0 * limi_rotation_4_0_2) + (r_426_mul_2_1 * limi_rotation_4_1_2)) + (r_426_mul_2_2 * limi_rotation_4_2_2));
  double r_568_mul_0_0 = (((r_426_mul_0_0 * limi_translation_4_0_0) + (r_426_mul_0_1 * limi_translation_4_1_0)) + (r_426_mul_0_2 * limi_translation_4_2_0));
  double r_568_mul_1_0 = (((r_426_mul_1_0 * limi_translation_4_0_0) + (r_426_mul_1_1 * limi_translation_4_1_0)) + (r_426_mul_1_2 * limi_translation_4_2_0));
  double r_568_mul_2_0 = (((r_426_mul_2_0 * limi_translation_4_0_0) + (r_426_mul_2_1 * limi_translation_4_1_0)) + (r_426_mul_2_2 * limi_translation_4_2_0));
  double r_569_add_0_0 = (r_428_add_0_0 + r_568_mul_0_0);
  double r_569_add_1_0 = (r_428_add_1_0 + r_568_mul_1_0);
  double r_569_add_2_0 = (r_428_add_2_0 + r_568_mul_2_0);
  double r_570_0_0 = 0;
  double r_571_0_0 = 0;
  double r_572_0_0 = 0;
  double r_573_0_0 = 0;
  double r_574_0_0 = 0;
  double r_575_scalar_0_0 = v_4_0;
  double r_576_0_0 = r_570_0_0;
  double r_576_1_0 = r_571_0_0;
  double r_576_2_0 = r_572_0_0;
  double r_576_3_0 = r_573_0_0;
  double r_576_4_0 = r_574_0_0;
  double r_576_5_0 = r_575_scalar_0_0;
  double r_577_scalar_0_0 = act_motion_inv_3_0_0;
  double r_578_scalar_0_0 = act_motion_inv_3_1_0;
  double r_579_scalar_0_0 = act_motion_inv_3_2_0;
  double r_580_0_0 = r_577_scalar_0_0;
  double r_580_1_0 = r_578_scalar_0_0;
  double r_580_2_0 = r_579_scalar_0_0;
  double r_581_scalar_0_0 = act_motion_inv_3_3_0;
  double r_582_scalar_0_0 = act_motion_inv_3_4_0;
  double r_583_scalar_0_0 = act_motion_inv_3_5_0;
  double r_584_0_0 = r_581_scalar_0_0;
  double r_584_1_0 = r_582_scalar_0_0;
  double r_584_2_0 = r_583_scalar_0_0;
  double r_585_scalar_0_0 = r_576_0_0;
  double r_586_scalar_0_0 = r_576_1_0;
  double r_587_scalar_0_0 = r_576_2_0;
  double r_588_0_0 = r_585_scalar_0_0;
  double r_588_1_0 = r_586_scalar_0_0;
  double r_588_2_0 = r_587_scalar_0_0;
  double r_589_scalar_0_0 = r_576_3_0;
  double r_590_scalar_0_0 = r_576_4_0;
  double r_591_scalar_0_0 = r_576_5_0;
  double r_592_0_0 = r_589_scalar_0_0;
  double r_592_1_0 = r_590_scalar_0_0;
  double r_592_2_0 = r_591_scalar_0_0;
  double r_593_vector_cross_0_0 = ((limi_translation_4_1_0 * r_584_2_0) - (limi_translation_4_2_0 * r_584_1_0));
  double r_593_vector_cross_1_0 = ((limi_translation_4_2_0 * r_584_0_0) - (limi_translation_4_0_0 * r_584_2_0));
  double r_593_vector_cross_2_0 = ((limi_translation_4_0_0 * r_584_1_0) - (limi_translation_4_1_0 * r_584_0_0));
  double r_594_sub_0_0 = (r_580_0_0 - r_593_vector_cross_0_0);
  double r_594_sub_1_0 = (r_580_1_0 - r_593_vector_cross_1_0);
  double r_594_sub_2_0 = (r_580_2_0 - r_593_vector_cross_2_0);
  double r_595_transpose_0_0 = limi_rotation_4_0_0;
  double r_595_transpose_0_1 = limi_rotation_4_1_0;
  double r_595_transpose_0_2 = limi_rotation_4_2_0;
  double r_595_transpose_1_0 = limi_rotation_4_0_1;
  double r_595_transpose_1_1 = limi_rotation_4_1_1;
  double r_595_transpose_1_2 = limi_rotation_4_2_1;
  double r_595_transpose_2_0 = limi_rotation_4_0_2;
  double r_595_transpose_2_1 = limi_rotation_4_1_2;
  double r_595_transpose_2_2 = limi_rotation_4_2_2;
  double r_596_mul_0_0 = (((r_595_transpose_0_0 * r_594_sub_0_0) + (r_595_transpose_0_1 * r_594_sub_1_0)) + (r_595_transpose_0_2 * r_594_sub_2_0));
  double r_596_mul_1_0 = (((r_595_transpose_1_0 * r_594_sub_0_0) + (r_595_transpose_1_1 * r_594_sub_1_0)) + (r_595_transpose_1_2 * r_594_sub_2_0));
  double r_596_mul_2_0 = (((r_595_transpose_2_0 * r_594_sub_0_0) + (r_595_transpose_2_1 * r_594_sub_1_0)) + (r_595_transpose_2_2 * r_594_sub_2_0));
  double r_597_add_0_0 = (r_588_0_0 + r_596_mul_0_0);
  double r_597_add_1_0 = (r_588_1_0 + r_596_mul_1_0);
  double r_597_add_2_0 = (r_588_2_0 + r_596_mul_2_0);
  double r_598_mul_0_0 = (((r_595_transpose_0_0 * r_584_0_0) + (r_595_transpose_0_1 * r_584_1_0)) + (r_595_transpose_0_2 * r_584_2_0));
  double r_598_mul_1_0 = (((r_595_transpose_1_0 * r_584_0_0) + (r_595_transpose_1_1 * r_584_1_0)) + (r_595_transpose_1_2 * r_584_2_0));
  double r_598_mul_2_0 = (((r_595_transpose_2_0 * r_584_0_0) + (r_595_transpose_2_1 * r_584_1_0)) + (r_595_transpose_2_2 * r_584_2_0));
  double r_599_add_0_0 = (r_592_0_0 + r_598_mul_0_0);
  double r_599_add_1_0 = (r_592_1_0 + r_598_mul_1_0);
  double r_599_add_2_0 = (r_592_2_0 + r_598_mul_2_0);
  double r_600_scalar_0_0 = r_597_add_0_0;
  double r_601_scalar_0_0 = r_597_add_1_0;
  double r_602_scalar_0_0 = r_597_add_2_0;
  double r_603_scalar_0_0 = r_599_add_0_0;
  double r_604_scalar_0_0 = r_599_add_1_0;
  double r_605_scalar_0_0 = r_599_add_2_0;
  double r_606_0_0 = r_600_scalar_0_0;
  double r_606_1_0 = r_601_scalar_0_0;
  double r_606_2_0 = r_602_scalar_0_0;
  double r_606_3_0 = r_603_scalar_0_0;
  double r_606_4_0 = r_604_scalar_0_0;
  double r_606_5_0 = r_605_scalar_0_0;
  double act_motion_inv_4_0_0 = r_606_0_0;
  double act_motion_inv_4_1_0 = r_606_1_0;
  double act_motion_inv_4_2_0 = r_606_2_0;
  double act_motion_inv_4_3_0 = r_606_3_0;
  double act_motion_inv_4_4_0 = r_606_4_0;
  double act_motion_inv_4_5_0 = r_606_5_0;
  double r_607_scalar_0_0 = v_4_0;
  double r_608_matrix_negate_0_0 = -(r_607_scalar_0_0);
  double r_609_scalar_0_0 = act_motion_inv_4_0_0;
  double r_610_scalar_0_0 = act_motion_inv_4_1_0;
  double r_611_scalar_0_0 = act_motion_inv_4_2_0;
  double r_612_0_0 = r_609_scalar_0_0;
  double r_612_1_0 = r_610_scalar_0_0;
  double r_612_2_0 = r_611_scalar_0_0;
  double r_613_scalar_0_0 = act_motion_inv_4_3_0;
  double r_614_scalar_0_0 = act_motion_inv_4_4_0;
  double r_615_scalar_0_0 = act_motion_inv_4_5_0;
  double r_616_0_0 = r_613_scalar_0_0;
  double r_616_1_0 = r_614_scalar_0_0;
  double r_616_2_0 = r_615_scalar_0_0;
  double r_617_matrix_negate_0_0 = -(r_608_matrix_negate_0_0);
  double r_618_scalar_0_0 = r_612_1_0;
  double r_619_mul_0_0 = (r_617_matrix_negate_0_0 * r_618_scalar_0_0);
  double r_620_scalar_0_0 = r_612_0_0;
  double r_621_mul_0_0 = (r_608_matrix_negate_0_0 * r_620_scalar_0_0);
  double r_622_0_0 = 0;
  double r_623_0_0 = r_619_mul_0_0;
  double r_623_1_0 = r_621_mul_0_0;
  double r_623_2_0 = r_622_0_0;
  double alpha_cross_linear_4_0_0 = r_623_0_0;
  double alpha_cross_linear_4_1_0 = r_623_1_0;
  double alpha_cross_linear_4_2_0 = r_623_2_0;
  double r_624_matrix_negate_0_0 = -(r_608_matrix_negate_0_0);
  double r_625_scalar_0_0 = r_616_1_0;
  double r_626_mul_0_0 = (r_624_matrix_negate_0_0 * r_625_scalar_0_0);
  double r_627_scalar_0_0 = r_616_0_0;
  double r_628_mul_0_0 = (r_608_matrix_negate_0_0 * r_627_scalar_0_0);
  double r_629_0_0 = 0;
  double r_630_0_0 = r_626_mul_0_0;
  double r_630_1_0 = r_628_mul_0_0;
  double r_630_2_0 = r_629_0_0;
  double alpha_cross_angular_4_0_0 = r_630_0_0;
  double alpha_cross_angular_4_1_0 = r_630_1_0;
  double alpha_cross_angular_4_2_0 = r_630_2_0;
  double r_631_scalar_0_0 = alpha_cross_linear_4_0_0;
  double r_632_scalar_0_0 = alpha_cross_linear_4_1_0;
  double r_633_scalar_0_0 = alpha_cross_linear_4_2_0;
  double r_634_scalar_0_0 = alpha_cross_angular_4_0_0;
  double r_635_scalar_0_0 = alpha_cross_angular_4_1_0;
  double r_636_scalar_0_0 = alpha_cross_angular_4_2_0;
  double r_637_0_0 = r_631_scalar_0_0;
  double r_637_1_0 = r_632_scalar_0_0;
  double r_637_2_0 = r_633_scalar_0_0;
  double r_637_3_0 = r_634_scalar_0_0;
  double r_637_4_0 = r_635_scalar_0_0;
  double r_637_5_0 = r_636_scalar_0_0;
  double alpha_cross_4_0_0 = r_637_0_0;
  double alpha_cross_4_1_0 = r_637_1_0;
  double alpha_cross_4_2_0 = r_637_2_0;
  double alpha_cross_4_3_0 = r_637_3_0;
  double alpha_cross_4_4_0 = r_637_4_0;
  double alpha_cross_4_5_0 = r_637_5_0;
  double r_638_scalar_0_0 = a_4_0;
  double r_639_scalar_0_0 = alpha_cross_4_5_0;
  double r_640_add_0_0 = (r_638_scalar_0_0 + r_639_scalar_0_0);
  double r_641_scalar_0_0 = alpha_cross_4_0_0;
  double r_642_scalar_0_0 = alpha_cross_4_1_0;
  double r_643_scalar_0_0 = alpha_cross_4_2_0;
  double r_644_scalar_0_0 = alpha_cross_4_3_0;
  double r_645_scalar_0_0 = alpha_cross_4_4_0;
  double r_646_0_0 = r_641_scalar_0_0;
  double r_646_1_0 = r_642_scalar_0_0;
  double r_646_2_0 = r_643_scalar_0_0;
  double r_646_3_0 = r_644_scalar_0_0;
  double r_646_4_0 = r_645_scalar_0_0;
  double r_646_5_0 = r_640_add_0_0;
  double r_647_scalar_0_0 = r_526_add_0_0;
  double r_648_scalar_0_0 = r_526_add_1_0;
  double r_649_scalar_0_0 = r_526_add_2_0;
  double r_650_0_0 = r_647_scalar_0_0;
  double r_650_1_0 = r_648_scalar_0_0;
  double r_650_2_0 = r_649_scalar_0_0;
  double r_651_scalar_0_0 = r_526_add_3_0;
  double r_652_scalar_0_0 = r_526_add_4_0;
  double r_653_scalar_0_0 = r_526_add_5_0;
  double r_654_0_0 = r_651_scalar_0_0;
  double r_654_1_0 = r_652_scalar_0_0;
  double r_654_2_0 = r_653_scalar_0_0;
  double r_655_vector_cross_0_0 = ((limi_translation_4_1_0 * r_654_2_0) - (limi_translation_4_2_0 * r_654_1_0));
  double r_655_vector_cross_1_0 = ((limi_translation_4_2_0 * r_654_0_0) - (limi_translation_4_0_0 * r_654_2_0));
  double r_655_vector_cross_2_0 = ((limi_translation_4_0_0 * r_654_1_0) - (limi_translation_4_1_0 * r_654_0_0));
  double r_656_sub_0_0 = (r_650_0_0 - r_655_vector_cross_0_0);
  double r_656_sub_1_0 = (r_650_1_0 - r_655_vector_cross_1_0);
  double r_656_sub_2_0 = (r_650_2_0 - r_655_vector_cross_2_0);
  double r_657_transpose_0_0 = limi_rotation_4_0_0;
  double r_657_transpose_0_1 = limi_rotation_4_1_0;
  double r_657_transpose_0_2 = limi_rotation_4_2_0;
  double r_657_transpose_1_0 = limi_rotation_4_0_1;
  double r_657_transpose_1_1 = limi_rotation_4_1_1;
  double r_657_transpose_1_2 = limi_rotation_4_2_1;
  double r_657_transpose_2_0 = limi_rotation_4_0_2;
  double r_657_transpose_2_1 = limi_rotation_4_1_2;
  double r_657_transpose_2_2 = limi_rotation_4_2_2;
  double r_658_mul_0_0 = (((r_657_transpose_0_0 * r_656_sub_0_0) + (r_657_transpose_0_1 * r_656_sub_1_0)) + (r_657_transpose_0_2 * r_656_sub_2_0));
  double r_658_mul_1_0 = (((r_657_transpose_1_0 * r_656_sub_0_0) + (r_657_transpose_1_1 * r_656_sub_1_0)) + (r_657_transpose_1_2 * r_656_sub_2_0));
  double r_658_mul_2_0 = (((r_657_transpose_2_0 * r_656_sub_0_0) + (r_657_transpose_2_1 * r_656_sub_1_0)) + (r_657_transpose_2_2 * r_656_sub_2_0));
  double r_659_mul_0_0 = (((r_657_transpose_0_0 * r_654_0_0) + (r_657_transpose_0_1 * r_654_1_0)) + (r_657_transpose_0_2 * r_654_2_0));
  double r_659_mul_1_0 = (((r_657_transpose_1_0 * r_654_0_0) + (r_657_transpose_1_1 * r_654_1_0)) + (r_657_transpose_1_2 * r_654_2_0));
  double r_659_mul_2_0 = (((r_657_transpose_2_0 * r_654_0_0) + (r_657_transpose_2_1 * r_654_1_0)) + (r_657_transpose_2_2 * r_654_2_0));
  double r_660_scalar_0_0 = r_658_mul_0_0;
  double r_661_scalar_0_0 = r_658_mul_1_0;
  double r_662_scalar_0_0 = r_658_mul_2_0;
  double r_663_scalar_0_0 = r_659_mul_0_0;
  double r_664_scalar_0_0 = r_659_mul_1_0;
  double r_665_scalar_0_0 = r_659_mul_2_0;
  double r_666_0_0 = r_660_scalar_0_0;
  double r_666_1_0 = r_661_scalar_0_0;
  double r_666_2_0 = r_662_scalar_0_0;
  double r_666_3_0 = r_663_scalar_0_0;
  double r_666_4_0 = r_664_scalar_0_0;
  double r_666_5_0 = r_665_scalar_0_0;
  double act_inv_4_0_0 = r_666_0_0;
  double act_inv_4_1_0 = r_666_1_0;
  double act_inv_4_2_0 = r_666_2_0;
  double act_inv_4_3_0 = r_666_3_0;
  double act_inv_4_4_0 = r_666_4_0;
  double act_inv_4_5_0 = r_666_5_0;
  double r_667_add_0_0 = (r_646_0_0 + act_inv_4_0_0);
  double r_667_add_1_0 = (r_646_1_0 + act_inv_4_1_0);
  double r_667_add_2_0 = (r_646_2_0 + act_inv_4_2_0);
  double r_667_add_3_0 = (r_646_3_0 + act_inv_4_3_0);
  double r_667_add_4_0 = (r_646_4_0 + act_inv_4_4_0);
  double r_667_add_5_0 = (r_646_5_0 + act_inv_4_5_0);
  double final_omi_translations_0_0_0 = limi_translation_0_0_0;
  double final_omi_translations_0_1_0 = limi_translation_0_1_0;
  double final_omi_translations_0_2_0 = limi_translation_0_2_0;
  double final_omi_rotations_0_0_0 = limi_rotation_0_0_0;
  double final_omi_rotations_0_0_1 = limi_rotation_0_0_1;
  double final_omi_rotations_0_0_2 = limi_rotation_0_0_2;
  double final_omi_rotations_0_1_0 = limi_rotation_0_1_0;
  double final_omi_rotations_0_1_1 = limi_rotation_0_1_1;
  double final_omi_rotations_0_1_2 = limi_rotation_0_1_2;
  double final_omi_rotations_0_2_0 = limi_rotation_0_2_0;
  double final_omi_rotations_0_2_1 = limi_rotation_0_2_1;
  double final_omi_rotations_0_2_2 = limi_rotation_0_2_2;
  double final_v_0_0_0 = r_63_0_0;
  double final_v_0_1_0 = r_63_1_0;
  double final_v_0_2_0 = r_63_2_0;
  double final_v_0_3_0 = r_63_3_0;
  double final_v_0_4_0 = r_63_4_0;
  double final_v_0_5_0 = r_63_5_0;
  double final_a_0_0_0 = r_103_0_0;
  double final_a_0_1_0 = r_103_1_0;
  double final_a_0_2_0 = r_103_2_0;
  double final_a_0_3_0 = r_103_3_0;
  double final_a_0_4_0 = r_103_4_0;
  double final_a_0_5_0 = r_103_5_0;
  double final_omi_translations_1_0_0 = r_146_add_0_0;
  double final_omi_translations_1_1_0 = r_146_add_1_0;
  double final_omi_translations_1_2_0 = r_146_add_2_0;
  double final_omi_rotations_1_0_0 = r_144_mul_0_0;
  double final_omi_rotations_1_0_1 = r_144_mul_0_1;
  double final_omi_rotations_1_0_2 = r_144_mul_0_2;
  double final_omi_rotations_1_1_0 = r_144_mul_1_0;
  double final_omi_rotations_1_1_1 = r_144_mul_1_1;
  double final_omi_rotations_1_1_2 = r_144_mul_1_2;
  double final_omi_rotations_1_2_0 = r_144_mul_2_0;
  double final_omi_rotations_1_2_1 = r_144_mul_2_1;
  double final_omi_rotations_1_2_2 = r_144_mul_2_2;
  double final_v_1_0_0 = act_motion_inv_1_0_0;
  double final_v_1_1_0 = act_motion_inv_1_1_0;
  double final_v_1_2_0 = act_motion_inv_1_2_0;
  double final_v_1_3_0 = act_motion_inv_1_3_0;
  double final_v_1_4_0 = act_motion_inv_1_4_0;
  double final_v_1_5_0 = act_motion_inv_1_5_0;
  double final_a_1_0_0 = r_244_add_0_0;
  double final_a_1_1_0 = r_244_add_1_0;
  double final_a_1_2_0 = r_244_add_2_0;
  double final_a_1_3_0 = r_244_add_3_0;
  double final_a_1_4_0 = r_244_add_4_0;
  double final_a_1_5_0 = r_244_add_5_0;
  double final_omi_translations_2_0_0 = r_287_add_0_0;
  double final_omi_translations_2_1_0 = r_287_add_1_0;
  double final_omi_translations_2_2_0 = r_287_add_2_0;
  double final_omi_rotations_2_0_0 = r_285_mul_0_0;
  double final_omi_rotations_2_0_1 = r_285_mul_0_1;
  double final_omi_rotations_2_0_2 = r_285_mul_0_2;
  double final_omi_rotations_2_1_0 = r_285_mul_1_0;
  double final_omi_rotations_2_1_1 = r_285_mul_1_1;
  double final_omi_rotations_2_1_2 = r_285_mul_1_2;
  double final_omi_rotations_2_2_0 = r_285_mul_2_0;
  double final_omi_rotations_2_2_1 = r_285_mul_2_1;
  double final_omi_rotations_2_2_2 = r_285_mul_2_2;
  double final_v_2_0_0 = act_motion_inv_2_0_0;
  double final_v_2_1_0 = act_motion_inv_2_1_0;
  double final_v_2_2_0 = act_motion_inv_2_2_0;
  double final_v_2_3_0 = act_motion_inv_2_3_0;
  double final_v_2_4_0 = act_motion_inv_2_4_0;
  double final_v_2_5_0 = act_motion_inv_2_5_0;
  double final_a_2_0_0 = r_385_add_0_0;
  double final_a_2_1_0 = r_385_add_1_0;
  double final_a_2_2_0 = r_385_add_2_0;
  double final_a_2_3_0 = r_385_add_3_0;
  double final_a_2_4_0 = r_385_add_4_0;
  double final_a_2_5_0 = r_385_add_5_0;
  double final_omi_translations_3_0_0 = r_428_add_0_0;
  double final_omi_translations_3_1_0 = r_428_add_1_0;
  double final_omi_translations_3_2_0 = r_428_add_2_0;
  double final_omi_rotations_3_0_0 = r_426_mul_0_0;
  double final_omi_rotations_3_0_1 = r_426_mul_0_1;
  double final_omi_rotations_3_0_2 = r_426_mul_0_2;
  double final_omi_rotations_3_1_0 = r_426_mul_1_0;
  double final_omi_rotations_3_1_1 = r_426_mul_1_1;
  double final_omi_rotations_3_1_2 = r_426_mul_1_2;
  double final_omi_rotations_3_2_0 = r_426_mul_2_0;
  double final_omi_rotations_3_2_1 = r_426_mul_2_1;
  double final_omi_rotations_3_2_2 = r_426_mul_2_2;
  double final_v_3_0_0 = act_motion_inv_3_0_0;
  double final_v_3_1_0 = act_motion_inv_3_1_0;
  double final_v_3_2_0 = act_motion_inv_3_2_0;
  double final_v_3_3_0 = act_motion_inv_3_3_0;
  double final_v_3_4_0 = act_motion_inv_3_4_0;
  double final_v_3_5_0 = act_motion_inv_3_5_0;
  double final_a_3_0_0 = r_526_add_0_0;
  double final_a_3_1_0 = r_526_add_1_0;
  double final_a_3_2_0 = r_526_add_2_0;
  double final_a_3_3_0 = r_526_add_3_0;
  double final_a_3_4_0 = r_526_add_4_0;
  double final_a_3_5_0 = r_526_add_5_0;
  double final_omi_translations_4_0_0 = r_569_add_0_0;
  double final_omi_translations_4_1_0 = r_569_add_1_0;
  double final_omi_translations_4_2_0 = r_569_add_2_0;
  double final_omi_rotations_4_0_0 = r_567_mul_0_0;
  double final_omi_rotations_4_0_1 = r_567_mul_0_1;
  double final_omi_rotations_4_0_2 = r_567_mul_0_2;
  double final_omi_rotations_4_1_0 = r_567_mul_1_0;
  double final_omi_rotations_4_1_1 = r_567_mul_1_1;
  double final_omi_rotations_4_1_2 = r_567_mul_1_2;
  double final_omi_rotations_4_2_0 = r_567_mul_2_0;
  double final_omi_rotations_4_2_1 = r_567_mul_2_1;
  double final_omi_rotations_4_2_2 = r_567_mul_2_2;
  double final_v_4_0_0 = act_motion_inv_4_0_0;
  double final_v_4_1_0 = act_motion_inv_4_1_0;
  double final_v_4_2_0 = act_motion_inv_4_2_0;
  double final_v_4_3_0 = act_motion_inv_4_3_0;
  double final_v_4_4_0 = act_motion_inv_4_4_0;
  double final_v_4_5_0 = act_motion_inv_4_5_0;
  double final_a_4_0_0 = r_667_add_0_0;
  double final_a_4_1_0 = r_667_add_1_0;
  double final_a_4_2_0 = r_667_add_2_0;
  double final_a_4_3_0 = r_667_add_3_0;
  double final_a_4_4_0 = r_667_add_4_0;
  double final_a_4_5_0 = r_667_add_5_0;


    // !!! IMPORTANT FIX from previous analysis: Populate v and a in the return struct !!!
    fk_return result; // Create the struct

    // --- Copy oMis ---
    result.oMis[0] = oMi{ /* ... final_omi_rotations_0_... , final_omi_translations_0_... */
         { {final_omi_rotations_0_0_0, final_omi_rotations_0_0_1, final_omi_rotations_0_0_2},
           {final_omi_rotations_0_1_0, final_omi_rotations_0_1_1, final_omi_rotations_0_1_2},
           {final_omi_rotations_0_2_0, final_omi_rotations_0_2_1, final_omi_rotations_0_2_2} },
         {final_omi_translations_0_0_0, final_omi_translations_0_1_0, final_omi_translations_0_2_0}
    };
    result.oMis[1] = oMi{ /* ... final_omi_rotations_1_... , final_omi_translations_1_... */
         { {final_omi_rotations_1_0_0, final_omi_rotations_1_0_1, final_omi_rotations_1_0_2},
           {final_omi_rotations_1_1_0, final_omi_rotations_1_1_1, final_omi_rotations_1_1_2},
           {final_omi_rotations_1_2_0, final_omi_rotations_1_2_1, final_omi_rotations_1_2_2} },
         {final_omi_translations_1_0_0, final_omi_translations_1_1_0, final_omi_translations_1_2_0}
    };
     result.oMis[2] = oMi{ /* ... final_omi_rotations_2_... , final_omi_translations_2_... */
         { {final_omi_rotations_2_0_0, final_omi_rotations_2_0_1, final_omi_rotations_2_0_2},
           {final_omi_rotations_2_1_0, final_omi_rotations_2_1_1, final_omi_rotations_2_1_2},
           {final_omi_rotations_2_2_0, final_omi_rotations_2_2_1, final_omi_rotations_2_2_2} },
         {final_omi_translations_2_0_0, final_omi_translations_2_1_0, final_omi_translations_2_2_0}
    };
     result.oMis[3] = oMi{ /* ... final_omi_rotations_3_... , final_omi_translations_3_... */
         { {final_omi_rotations_3_0_0, final_omi_rotations_3_0_1, final_omi_rotations_3_0_2},
           {final_omi_rotations_3_1_0, final_omi_rotations_3_1_1, final_omi_rotations_3_1_2},
           {final_omi_rotations_3_2_0, final_omi_rotations_3_2_1, final_omi_rotations_3_2_2} },
         {final_omi_translations_3_0_0, final_omi_translations_3_1_0, final_omi_translations_3_2_0}
    };
     result.oMis[4] = oMi{ /* ... final_omi_rotations_4_... , final_omi_translations_4_... */
         { {final_omi_rotations_4_0_0, final_omi_rotations_4_0_1, final_omi_rotations_4_0_2},
           {final_omi_rotations_4_1_0, final_omi_rotations_4_1_1, final_omi_rotations_4_1_2},
           {final_omi_rotations_4_2_0, final_omi_rotations_4_2_1, final_omi_rotations_4_2_2} },
         {final_omi_translations_4_0_0, final_omi_translations_4_1_0, final_omi_translations_4_2_0}
    };

    // --- Copy v ---
    result.v[0][0] = final_v_0_0_0; result.v[0][1] = final_v_0_1_0; result.v[0][2] = final_v_0_2_0;
    result.v[0][3] = final_v_0_3_0; result.v[0][4] = final_v_0_4_0; result.v[0][5] = final_v_0_5_0;
    result.v[1][0] = final_v_1_0_0; result.v[1][1] = final_v_1_1_0; result.v[1][2] = final_v_1_2_0;
    result.v[1][3] = final_v_1_3_0; result.v[1][4] = final_v_1_4_0; result.v[1][5] = final_v_1_5_0;
    result.v[2][0] = final_v_2_0_0; result.v[2][1] = final_v_2_1_0; result.v[2][2] = final_v_2_2_0;
    result.v[2][3] = final_v_2_3_0; result.v[2][4] = final_v_2_4_0; result.v[2][5] = final_v_2_5_0;
    result.v[3][0] = final_v_3_0_0; result.v[3][1] = final_v_3_1_0; result.v[3][2] = final_v_3_2_0;
    result.v[3][3] = final_v_3_3_0; result.v[3][4] = final_v_3_4_0; result.v[3][5] = final_v_3_5_0;
    result.v[4][0] = final_v_4_0_0; result.v[4][1] = final_v_4_1_0; result.v[4][2] = final_v_4_2_0;
    result.v[4][3] = final_v_4_3_0; result.v[4][4] = final_v_4_4_0; result.v[4][5] = final_v_4_5_0;

    // --- Copy a ---
    result.a[0][0] = final_a_0_0_0; result.a[0][1] = final_a_0_1_0; result.a[0][2] = final_a_0_2_0;
    result.a[0][3] = final_a_0_3_0; result.a[0][4] = final_a_0_4_0; result.a[0][5] = final_a_0_5_0;
    result.a[1][0] = final_a_1_0_0; result.a[1][1] = final_a_1_1_0; result.a[1][2] = final_a_1_2_0;
    result.a[1][3] = final_a_1_3_0; result.a[1][4] = final_a_1_4_0; result.a[1][5] = final_a_1_5_0;
    result.a[2][0] = final_a_2_0_0; result.a[2][1] = final_a_2_1_0; result.a[2][2] = final_a_2_2_0;
    result.a[2][3] = final_a_2_3_0; result.a[2][4] = final_a_2_4_0; result.a[2][5] = final_a_2_5_0;
    result.a[3][0] = final_a_3_0_0; result.a[3][1] = final_a_3_1_0; result.a[3][2] = final_a_3_2_0;
    result.a[3][3] = final_a_3_3_0; result.a[3][4] = final_a_3_4_0; result.a[3][5] = final_a_3_5_0;
    result.a[4][0] = final_a_4_0_0; result.a[4][1] = final_a_4_1_0; result.a[4][2] = final_a_4_2_0;
    result.a[4][3] = final_a_4_3_0; result.a[4][4] = final_a_4_4_0; result.a[4][5] = final_a_4_5_0;

    return result; // Return the fully populated struct
}

