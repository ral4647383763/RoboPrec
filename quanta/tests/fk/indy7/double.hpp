#include "return.hpp"

/* @pre: ((qsin_0_0 > -1.0) && (qsin_0_0 < 1.0) && (qsin_1_0 > -1.0) && (qsin_1_0 < 1.0) && (qsin_2_0 > -1.0) && (qsin_2_0 < 1.0) && (qsin_3_0 > -1.0) && (qsin_3_0 < 1.0) && (qsin_4_0 > -1.0) && (qsin_4_0 < 1.0) && (qsin_5_0 > -1.0) && (qsin_5_0 < 1.0) && (qcos_0_0 > -0.9961946980917455) && (qcos_0_0 < 1.0) && (qcos_1_0 > -0.9961946980917455) && (qcos_1_0 < 1.0) && (qcos_2_0 > -0.9961946980917455) && (qcos_2_0 < 1.0) && (qcos_3_0 > -0.9961946980917455) && (qcos_3_0 < 1.0) && (qcos_4_0 > -0.9961946980917455) && (qcos_4_0 < 1.0) && (qcos_5_0 > -1.0) && (qcos_5_0 < 1.0) && (v_0_0 > -0.5) && (v_0_0 < 0.5) && (v_1_0 > -0.5) && (v_1_0 < 0.5) && (v_2_0 > -0.5) && (v_2_0 < 0.5) && (v_3_0 > -0.5) && (v_3_0 < 0.5) && (v_4_0 > -0.5) && (v_4_0 < 0.5) && (v_5_0 > -0.5) && (v_5_0 < 0.5) && (a_0_0 > -1.0) && (a_0_0 < 1.0) && (a_1_0 > -1.0) && (a_1_0 < 1.0) && (a_2_0 > -1.0) && (a_2_0 < 1.0) && (a_3_0 > -1.0) && (a_3_0 < 1.0) && (a_4_0 > -1.0) && (a_4_0 < 1.0) && (a_5_0 > -1.0) && (a_5_0 < 1.0)) */
fk_return FK_Indy7_double(
    double qcos_0_0, double qcos_1_0, double qcos_2_0, double qcos_3_0, double qcos_4_0, double qcos_5_0, 
    double qsin_0_0, double qsin_1_0, double qsin_2_0, double qsin_3_0, double qsin_4_0, double qsin_5_0, 
    double v_0_0, double v_1_0, double v_2_0, double v_3_0, double v_4_0, double v_5_0, 
    double a_0_0, double a_1_0, double a_2_0, double a_3_0, double a_4_0, double a_5_0
) {
  double r_1_0_0 = 0;
  double r_1_1_0 = 0;
  double r_1_2_0 = 0.0775;
  double limi_translation_0_0_0 = r_1_0_0;
  double limi_translation_0_1_0 = r_1_1_0;
  double limi_translation_0_2_0 = r_1_2_0;
  double r_2_0_0 = 0;
  double r_2_1_0 = -0.109;
  double r_2_2_0 = 0.222;
  double limi_translation_1_0_0 = r_2_0_0;
  double limi_translation_1_1_0 = r_2_1_0;
  double limi_translation_1_2_0 = r_2_2_0;
  double r_3_0_0 = -0.45;
  double r_3_1_0 = 0;
  double r_3_2_0 = -0.0305;
  double limi_translation_2_0_0 = r_3_0_0;
  double limi_translation_2_1_0 = r_3_1_0;
  double limi_translation_2_2_0 = r_3_2_0;
  double r_4_0_0 = -0.267;
  double r_4_1_0 = 0;
  double r_4_2_0 = -0.075;
  double limi_translation_3_0_0 = r_4_0_0;
  double limi_translation_3_1_0 = r_4_1_0;
  double limi_translation_3_2_0 = r_4_2_0;
  double r_5_0_0 = 0;
  double r_5_1_0 = -0.114;
  double r_5_2_0 = 0.083;
  double limi_translation_4_0_0 = r_5_0_0;
  double limi_translation_4_1_0 = r_5_1_0;
  double limi_translation_4_2_0 = r_5_2_0;
  double r_6_0_0 = -0.168;
  double r_6_1_0 = 0;
  double r_6_2_0 = 0.069;
  double limi_translation_5_0_0 = r_6_0_0;
  double limi_translation_5_1_0 = r_6_1_0;
  double limi_translation_5_2_0 = r_6_2_0;
  double r_7_0_0 = -2.3749E-4;
  double r_7_1_0 = -0.04310313;
  double r_7_2_0 = 0.13245396;
  double lever_0_0_0 = r_7_0_0;
  double lever_0_1_0 = r_7_1_0;
  double lever_0_2_0 = r_7_2_0;
  double r_8_0_0 = -0.29616699;
  double r_8_1_0 = 2.254E-5;
  double r_8_2_0 = 0.04483069;
  double lever_1_0_0 = r_8_0_0;
  double lever_1_1_0 = r_8_1_0;
  double lever_1_2_0 = r_8_2_0;
  double r_9_0_0 = -0.16804016;
  double r_9_1_0 = 2.1421E-4;
  double r_9_2_0 = -0.07000383;
  double lever_2_0_0 = r_9_0_0;
  double lever_2_1_0 = r_9_1_0;
  double lever_2_2_0 = r_9_2_0;
  double r_10_0_0 = -2.6847E-4;
  double r_10_1_0 = -0.0709844;
  double r_10_2_0 = 0.07649128;
  double lever_3_0_0 = r_10_0_0;
  double lever_3_1_0 = r_10_1_0;
  double lever_3_2_0 = r_10_2_0;
  double r_11_0_0 = -0.09796232;
  double r_11_1_0 = -2.3114E-4;
  double r_11_2_0 = 0.06445892;
  double lever_4_0_0 = r_11_0_0;
  double lever_4_1_0 = r_11_1_0;
  double lever_4_2_0 = r_11_2_0;
  double r_12_0_0 = 8.147E-5;
  double r_12_1_0 = -4.6556E-4;
  double r_12_2_0 = 0.03079097;
  double lever_5_0_0 = r_12_0_0;
  double lever_5_1_0 = r_12_1_0;
  double lever_5_2_0 = r_12_2_0;
  double r_13_0_0 = 11.44444535;
  double r_13_1_0 = 5.84766553;
  double r_13_2_0 = 2.68206064;
  double r_13_3_0 = 2.12987371;
  double r_13_4_0 = 2.22412271;
  double r_13_5_0 = 0.38254932;
  double masses_0_0 = r_13_0_0;
  double masses_1_0 = r_13_1_0;
  double masses_2_0 = r_13_2_0;
  double masses_3_0 = r_13_3_0;
  double masses_4_0 = r_13_4_0;
  double masses_5_0 = r_13_5_0;
  double r_14_0_0 = 0.35065005;
  double r_14_0_1 = 1.1931E-4;
  double r_14_0_2 = -3.7553E-4;
  double r_14_1_0 = 1.1931E-4;
  double r_14_1_1 = 0.304798;
  double r_14_1_2 = -0.10984447;
  double r_14_2_0 = -3.7553E-4;
  double r_14_2_1 = -0.10984447;
  double r_14_2_2 = 0.06003147;
  double inertia_0_0_0 = r_14_0_0;
  double inertia_0_0_1 = r_14_0_1;
  double inertia_0_0_2 = r_14_0_2;
  double inertia_0_1_0 = r_14_1_0;
  double inertia_0_1_1 = r_14_1_1;
  double inertia_0_1_2 = r_14_1_2;
  double inertia_0_2_0 = r_14_2_0;
  double inertia_0_2_1 = r_14_2_1;
  double inertia_0_2_2 = r_14_2_2;
  double r_15_0_0 = 0.03599743;
  double r_15_0_1 = -4.693E-5;
  double r_15_0_2 = -0.05240346;
  double r_15_1_0 = -4.693E-5;
  double r_15_1_1 = 0.72293306;
  double r_15_1_2 = 1.76E-6;
  double r_15_2_0 = -0.05240346;
  double r_15_2_1 = 1.76E-6;
  double r_15_2_2 = 0.70024119;
  double inertia_1_0_0 = r_15_0_0;
  double inertia_1_0_1 = r_15_0_1;
  double inertia_1_0_2 = r_15_0_2;
  double inertia_1_1_0 = r_15_1_0;
  double inertia_1_1_1 = r_15_1_1;
  double inertia_1_1_2 = r_15_1_2;
  double inertia_1_2_0 = r_15_2_0;
  double inertia_1_2_1 = r_15_2_1;
  double inertia_1_2_2 = r_15_2_2;
  double r_16_0_0 = 0.0161721;
  double r_16_0_1 = -1.1817E-4;
  double r_16_0_2 = 0.03341882;
  double r_16_1_0 = -1.1817E-4;
  double r_16_1_1 = 0.11364055;
  double r_16_1_2 = -4.371E-5;
  double r_16_2_0 = 0.03341882;
  double r_16_2_1 = -4.371E-5;
  double r_16_2_2 = 0.10022522;
  double inertia_2_0_0 = r_16_0_0;
  double inertia_2_0_1 = r_16_0_1;
  double inertia_2_0_2 = r_16_0_2;
  double inertia_2_1_0 = r_16_1_0;
  double inertia_2_1_1 = r_16_1_1;
  double inertia_2_1_2 = r_16_1_2;
  double inertia_2_2_0 = r_16_2_0;
  double inertia_2_2_1 = r_16_2_1;
  double inertia_2_2_2 = r_16_2_2;
  double r_17_0_0 = 0.02798891;
  double r_17_0_1 = 3.893E-5;
  double r_17_0_2 = -4.768E-5;
  double r_17_1_0 = 3.893E-5;
  double r_17_1_1 = 0.01443076;
  double r_17_1_2 = -0.01266296;
  double r_17_2_0 = -4.768E-5;
  double r_17_2_1 = -0.01266296;
  double r_17_2_2 = 0.01496211;
  double inertia_3_0_0 = r_17_0_0;
  double inertia_3_0_1 = r_17_0_1;
  double inertia_3_0_2 = r_17_0_2;
  double inertia_3_1_0 = r_17_1_0;
  double inertia_3_1_1 = r_17_1_1;
  double inertia_3_1_2 = r_17_1_2;
  double inertia_3_2_0 = r_17_2_0;
  double inertia_3_2_1 = r_17_2_1;
  double inertia_3_2_2 = r_17_2_2;
  double r_18_0_0 = 0.01105297;
  double r_18_0_1 = 5.517E-5;
  double r_18_0_2 = -0.01481977;
  double r_18_1_0 = 5.517E-5;
  double r_18_1_1 = 0.03698291;
  double r_18_1_2 = -3.74E-5;
  double r_18_2_0 = -0.01481977;
  double r_18_2_1 = -3.74E-5;
  double r_18_2_2 = 0.02754795;
  double inertia_4_0_0 = r_18_0_0;
  double inertia_4_0_1 = r_18_0_1;
  double inertia_4_0_2 = r_18_0_2;
  double inertia_4_1_0 = r_18_1_0;
  double inertia_4_1_1 = r_18_1_1;
  double inertia_4_1_2 = r_18_1_2;
  double inertia_4_2_0 = r_18_2_0;
  double inertia_4_2_1 = r_18_2_1;
  double inertia_4_2_2 = r_18_2_2;
  double r_19_0_0 = 7.8982E-4;
  double r_19_0_1 = -3.4E-7;
  double r_19_0_2 = 8.3E-7;
  double r_19_1_0 = -3.4E-7;
  double r_19_1_1 = 7.9764E-4;
  double r_19_1_2 = -5.08E-6;
  double r_19_2_0 = 8.3E-7;
  double r_19_2_1 = -5.08E-6;
  double r_19_2_2 = 5.8319E-4;
  double inertia_5_0_0 = r_19_0_0;
  double inertia_5_0_1 = r_19_0_1;
  double inertia_5_0_2 = r_19_0_2;
  double inertia_5_1_0 = r_19_1_0;
  double inertia_5_1_1 = r_19_1_1;
  double inertia_5_1_2 = r_19_1_2;
  double inertia_5_2_0 = r_19_2_0;
  double inertia_5_2_1 = r_19_2_1;
  double inertia_5_2_2 = r_19_2_2;
  double r_20_scalar_0_0 = qcos_0_0;
  double r_21_scalar_0_0 = qsin_0_0;
  double r_22_matrix_negate_0_0 = -(r_21_scalar_0_0);
  double r_23_0_0 = 0;
  double r_24_scalar_0_0 = qsin_0_0;
  double r_25_scalar_0_0 = qcos_0_0;
  double r_26_0_0 = 0;
  double r_27_0_0 = 0;
  double r_28_0_0 = 0;
  double r_29_0_0 = 1;
  double r_30_0_0 = r_20_scalar_0_0;
  double r_30_0_1 = r_22_matrix_negate_0_0;
  double r_30_0_2 = r_23_0_0;
  double r_30_1_0 = r_24_scalar_0_0;
  double r_30_1_1 = r_25_scalar_0_0;
  double r_30_1_2 = r_26_0_0;
  double r_30_2_0 = r_27_0_0;
  double r_30_2_1 = r_28_0_0;
  double r_30_2_2 = r_29_0_0;
  double r_31_0_0 = 1;
  double r_32_0_0 = 0;
  double r_33_0_0 = 1;
  double r_34_0_0 = 0;
  double r_35_0_0 = 1;
  double r_36_0_0 = 0;
  double r_37_mul_0_0 = (r_35_0_0 * r_33_0_0);
  double r_38_mul_0_0 = (r_35_0_0 * r_34_0_0);
  double r_39_mul_0_0 = (r_38_mul_0_0 * r_32_0_0);
  double r_40_mul_0_0 = (r_36_0_0 * r_31_0_0);
  double r_41_sub_0_0 = (r_39_mul_0_0 - r_40_mul_0_0);
  double r_42_mul_0_0 = (r_35_0_0 * r_34_0_0);
  double r_43_mul_0_0 = (r_42_mul_0_0 * r_31_0_0);
  double r_44_mul_0_0 = (r_36_0_0 * r_32_0_0);
  double r_45_add_0_0 = (r_43_mul_0_0 + r_44_mul_0_0);
  double r_46_mul_0_0 = (r_36_0_0 * r_33_0_0);
  double r_47_mul_0_0 = (r_36_0_0 * r_34_0_0);
  double r_48_mul_0_0 = (r_47_mul_0_0 * r_32_0_0);
  double r_49_mul_0_0 = (r_35_0_0 * r_31_0_0);
  double r_50_add_0_0 = (r_48_mul_0_0 + r_49_mul_0_0);
  double r_51_mul_0_0 = (r_36_0_0 * r_34_0_0);
  double r_52_mul_0_0 = (r_51_mul_0_0 * r_31_0_0);
  double r_53_mul_0_0 = (r_35_0_0 * r_32_0_0);
  double r_54_sub_0_0 = (r_52_mul_0_0 - r_53_mul_0_0);
  double r_55_matrix_negate_0_0 = -(r_34_0_0);
  double r_56_mul_0_0 = (r_33_0_0 * r_32_0_0);
  double r_57_mul_0_0 = (r_33_0_0 * r_31_0_0);
  double r_58_0_0 = r_37_mul_0_0;
  double r_58_0_1 = r_41_sub_0_0;
  double r_58_0_2 = r_45_add_0_0;
  double r_58_1_0 = r_46_mul_0_0;
  double r_58_1_1 = r_50_add_0_0;
  double r_58_1_2 = r_54_sub_0_0;
  double r_58_2_0 = r_55_matrix_negate_0_0;
  double r_58_2_1 = r_56_mul_0_0;
  double r_58_2_2 = r_57_mul_0_0;
  double r_59_mul_0_0 = (((r_58_0_0 * r_30_0_0) + (r_58_0_1 * r_30_1_0)) + (r_58_0_2 * r_30_2_0));
  double r_59_mul_0_1 = (((r_58_0_0 * r_30_0_1) + (r_58_0_1 * r_30_1_1)) + (r_58_0_2 * r_30_2_1));
  double r_59_mul_0_2 = (((r_58_0_0 * r_30_0_2) + (r_58_0_1 * r_30_1_2)) + (r_58_0_2 * r_30_2_2));
  double r_59_mul_1_0 = (((r_58_1_0 * r_30_0_0) + (r_58_1_1 * r_30_1_0)) + (r_58_1_2 * r_30_2_0));
  double r_59_mul_1_1 = (((r_58_1_0 * r_30_0_1) + (r_58_1_1 * r_30_1_1)) + (r_58_1_2 * r_30_2_1));
  double r_59_mul_1_2 = (((r_58_1_0 * r_30_0_2) + (r_58_1_1 * r_30_1_2)) + (r_58_1_2 * r_30_2_2));
  double r_59_mul_2_0 = (((r_58_2_0 * r_30_0_0) + (r_58_2_1 * r_30_1_0)) + (r_58_2_2 * r_30_2_0));
  double r_59_mul_2_1 = (((r_58_2_0 * r_30_0_1) + (r_58_2_1 * r_30_1_1)) + (r_58_2_2 * r_30_2_1));
  double r_59_mul_2_2 = (((r_58_2_0 * r_30_0_2) + (r_58_2_1 * r_30_1_2)) + (r_58_2_2 * r_30_2_2));
  double limi_rotation_0_0_0 = r_59_mul_0_0;
  double limi_rotation_0_0_1 = r_59_mul_0_1;
  double limi_rotation_0_0_2 = r_59_mul_0_2;
  double limi_rotation_0_1_0 = r_59_mul_1_0;
  double limi_rotation_0_1_1 = r_59_mul_1_1;
  double limi_rotation_0_1_2 = r_59_mul_1_2;
  double limi_rotation_0_2_0 = r_59_mul_2_0;
  double limi_rotation_0_2_1 = r_59_mul_2_1;
  double limi_rotation_0_2_2 = r_59_mul_2_2;
  double r_60_0_0 = 0;
  double r_61_0_0 = 0;
  double r_62_0_0 = 0;
  double r_63_0_0 = 0;
  double r_64_0_0 = 0;
  double r_65_scalar_0_0 = v_0_0;
  double r_66_0_0 = r_60_0_0;
  double r_66_1_0 = r_61_0_0;
  double r_66_2_0 = r_62_0_0;
  double r_66_3_0 = r_63_0_0;
  double r_66_4_0 = r_64_0_0;
  double r_66_5_0 = r_65_scalar_0_0;
  double r_67_scalar_0_0 = v_0_0;
  double r_68_matrix_negate_0_0 = -(r_67_scalar_0_0);
  double r_69_scalar_0_0 = r_66_0_0;
  double r_70_scalar_0_0 = r_66_1_0;
  double r_71_scalar_0_0 = r_66_2_0;
  double r_72_0_0 = r_69_scalar_0_0;
  double r_72_1_0 = r_70_scalar_0_0;
  double r_72_2_0 = r_71_scalar_0_0;
  double r_73_scalar_0_0 = r_66_3_0;
  double r_74_scalar_0_0 = r_66_4_0;
  double r_75_scalar_0_0 = r_66_5_0;
  double r_76_0_0 = r_73_scalar_0_0;
  double r_76_1_0 = r_74_scalar_0_0;
  double r_76_2_0 = r_75_scalar_0_0;
  double r_77_matrix_negate_0_0 = -(r_68_matrix_negate_0_0);
  double r_78_scalar_0_0 = r_72_1_0;
  double r_79_mul_0_0 = (r_77_matrix_negate_0_0 * r_78_scalar_0_0);
  double r_80_scalar_0_0 = r_72_0_0;
  double r_81_mul_0_0 = (r_68_matrix_negate_0_0 * r_80_scalar_0_0);
  double r_82_0_0 = 0;
  double r_83_0_0 = r_79_mul_0_0;
  double r_83_1_0 = r_81_mul_0_0;
  double r_83_2_0 = r_82_0_0;
  double alpha_cross_linear_0_0_0 = r_83_0_0;
  double alpha_cross_linear_0_1_0 = r_83_1_0;
  double alpha_cross_linear_0_2_0 = r_83_2_0;
  double r_84_matrix_negate_0_0 = -(r_68_matrix_negate_0_0);
  double r_85_scalar_0_0 = r_76_1_0;
  double r_86_mul_0_0 = (r_84_matrix_negate_0_0 * r_85_scalar_0_0);
  double r_87_scalar_0_0 = r_76_0_0;
  double r_88_mul_0_0 = (r_68_matrix_negate_0_0 * r_87_scalar_0_0);
  double r_89_0_0 = 0;
  double r_90_0_0 = r_86_mul_0_0;
  double r_90_1_0 = r_88_mul_0_0;
  double r_90_2_0 = r_89_0_0;
  double alpha_cross_angular_0_0_0 = r_90_0_0;
  double alpha_cross_angular_0_1_0 = r_90_1_0;
  double alpha_cross_angular_0_2_0 = r_90_2_0;
  double r_91_scalar_0_0 = alpha_cross_linear_0_0_0;
  double r_92_scalar_0_0 = alpha_cross_linear_0_1_0;
  double r_93_scalar_0_0 = alpha_cross_linear_0_2_0;
  double r_94_scalar_0_0 = alpha_cross_angular_0_0_0;
  double r_95_scalar_0_0 = alpha_cross_angular_0_1_0;
  double r_96_scalar_0_0 = alpha_cross_angular_0_2_0;
  double r_97_0_0 = r_91_scalar_0_0;
  double r_97_1_0 = r_92_scalar_0_0;
  double r_97_2_0 = r_93_scalar_0_0;
  double r_97_3_0 = r_94_scalar_0_0;
  double r_97_4_0 = r_95_scalar_0_0;
  double r_97_5_0 = r_96_scalar_0_0;
  double alpha_cross_0_0_0 = r_97_0_0;
  double alpha_cross_0_1_0 = r_97_1_0;
  double alpha_cross_0_2_0 = r_97_2_0;
  double alpha_cross_0_3_0 = r_97_3_0;
  double alpha_cross_0_4_0 = r_97_4_0;
  double alpha_cross_0_5_0 = r_97_5_0;
  double r_98_scalar_0_0 = a_0_0;
  double r_99_scalar_0_0 = alpha_cross_0_5_0;
  double r_100_add_0_0 = (r_98_scalar_0_0 + r_99_scalar_0_0);
  double r_101_scalar_0_0 = alpha_cross_0_0_0;
  double r_102_scalar_0_0 = alpha_cross_0_1_0;
  double r_103_scalar_0_0 = alpha_cross_0_2_0;
  double r_104_scalar_0_0 = alpha_cross_0_3_0;
  double r_105_scalar_0_0 = alpha_cross_0_4_0;
  double r_106_0_0 = r_101_scalar_0_0;
  double r_106_1_0 = r_102_scalar_0_0;
  double r_106_2_0 = r_103_scalar_0_0;
  double r_106_3_0 = r_104_scalar_0_0;
  double r_106_4_0 = r_105_scalar_0_0;
  double r_106_5_0 = r_100_add_0_0;
  double r_107_scalar_0_0 = qcos_1_0;
  double r_108_scalar_0_0 = qsin_1_0;
  double r_109_matrix_negate_0_0 = -(r_108_scalar_0_0);
  double r_110_0_0 = 0;
  double r_111_scalar_0_0 = qsin_1_0;
  double r_112_scalar_0_0 = qcos_1_0;
  double r_113_0_0 = 0;
  double r_114_0_0 = 0;
  double r_115_0_0 = 0;
  double r_116_0_0 = 1;
  double r_117_0_0 = r_107_scalar_0_0;
  double r_117_0_1 = r_109_matrix_negate_0_0;
  double r_117_0_2 = r_110_0_0;
  double r_117_1_0 = r_111_scalar_0_0;
  double r_117_1_1 = r_112_scalar_0_0;
  double r_117_1_2 = r_113_0_0;
  double r_117_2_0 = r_114_0_0;
  double r_117_2_1 = r_115_0_0;
  double r_117_2_2 = r_116_0_0;
  double r_118_0_0 = 0;
  double r_119_0_0 = 1;
  double r_120_0_0 = 0;
  double r_121_0_0 = 1;
  double r_122_0_0 = 1;
  double r_123_0_0 = 0;
  double r_124_mul_0_0 = (r_122_0_0 * r_120_0_0);
  double r_125_mul_0_0 = (r_122_0_0 * r_121_0_0);
  double r_126_mul_0_0 = (r_125_mul_0_0 * r_119_0_0);
  double r_127_mul_0_0 = (r_123_0_0 * r_118_0_0);
  double r_128_sub_0_0 = (r_126_mul_0_0 - r_127_mul_0_0);
  double r_129_mul_0_0 = (r_122_0_0 * r_121_0_0);
  double r_130_mul_0_0 = (r_129_mul_0_0 * r_118_0_0);
  double r_131_mul_0_0 = (r_123_0_0 * r_119_0_0);
  double r_132_add_0_0 = (r_130_mul_0_0 + r_131_mul_0_0);
  double r_133_mul_0_0 = (r_123_0_0 * r_120_0_0);
  double r_134_mul_0_0 = (r_123_0_0 * r_121_0_0);
  double r_135_mul_0_0 = (r_134_mul_0_0 * r_119_0_0);
  double r_136_mul_0_0 = (r_122_0_0 * r_118_0_0);
  double r_137_add_0_0 = (r_135_mul_0_0 + r_136_mul_0_0);
  double r_138_mul_0_0 = (r_123_0_0 * r_121_0_0);
  double r_139_mul_0_0 = (r_138_mul_0_0 * r_118_0_0);
  double r_140_mul_0_0 = (r_122_0_0 * r_119_0_0);
  double r_141_sub_0_0 = (r_139_mul_0_0 - r_140_mul_0_0);
  double r_142_matrix_negate_0_0 = -(r_121_0_0);
  double r_143_mul_0_0 = (r_120_0_0 * r_119_0_0);
  double r_144_mul_0_0 = (r_120_0_0 * r_118_0_0);
  double r_145_0_0 = r_124_mul_0_0;
  double r_145_0_1 = r_128_sub_0_0;
  double r_145_0_2 = r_132_add_0_0;
  double r_145_1_0 = r_133_mul_0_0;
  double r_145_1_1 = r_137_add_0_0;
  double r_145_1_2 = r_141_sub_0_0;
  double r_145_2_0 = r_142_matrix_negate_0_0;
  double r_145_2_1 = r_143_mul_0_0;
  double r_145_2_2 = r_144_mul_0_0;
  double r_146_mul_0_0 = (((r_145_0_0 * r_117_0_0) + (r_145_0_1 * r_117_1_0)) + (r_145_0_2 * r_117_2_0));
  double r_146_mul_0_1 = (((r_145_0_0 * r_117_0_1) + (r_145_0_1 * r_117_1_1)) + (r_145_0_2 * r_117_2_1));
  double r_146_mul_0_2 = (((r_145_0_0 * r_117_0_2) + (r_145_0_1 * r_117_1_2)) + (r_145_0_2 * r_117_2_2));
  double r_146_mul_1_0 = (((r_145_1_0 * r_117_0_0) + (r_145_1_1 * r_117_1_0)) + (r_145_1_2 * r_117_2_0));
  double r_146_mul_1_1 = (((r_145_1_0 * r_117_0_1) + (r_145_1_1 * r_117_1_1)) + (r_145_1_2 * r_117_2_1));
  double r_146_mul_1_2 = (((r_145_1_0 * r_117_0_2) + (r_145_1_1 * r_117_1_2)) + (r_145_1_2 * r_117_2_2));
  double r_146_mul_2_0 = (((r_145_2_0 * r_117_0_0) + (r_145_2_1 * r_117_1_0)) + (r_145_2_2 * r_117_2_0));
  double r_146_mul_2_1 = (((r_145_2_0 * r_117_0_1) + (r_145_2_1 * r_117_1_1)) + (r_145_2_2 * r_117_2_1));
  double r_146_mul_2_2 = (((r_145_2_0 * r_117_0_2) + (r_145_2_1 * r_117_1_2)) + (r_145_2_2 * r_117_2_2));
  double limi_rotation_1_0_0 = r_146_mul_0_0;
  double limi_rotation_1_0_1 = r_146_mul_0_1;
  double limi_rotation_1_0_2 = r_146_mul_0_2;
  double limi_rotation_1_1_0 = r_146_mul_1_0;
  double limi_rotation_1_1_1 = r_146_mul_1_1;
  double limi_rotation_1_1_2 = r_146_mul_1_2;
  double limi_rotation_1_2_0 = r_146_mul_2_0;
  double limi_rotation_1_2_1 = r_146_mul_2_1;
  double limi_rotation_1_2_2 = r_146_mul_2_2;
  double r_147_mul_0_0 = (((limi_rotation_0_0_0 * limi_rotation_1_0_0) + (limi_rotation_0_0_1 * limi_rotation_1_1_0)) + (limi_rotation_0_0_2 * limi_rotation_1_2_0));
  double r_147_mul_0_1 = (((limi_rotation_0_0_0 * limi_rotation_1_0_1) + (limi_rotation_0_0_1 * limi_rotation_1_1_1)) + (limi_rotation_0_0_2 * limi_rotation_1_2_1));
  double r_147_mul_0_2 = (((limi_rotation_0_0_0 * limi_rotation_1_0_2) + (limi_rotation_0_0_1 * limi_rotation_1_1_2)) + (limi_rotation_0_0_2 * limi_rotation_1_2_2));
  double r_147_mul_1_0 = (((limi_rotation_0_1_0 * limi_rotation_1_0_0) + (limi_rotation_0_1_1 * limi_rotation_1_1_0)) + (limi_rotation_0_1_2 * limi_rotation_1_2_0));
  double r_147_mul_1_1 = (((limi_rotation_0_1_0 * limi_rotation_1_0_1) + (limi_rotation_0_1_1 * limi_rotation_1_1_1)) + (limi_rotation_0_1_2 * limi_rotation_1_2_1));
  double r_147_mul_1_2 = (((limi_rotation_0_1_0 * limi_rotation_1_0_2) + (limi_rotation_0_1_1 * limi_rotation_1_1_2)) + (limi_rotation_0_1_2 * limi_rotation_1_2_2));
  double r_147_mul_2_0 = (((limi_rotation_0_2_0 * limi_rotation_1_0_0) + (limi_rotation_0_2_1 * limi_rotation_1_1_0)) + (limi_rotation_0_2_2 * limi_rotation_1_2_0));
  double r_147_mul_2_1 = (((limi_rotation_0_2_0 * limi_rotation_1_0_1) + (limi_rotation_0_2_1 * limi_rotation_1_1_1)) + (limi_rotation_0_2_2 * limi_rotation_1_2_1));
  double r_147_mul_2_2 = (((limi_rotation_0_2_0 * limi_rotation_1_0_2) + (limi_rotation_0_2_1 * limi_rotation_1_1_2)) + (limi_rotation_0_2_2 * limi_rotation_1_2_2));
  double r_148_mul_0_0 = (((limi_rotation_0_0_0 * limi_translation_1_0_0) + (limi_rotation_0_0_1 * limi_translation_1_1_0)) + (limi_rotation_0_0_2 * limi_translation_1_2_0));
  double r_148_mul_1_0 = (((limi_rotation_0_1_0 * limi_translation_1_0_0) + (limi_rotation_0_1_1 * limi_translation_1_1_0)) + (limi_rotation_0_1_2 * limi_translation_1_2_0));
  double r_148_mul_2_0 = (((limi_rotation_0_2_0 * limi_translation_1_0_0) + (limi_rotation_0_2_1 * limi_translation_1_1_0)) + (limi_rotation_0_2_2 * limi_translation_1_2_0));
  double r_149_add_0_0 = (limi_translation_0_0_0 + r_148_mul_0_0);
  double r_149_add_1_0 = (limi_translation_0_1_0 + r_148_mul_1_0);
  double r_149_add_2_0 = (limi_translation_0_2_0 + r_148_mul_2_0);
  double r_150_0_0 = 0;
  double r_151_0_0 = 0;
  double r_152_0_0 = 0;
  double r_153_0_0 = 0;
  double r_154_0_0 = 0;
  double r_155_scalar_0_0 = v_1_0;
  double r_156_0_0 = r_150_0_0;
  double r_156_1_0 = r_151_0_0;
  double r_156_2_0 = r_152_0_0;
  double r_156_3_0 = r_153_0_0;
  double r_156_4_0 = r_154_0_0;
  double r_156_5_0 = r_155_scalar_0_0;
  double r_157_scalar_0_0 = r_66_0_0;
  double r_158_scalar_0_0 = r_66_1_0;
  double r_159_scalar_0_0 = r_66_2_0;
  double r_160_0_0 = r_157_scalar_0_0;
  double r_160_1_0 = r_158_scalar_0_0;
  double r_160_2_0 = r_159_scalar_0_0;
  double r_161_scalar_0_0 = r_66_3_0;
  double r_162_scalar_0_0 = r_66_4_0;
  double r_163_scalar_0_0 = r_66_5_0;
  double r_164_0_0 = r_161_scalar_0_0;
  double r_164_1_0 = r_162_scalar_0_0;
  double r_164_2_0 = r_163_scalar_0_0;
  double r_165_scalar_0_0 = r_156_0_0;
  double r_166_scalar_0_0 = r_156_1_0;
  double r_167_scalar_0_0 = r_156_2_0;
  double r_168_0_0 = r_165_scalar_0_0;
  double r_168_1_0 = r_166_scalar_0_0;
  double r_168_2_0 = r_167_scalar_0_0;
  double r_169_scalar_0_0 = r_156_3_0;
  double r_170_scalar_0_0 = r_156_4_0;
  double r_171_scalar_0_0 = r_156_5_0;
  double r_172_0_0 = r_169_scalar_0_0;
  double r_172_1_0 = r_170_scalar_0_0;
  double r_172_2_0 = r_171_scalar_0_0;
  double r_173_vector_cross_0_0 = ((limi_translation_1_1_0 * r_164_2_0) - (limi_translation_1_2_0 * r_164_1_0));
  double r_173_vector_cross_1_0 = ((limi_translation_1_2_0 * r_164_0_0) - (limi_translation_1_0_0 * r_164_2_0));
  double r_173_vector_cross_2_0 = ((limi_translation_1_0_0 * r_164_1_0) - (limi_translation_1_1_0 * r_164_0_0));
  double r_174_sub_0_0 = (r_160_0_0 - r_173_vector_cross_0_0);
  double r_174_sub_1_0 = (r_160_1_0 - r_173_vector_cross_1_0);
  double r_174_sub_2_0 = (r_160_2_0 - r_173_vector_cross_2_0);
  double r_175_transpose_0_0 = limi_rotation_1_0_0;
  double r_175_transpose_0_1 = limi_rotation_1_1_0;
  double r_175_transpose_0_2 = limi_rotation_1_2_0;
  double r_175_transpose_1_0 = limi_rotation_1_0_1;
  double r_175_transpose_1_1 = limi_rotation_1_1_1;
  double r_175_transpose_1_2 = limi_rotation_1_2_1;
  double r_175_transpose_2_0 = limi_rotation_1_0_2;
  double r_175_transpose_2_1 = limi_rotation_1_1_2;
  double r_175_transpose_2_2 = limi_rotation_1_2_2;
  double r_176_mul_0_0 = (((r_175_transpose_0_0 * r_174_sub_0_0) + (r_175_transpose_0_1 * r_174_sub_1_0)) + (r_175_transpose_0_2 * r_174_sub_2_0));
  double r_176_mul_1_0 = (((r_175_transpose_1_0 * r_174_sub_0_0) + (r_175_transpose_1_1 * r_174_sub_1_0)) + (r_175_transpose_1_2 * r_174_sub_2_0));
  double r_176_mul_2_0 = (((r_175_transpose_2_0 * r_174_sub_0_0) + (r_175_transpose_2_1 * r_174_sub_1_0)) + (r_175_transpose_2_2 * r_174_sub_2_0));
  double r_177_add_0_0 = (r_168_0_0 + r_176_mul_0_0);
  double r_177_add_1_0 = (r_168_1_0 + r_176_mul_1_0);
  double r_177_add_2_0 = (r_168_2_0 + r_176_mul_2_0);
  double r_178_mul_0_0 = (((r_175_transpose_0_0 * r_164_0_0) + (r_175_transpose_0_1 * r_164_1_0)) + (r_175_transpose_0_2 * r_164_2_0));
  double r_178_mul_1_0 = (((r_175_transpose_1_0 * r_164_0_0) + (r_175_transpose_1_1 * r_164_1_0)) + (r_175_transpose_1_2 * r_164_2_0));
  double r_178_mul_2_0 = (((r_175_transpose_2_0 * r_164_0_0) + (r_175_transpose_2_1 * r_164_1_0)) + (r_175_transpose_2_2 * r_164_2_0));
  double r_179_add_0_0 = (r_172_0_0 + r_178_mul_0_0);
  double r_179_add_1_0 = (r_172_1_0 + r_178_mul_1_0);
  double r_179_add_2_0 = (r_172_2_0 + r_178_mul_2_0);
  double r_180_scalar_0_0 = r_177_add_0_0;
  double r_181_scalar_0_0 = r_177_add_1_0;
  double r_182_scalar_0_0 = r_177_add_2_0;
  double r_183_scalar_0_0 = r_179_add_0_0;
  double r_184_scalar_0_0 = r_179_add_1_0;
  double r_185_scalar_0_0 = r_179_add_2_0;
  double r_186_0_0 = r_180_scalar_0_0;
  double r_186_1_0 = r_181_scalar_0_0;
  double r_186_2_0 = r_182_scalar_0_0;
  double r_186_3_0 = r_183_scalar_0_0;
  double r_186_4_0 = r_184_scalar_0_0;
  double r_186_5_0 = r_185_scalar_0_0;
  double act_motion_inv_1_0_0 = r_186_0_0;
  double act_motion_inv_1_1_0 = r_186_1_0;
  double act_motion_inv_1_2_0 = r_186_2_0;
  double act_motion_inv_1_3_0 = r_186_3_0;
  double act_motion_inv_1_4_0 = r_186_4_0;
  double act_motion_inv_1_5_0 = r_186_5_0;
  double r_187_scalar_0_0 = v_1_0;
  double r_188_matrix_negate_0_0 = -(r_187_scalar_0_0);
  double r_189_scalar_0_0 = act_motion_inv_1_0_0;
  double r_190_scalar_0_0 = act_motion_inv_1_1_0;
  double r_191_scalar_0_0 = act_motion_inv_1_2_0;
  double r_192_0_0 = r_189_scalar_0_0;
  double r_192_1_0 = r_190_scalar_0_0;
  double r_192_2_0 = r_191_scalar_0_0;
  double r_193_scalar_0_0 = act_motion_inv_1_3_0;
  double r_194_scalar_0_0 = act_motion_inv_1_4_0;
  double r_195_scalar_0_0 = act_motion_inv_1_5_0;
  double r_196_0_0 = r_193_scalar_0_0;
  double r_196_1_0 = r_194_scalar_0_0;
  double r_196_2_0 = r_195_scalar_0_0;
  double r_197_matrix_negate_0_0 = -(r_188_matrix_negate_0_0);
  double r_198_scalar_0_0 = r_192_1_0;
  double r_199_mul_0_0 = (r_197_matrix_negate_0_0 * r_198_scalar_0_0);
  double r_200_scalar_0_0 = r_192_0_0;
  double r_201_mul_0_0 = (r_188_matrix_negate_0_0 * r_200_scalar_0_0);
  double r_202_0_0 = 0;
  double r_203_0_0 = r_199_mul_0_0;
  double r_203_1_0 = r_201_mul_0_0;
  double r_203_2_0 = r_202_0_0;
  double alpha_cross_linear_1_0_0 = r_203_0_0;
  double alpha_cross_linear_1_1_0 = r_203_1_0;
  double alpha_cross_linear_1_2_0 = r_203_2_0;
  double r_204_matrix_negate_0_0 = -(r_188_matrix_negate_0_0);
  double r_205_scalar_0_0 = r_196_1_0;
  double r_206_mul_0_0 = (r_204_matrix_negate_0_0 * r_205_scalar_0_0);
  double r_207_scalar_0_0 = r_196_0_0;
  double r_208_mul_0_0 = (r_188_matrix_negate_0_0 * r_207_scalar_0_0);
  double r_209_0_0 = 0;
  double r_210_0_0 = r_206_mul_0_0;
  double r_210_1_0 = r_208_mul_0_0;
  double r_210_2_0 = r_209_0_0;
  double alpha_cross_angular_1_0_0 = r_210_0_0;
  double alpha_cross_angular_1_1_0 = r_210_1_0;
  double alpha_cross_angular_1_2_0 = r_210_2_0;
  double r_211_scalar_0_0 = alpha_cross_linear_1_0_0;
  double r_212_scalar_0_0 = alpha_cross_linear_1_1_0;
  double r_213_scalar_0_0 = alpha_cross_linear_1_2_0;
  double r_214_scalar_0_0 = alpha_cross_angular_1_0_0;
  double r_215_scalar_0_0 = alpha_cross_angular_1_1_0;
  double r_216_scalar_0_0 = alpha_cross_angular_1_2_0;
  double r_217_0_0 = r_211_scalar_0_0;
  double r_217_1_0 = r_212_scalar_0_0;
  double r_217_2_0 = r_213_scalar_0_0;
  double r_217_3_0 = r_214_scalar_0_0;
  double r_217_4_0 = r_215_scalar_0_0;
  double r_217_5_0 = r_216_scalar_0_0;
  double alpha_cross_1_0_0 = r_217_0_0;
  double alpha_cross_1_1_0 = r_217_1_0;
  double alpha_cross_1_2_0 = r_217_2_0;
  double alpha_cross_1_3_0 = r_217_3_0;
  double alpha_cross_1_4_0 = r_217_4_0;
  double alpha_cross_1_5_0 = r_217_5_0;
  double r_218_scalar_0_0 = a_1_0;
  double r_219_scalar_0_0 = alpha_cross_1_5_0;
  double r_220_add_0_0 = (r_218_scalar_0_0 + r_219_scalar_0_0);
  double r_221_scalar_0_0 = alpha_cross_1_0_0;
  double r_222_scalar_0_0 = alpha_cross_1_1_0;
  double r_223_scalar_0_0 = alpha_cross_1_2_0;
  double r_224_scalar_0_0 = alpha_cross_1_3_0;
  double r_225_scalar_0_0 = alpha_cross_1_4_0;
  double r_226_0_0 = r_221_scalar_0_0;
  double r_226_1_0 = r_222_scalar_0_0;
  double r_226_2_0 = r_223_scalar_0_0;
  double r_226_3_0 = r_224_scalar_0_0;
  double r_226_4_0 = r_225_scalar_0_0;
  double r_226_5_0 = r_220_add_0_0;
  double r_227_scalar_0_0 = r_106_0_0;
  double r_228_scalar_0_0 = r_106_1_0;
  double r_229_scalar_0_0 = r_106_2_0;
  double r_230_0_0 = r_227_scalar_0_0;
  double r_230_1_0 = r_228_scalar_0_0;
  double r_230_2_0 = r_229_scalar_0_0;
  double r_231_scalar_0_0 = r_106_3_0;
  double r_232_scalar_0_0 = r_106_4_0;
  double r_233_scalar_0_0 = r_106_5_0;
  double r_234_0_0 = r_231_scalar_0_0;
  double r_234_1_0 = r_232_scalar_0_0;
  double r_234_2_0 = r_233_scalar_0_0;
  double r_235_vector_cross_0_0 = ((limi_translation_1_1_0 * r_234_2_0) - (limi_translation_1_2_0 * r_234_1_0));
  double r_235_vector_cross_1_0 = ((limi_translation_1_2_0 * r_234_0_0) - (limi_translation_1_0_0 * r_234_2_0));
  double r_235_vector_cross_2_0 = ((limi_translation_1_0_0 * r_234_1_0) - (limi_translation_1_1_0 * r_234_0_0));
  double r_236_sub_0_0 = (r_230_0_0 - r_235_vector_cross_0_0);
  double r_236_sub_1_0 = (r_230_1_0 - r_235_vector_cross_1_0);
  double r_236_sub_2_0 = (r_230_2_0 - r_235_vector_cross_2_0);
  double r_237_transpose_0_0 = limi_rotation_1_0_0;
  double r_237_transpose_0_1 = limi_rotation_1_1_0;
  double r_237_transpose_0_2 = limi_rotation_1_2_0;
  double r_237_transpose_1_0 = limi_rotation_1_0_1;
  double r_237_transpose_1_1 = limi_rotation_1_1_1;
  double r_237_transpose_1_2 = limi_rotation_1_2_1;
  double r_237_transpose_2_0 = limi_rotation_1_0_2;
  double r_237_transpose_2_1 = limi_rotation_1_1_2;
  double r_237_transpose_2_2 = limi_rotation_1_2_2;
  double r_238_mul_0_0 = (((r_237_transpose_0_0 * r_236_sub_0_0) + (r_237_transpose_0_1 * r_236_sub_1_0)) + (r_237_transpose_0_2 * r_236_sub_2_0));
  double r_238_mul_1_0 = (((r_237_transpose_1_0 * r_236_sub_0_0) + (r_237_transpose_1_1 * r_236_sub_1_0)) + (r_237_transpose_1_2 * r_236_sub_2_0));
  double r_238_mul_2_0 = (((r_237_transpose_2_0 * r_236_sub_0_0) + (r_237_transpose_2_1 * r_236_sub_1_0)) + (r_237_transpose_2_2 * r_236_sub_2_0));
  double r_239_mul_0_0 = (((r_237_transpose_0_0 * r_234_0_0) + (r_237_transpose_0_1 * r_234_1_0)) + (r_237_transpose_0_2 * r_234_2_0));
  double r_239_mul_1_0 = (((r_237_transpose_1_0 * r_234_0_0) + (r_237_transpose_1_1 * r_234_1_0)) + (r_237_transpose_1_2 * r_234_2_0));
  double r_239_mul_2_0 = (((r_237_transpose_2_0 * r_234_0_0) + (r_237_transpose_2_1 * r_234_1_0)) + (r_237_transpose_2_2 * r_234_2_0));
  double r_240_scalar_0_0 = r_238_mul_0_0;
  double r_241_scalar_0_0 = r_238_mul_1_0;
  double r_242_scalar_0_0 = r_238_mul_2_0;
  double r_243_scalar_0_0 = r_239_mul_0_0;
  double r_244_scalar_0_0 = r_239_mul_1_0;
  double r_245_scalar_0_0 = r_239_mul_2_0;
  double r_246_0_0 = r_240_scalar_0_0;
  double r_246_1_0 = r_241_scalar_0_0;
  double r_246_2_0 = r_242_scalar_0_0;
  double r_246_3_0 = r_243_scalar_0_0;
  double r_246_4_0 = r_244_scalar_0_0;
  double r_246_5_0 = r_245_scalar_0_0;
  double act_inv_1_0_0 = r_246_0_0;
  double act_inv_1_1_0 = r_246_1_0;
  double act_inv_1_2_0 = r_246_2_0;
  double act_inv_1_3_0 = r_246_3_0;
  double act_inv_1_4_0 = r_246_4_0;
  double act_inv_1_5_0 = r_246_5_0;
  double r_247_add_0_0 = (r_226_0_0 + act_inv_1_0_0);
  double r_247_add_1_0 = (r_226_1_0 + act_inv_1_1_0);
  double r_247_add_2_0 = (r_226_2_0 + act_inv_1_2_0);
  double r_247_add_3_0 = (r_226_3_0 + act_inv_1_3_0);
  double r_247_add_4_0 = (r_226_4_0 + act_inv_1_4_0);
  double r_247_add_5_0 = (r_226_5_0 + act_inv_1_5_0);
  double r_248_scalar_0_0 = qcos_2_0;
  double r_249_scalar_0_0 = qsin_2_0;
  double r_250_matrix_negate_0_0 = -(r_249_scalar_0_0);
  double r_251_0_0 = 0;
  double r_252_scalar_0_0 = qsin_2_0;
  double r_253_scalar_0_0 = qcos_2_0;
  double r_254_0_0 = 0;
  double r_255_0_0 = 0;
  double r_256_0_0 = 0;
  double r_257_0_0 = 1;
  double r_258_0_0 = r_248_scalar_0_0;
  double r_258_0_1 = r_250_matrix_negate_0_0;
  double r_258_0_2 = r_251_0_0;
  double r_258_1_0 = r_252_scalar_0_0;
  double r_258_1_1 = r_253_scalar_0_0;
  double r_258_1_2 = r_254_0_0;
  double r_258_2_0 = r_255_0_0;
  double r_258_2_1 = r_256_0_0;
  double r_258_2_2 = r_257_0_0;
  double r_259_0_0 = 1;
  double r_260_0_0 = 0;
  double r_261_0_0 = 1;
  double r_262_0_0 = 0;
  double r_263_0_0 = 1;
  double r_264_0_0 = 0;
  double r_265_mul_0_0 = (r_263_0_0 * r_261_0_0);
  double r_266_mul_0_0 = (r_263_0_0 * r_262_0_0);
  double r_267_mul_0_0 = (r_266_mul_0_0 * r_260_0_0);
  double r_268_mul_0_0 = (r_264_0_0 * r_259_0_0);
  double r_269_sub_0_0 = (r_267_mul_0_0 - r_268_mul_0_0);
  double r_270_mul_0_0 = (r_263_0_0 * r_262_0_0);
  double r_271_mul_0_0 = (r_270_mul_0_0 * r_259_0_0);
  double r_272_mul_0_0 = (r_264_0_0 * r_260_0_0);
  double r_273_add_0_0 = (r_271_mul_0_0 + r_272_mul_0_0);
  double r_274_mul_0_0 = (r_264_0_0 * r_261_0_0);
  double r_275_mul_0_0 = (r_264_0_0 * r_262_0_0);
  double r_276_mul_0_0 = (r_275_mul_0_0 * r_260_0_0);
  double r_277_mul_0_0 = (r_263_0_0 * r_259_0_0);
  double r_278_add_0_0 = (r_276_mul_0_0 + r_277_mul_0_0);
  double r_279_mul_0_0 = (r_264_0_0 * r_262_0_0);
  double r_280_mul_0_0 = (r_279_mul_0_0 * r_259_0_0);
  double r_281_mul_0_0 = (r_263_0_0 * r_260_0_0);
  double r_282_sub_0_0 = (r_280_mul_0_0 - r_281_mul_0_0);
  double r_283_matrix_negate_0_0 = -(r_262_0_0);
  double r_284_mul_0_0 = (r_261_0_0 * r_260_0_0);
  double r_285_mul_0_0 = (r_261_0_0 * r_259_0_0);
  double r_286_0_0 = r_265_mul_0_0;
  double r_286_0_1 = r_269_sub_0_0;
  double r_286_0_2 = r_273_add_0_0;
  double r_286_1_0 = r_274_mul_0_0;
  double r_286_1_1 = r_278_add_0_0;
  double r_286_1_2 = r_282_sub_0_0;
  double r_286_2_0 = r_283_matrix_negate_0_0;
  double r_286_2_1 = r_284_mul_0_0;
  double r_286_2_2 = r_285_mul_0_0;
  double r_287_mul_0_0 = (((r_286_0_0 * r_258_0_0) + (r_286_0_1 * r_258_1_0)) + (r_286_0_2 * r_258_2_0));
  double r_287_mul_0_1 = (((r_286_0_0 * r_258_0_1) + (r_286_0_1 * r_258_1_1)) + (r_286_0_2 * r_258_2_1));
  double r_287_mul_0_2 = (((r_286_0_0 * r_258_0_2) + (r_286_0_1 * r_258_1_2)) + (r_286_0_2 * r_258_2_2));
  double r_287_mul_1_0 = (((r_286_1_0 * r_258_0_0) + (r_286_1_1 * r_258_1_0)) + (r_286_1_2 * r_258_2_0));
  double r_287_mul_1_1 = (((r_286_1_0 * r_258_0_1) + (r_286_1_1 * r_258_1_1)) + (r_286_1_2 * r_258_2_1));
  double r_287_mul_1_2 = (((r_286_1_0 * r_258_0_2) + (r_286_1_1 * r_258_1_2)) + (r_286_1_2 * r_258_2_2));
  double r_287_mul_2_0 = (((r_286_2_0 * r_258_0_0) + (r_286_2_1 * r_258_1_0)) + (r_286_2_2 * r_258_2_0));
  double r_287_mul_2_1 = (((r_286_2_0 * r_258_0_1) + (r_286_2_1 * r_258_1_1)) + (r_286_2_2 * r_258_2_1));
  double r_287_mul_2_2 = (((r_286_2_0 * r_258_0_2) + (r_286_2_1 * r_258_1_2)) + (r_286_2_2 * r_258_2_2));
  double limi_rotation_2_0_0 = r_287_mul_0_0;
  double limi_rotation_2_0_1 = r_287_mul_0_1;
  double limi_rotation_2_0_2 = r_287_mul_0_2;
  double limi_rotation_2_1_0 = r_287_mul_1_0;
  double limi_rotation_2_1_1 = r_287_mul_1_1;
  double limi_rotation_2_1_2 = r_287_mul_1_2;
  double limi_rotation_2_2_0 = r_287_mul_2_0;
  double limi_rotation_2_2_1 = r_287_mul_2_1;
  double limi_rotation_2_2_2 = r_287_mul_2_2;
  double r_288_mul_0_0 = (((r_147_mul_0_0 * limi_rotation_2_0_0) + (r_147_mul_0_1 * limi_rotation_2_1_0)) + (r_147_mul_0_2 * limi_rotation_2_2_0));
  double r_288_mul_0_1 = (((r_147_mul_0_0 * limi_rotation_2_0_1) + (r_147_mul_0_1 * limi_rotation_2_1_1)) + (r_147_mul_0_2 * limi_rotation_2_2_1));
  double r_288_mul_0_2 = (((r_147_mul_0_0 * limi_rotation_2_0_2) + (r_147_mul_0_1 * limi_rotation_2_1_2)) + (r_147_mul_0_2 * limi_rotation_2_2_2));
  double r_288_mul_1_0 = (((r_147_mul_1_0 * limi_rotation_2_0_0) + (r_147_mul_1_1 * limi_rotation_2_1_0)) + (r_147_mul_1_2 * limi_rotation_2_2_0));
  double r_288_mul_1_1 = (((r_147_mul_1_0 * limi_rotation_2_0_1) + (r_147_mul_1_1 * limi_rotation_2_1_1)) + (r_147_mul_1_2 * limi_rotation_2_2_1));
  double r_288_mul_1_2 = (((r_147_mul_1_0 * limi_rotation_2_0_2) + (r_147_mul_1_1 * limi_rotation_2_1_2)) + (r_147_mul_1_2 * limi_rotation_2_2_2));
  double r_288_mul_2_0 = (((r_147_mul_2_0 * limi_rotation_2_0_0) + (r_147_mul_2_1 * limi_rotation_2_1_0)) + (r_147_mul_2_2 * limi_rotation_2_2_0));
  double r_288_mul_2_1 = (((r_147_mul_2_0 * limi_rotation_2_0_1) + (r_147_mul_2_1 * limi_rotation_2_1_1)) + (r_147_mul_2_2 * limi_rotation_2_2_1));
  double r_288_mul_2_2 = (((r_147_mul_2_0 * limi_rotation_2_0_2) + (r_147_mul_2_1 * limi_rotation_2_1_2)) + (r_147_mul_2_2 * limi_rotation_2_2_2));
  double r_289_mul_0_0 = (((r_147_mul_0_0 * limi_translation_2_0_0) + (r_147_mul_0_1 * limi_translation_2_1_0)) + (r_147_mul_0_2 * limi_translation_2_2_0));
  double r_289_mul_1_0 = (((r_147_mul_1_0 * limi_translation_2_0_0) + (r_147_mul_1_1 * limi_translation_2_1_0)) + (r_147_mul_1_2 * limi_translation_2_2_0));
  double r_289_mul_2_0 = (((r_147_mul_2_0 * limi_translation_2_0_0) + (r_147_mul_2_1 * limi_translation_2_1_0)) + (r_147_mul_2_2 * limi_translation_2_2_0));
  double r_290_add_0_0 = (r_149_add_0_0 + r_289_mul_0_0);
  double r_290_add_1_0 = (r_149_add_1_0 + r_289_mul_1_0);
  double r_290_add_2_0 = (r_149_add_2_0 + r_289_mul_2_0);
  double r_291_0_0 = 0;
  double r_292_0_0 = 0;
  double r_293_0_0 = 0;
  double r_294_0_0 = 0;
  double r_295_0_0 = 0;
  double r_296_scalar_0_0 = v_2_0;
  double r_297_0_0 = r_291_0_0;
  double r_297_1_0 = r_292_0_0;
  double r_297_2_0 = r_293_0_0;
  double r_297_3_0 = r_294_0_0;
  double r_297_4_0 = r_295_0_0;
  double r_297_5_0 = r_296_scalar_0_0;
  double r_298_scalar_0_0 = act_motion_inv_1_0_0;
  double r_299_scalar_0_0 = act_motion_inv_1_1_0;
  double r_300_scalar_0_0 = act_motion_inv_1_2_0;
  double r_301_0_0 = r_298_scalar_0_0;
  double r_301_1_0 = r_299_scalar_0_0;
  double r_301_2_0 = r_300_scalar_0_0;
  double r_302_scalar_0_0 = act_motion_inv_1_3_0;
  double r_303_scalar_0_0 = act_motion_inv_1_4_0;
  double r_304_scalar_0_0 = act_motion_inv_1_5_0;
  double r_305_0_0 = r_302_scalar_0_0;
  double r_305_1_0 = r_303_scalar_0_0;
  double r_305_2_0 = r_304_scalar_0_0;
  double r_306_scalar_0_0 = r_297_0_0;
  double r_307_scalar_0_0 = r_297_1_0;
  double r_308_scalar_0_0 = r_297_2_0;
  double r_309_0_0 = r_306_scalar_0_0;
  double r_309_1_0 = r_307_scalar_0_0;
  double r_309_2_0 = r_308_scalar_0_0;
  double r_310_scalar_0_0 = r_297_3_0;
  double r_311_scalar_0_0 = r_297_4_0;
  double r_312_scalar_0_0 = r_297_5_0;
  double r_313_0_0 = r_310_scalar_0_0;
  double r_313_1_0 = r_311_scalar_0_0;
  double r_313_2_0 = r_312_scalar_0_0;
  double r_314_vector_cross_0_0 = ((limi_translation_2_1_0 * r_305_2_0) - (limi_translation_2_2_0 * r_305_1_0));
  double r_314_vector_cross_1_0 = ((limi_translation_2_2_0 * r_305_0_0) - (limi_translation_2_0_0 * r_305_2_0));
  double r_314_vector_cross_2_0 = ((limi_translation_2_0_0 * r_305_1_0) - (limi_translation_2_1_0 * r_305_0_0));
  double r_315_sub_0_0 = (r_301_0_0 - r_314_vector_cross_0_0);
  double r_315_sub_1_0 = (r_301_1_0 - r_314_vector_cross_1_0);
  double r_315_sub_2_0 = (r_301_2_0 - r_314_vector_cross_2_0);
  double r_316_transpose_0_0 = limi_rotation_2_0_0;
  double r_316_transpose_0_1 = limi_rotation_2_1_0;
  double r_316_transpose_0_2 = limi_rotation_2_2_0;
  double r_316_transpose_1_0 = limi_rotation_2_0_1;
  double r_316_transpose_1_1 = limi_rotation_2_1_1;
  double r_316_transpose_1_2 = limi_rotation_2_2_1;
  double r_316_transpose_2_0 = limi_rotation_2_0_2;
  double r_316_transpose_2_1 = limi_rotation_2_1_2;
  double r_316_transpose_2_2 = limi_rotation_2_2_2;
  double r_317_mul_0_0 = (((r_316_transpose_0_0 * r_315_sub_0_0) + (r_316_transpose_0_1 * r_315_sub_1_0)) + (r_316_transpose_0_2 * r_315_sub_2_0));
  double r_317_mul_1_0 = (((r_316_transpose_1_0 * r_315_sub_0_0) + (r_316_transpose_1_1 * r_315_sub_1_0)) + (r_316_transpose_1_2 * r_315_sub_2_0));
  double r_317_mul_2_0 = (((r_316_transpose_2_0 * r_315_sub_0_0) + (r_316_transpose_2_1 * r_315_sub_1_0)) + (r_316_transpose_2_2 * r_315_sub_2_0));
  double r_318_add_0_0 = (r_309_0_0 + r_317_mul_0_0);
  double r_318_add_1_0 = (r_309_1_0 + r_317_mul_1_0);
  double r_318_add_2_0 = (r_309_2_0 + r_317_mul_2_0);
  double r_319_mul_0_0 = (((r_316_transpose_0_0 * r_305_0_0) + (r_316_transpose_0_1 * r_305_1_0)) + (r_316_transpose_0_2 * r_305_2_0));
  double r_319_mul_1_0 = (((r_316_transpose_1_0 * r_305_0_0) + (r_316_transpose_1_1 * r_305_1_0)) + (r_316_transpose_1_2 * r_305_2_0));
  double r_319_mul_2_0 = (((r_316_transpose_2_0 * r_305_0_0) + (r_316_transpose_2_1 * r_305_1_0)) + (r_316_transpose_2_2 * r_305_2_0));
  double r_320_add_0_0 = (r_313_0_0 + r_319_mul_0_0);
  double r_320_add_1_0 = (r_313_1_0 + r_319_mul_1_0);
  double r_320_add_2_0 = (r_313_2_0 + r_319_mul_2_0);
  double r_321_scalar_0_0 = r_318_add_0_0;
  double r_322_scalar_0_0 = r_318_add_1_0;
  double r_323_scalar_0_0 = r_318_add_2_0;
  double r_324_scalar_0_0 = r_320_add_0_0;
  double r_325_scalar_0_0 = r_320_add_1_0;
  double r_326_scalar_0_0 = r_320_add_2_0;
  double r_327_0_0 = r_321_scalar_0_0;
  double r_327_1_0 = r_322_scalar_0_0;
  double r_327_2_0 = r_323_scalar_0_0;
  double r_327_3_0 = r_324_scalar_0_0;
  double r_327_4_0 = r_325_scalar_0_0;
  double r_327_5_0 = r_326_scalar_0_0;
  double act_motion_inv_2_0_0 = r_327_0_0;
  double act_motion_inv_2_1_0 = r_327_1_0;
  double act_motion_inv_2_2_0 = r_327_2_0;
  double act_motion_inv_2_3_0 = r_327_3_0;
  double act_motion_inv_2_4_0 = r_327_4_0;
  double act_motion_inv_2_5_0 = r_327_5_0;
  double r_328_scalar_0_0 = v_2_0;
  double r_329_matrix_negate_0_0 = -(r_328_scalar_0_0);
  double r_330_scalar_0_0 = act_motion_inv_2_0_0;
  double r_331_scalar_0_0 = act_motion_inv_2_1_0;
  double r_332_scalar_0_0 = act_motion_inv_2_2_0;
  double r_333_0_0 = r_330_scalar_0_0;
  double r_333_1_0 = r_331_scalar_0_0;
  double r_333_2_0 = r_332_scalar_0_0;
  double r_334_scalar_0_0 = act_motion_inv_2_3_0;
  double r_335_scalar_0_0 = act_motion_inv_2_4_0;
  double r_336_scalar_0_0 = act_motion_inv_2_5_0;
  double r_337_0_0 = r_334_scalar_0_0;
  double r_337_1_0 = r_335_scalar_0_0;
  double r_337_2_0 = r_336_scalar_0_0;
  double r_338_matrix_negate_0_0 = -(r_329_matrix_negate_0_0);
  double r_339_scalar_0_0 = r_333_1_0;
  double r_340_mul_0_0 = (r_338_matrix_negate_0_0 * r_339_scalar_0_0);
  double r_341_scalar_0_0 = r_333_0_0;
  double r_342_mul_0_0 = (r_329_matrix_negate_0_0 * r_341_scalar_0_0);
  double r_343_0_0 = 0;
  double r_344_0_0 = r_340_mul_0_0;
  double r_344_1_0 = r_342_mul_0_0;
  double r_344_2_0 = r_343_0_0;
  double alpha_cross_linear_2_0_0 = r_344_0_0;
  double alpha_cross_linear_2_1_0 = r_344_1_0;
  double alpha_cross_linear_2_2_0 = r_344_2_0;
  double r_345_matrix_negate_0_0 = -(r_329_matrix_negate_0_0);
  double r_346_scalar_0_0 = r_337_1_0;
  double r_347_mul_0_0 = (r_345_matrix_negate_0_0 * r_346_scalar_0_0);
  double r_348_scalar_0_0 = r_337_0_0;
  double r_349_mul_0_0 = (r_329_matrix_negate_0_0 * r_348_scalar_0_0);
  double r_350_0_0 = 0;
  double r_351_0_0 = r_347_mul_0_0;
  double r_351_1_0 = r_349_mul_0_0;
  double r_351_2_0 = r_350_0_0;
  double alpha_cross_angular_2_0_0 = r_351_0_0;
  double alpha_cross_angular_2_1_0 = r_351_1_0;
  double alpha_cross_angular_2_2_0 = r_351_2_0;
  double r_352_scalar_0_0 = alpha_cross_linear_2_0_0;
  double r_353_scalar_0_0 = alpha_cross_linear_2_1_0;
  double r_354_scalar_0_0 = alpha_cross_linear_2_2_0;
  double r_355_scalar_0_0 = alpha_cross_angular_2_0_0;
  double r_356_scalar_0_0 = alpha_cross_angular_2_1_0;
  double r_357_scalar_0_0 = alpha_cross_angular_2_2_0;
  double r_358_0_0 = r_352_scalar_0_0;
  double r_358_1_0 = r_353_scalar_0_0;
  double r_358_2_0 = r_354_scalar_0_0;
  double r_358_3_0 = r_355_scalar_0_0;
  double r_358_4_0 = r_356_scalar_0_0;
  double r_358_5_0 = r_357_scalar_0_0;
  double alpha_cross_2_0_0 = r_358_0_0;
  double alpha_cross_2_1_0 = r_358_1_0;
  double alpha_cross_2_2_0 = r_358_2_0;
  double alpha_cross_2_3_0 = r_358_3_0;
  double alpha_cross_2_4_0 = r_358_4_0;
  double alpha_cross_2_5_0 = r_358_5_0;
  double r_359_scalar_0_0 = a_2_0;
  double r_360_scalar_0_0 = alpha_cross_2_5_0;
  double r_361_add_0_0 = (r_359_scalar_0_0 + r_360_scalar_0_0);
  double r_362_scalar_0_0 = alpha_cross_2_0_0;
  double r_363_scalar_0_0 = alpha_cross_2_1_0;
  double r_364_scalar_0_0 = alpha_cross_2_2_0;
  double r_365_scalar_0_0 = alpha_cross_2_3_0;
  double r_366_scalar_0_0 = alpha_cross_2_4_0;
  double r_367_0_0 = r_362_scalar_0_0;
  double r_367_1_0 = r_363_scalar_0_0;
  double r_367_2_0 = r_364_scalar_0_0;
  double r_367_3_0 = r_365_scalar_0_0;
  double r_367_4_0 = r_366_scalar_0_0;
  double r_367_5_0 = r_361_add_0_0;
  double r_368_scalar_0_0 = r_247_add_0_0;
  double r_369_scalar_0_0 = r_247_add_1_0;
  double r_370_scalar_0_0 = r_247_add_2_0;
  double r_371_0_0 = r_368_scalar_0_0;
  double r_371_1_0 = r_369_scalar_0_0;
  double r_371_2_0 = r_370_scalar_0_0;
  double r_372_scalar_0_0 = r_247_add_3_0;
  double r_373_scalar_0_0 = r_247_add_4_0;
  double r_374_scalar_0_0 = r_247_add_5_0;
  double r_375_0_0 = r_372_scalar_0_0;
  double r_375_1_0 = r_373_scalar_0_0;
  double r_375_2_0 = r_374_scalar_0_0;
  double r_376_vector_cross_0_0 = ((limi_translation_2_1_0 * r_375_2_0) - (limi_translation_2_2_0 * r_375_1_0));
  double r_376_vector_cross_1_0 = ((limi_translation_2_2_0 * r_375_0_0) - (limi_translation_2_0_0 * r_375_2_0));
  double r_376_vector_cross_2_0 = ((limi_translation_2_0_0 * r_375_1_0) - (limi_translation_2_1_0 * r_375_0_0));
  double r_377_sub_0_0 = (r_371_0_0 - r_376_vector_cross_0_0);
  double r_377_sub_1_0 = (r_371_1_0 - r_376_vector_cross_1_0);
  double r_377_sub_2_0 = (r_371_2_0 - r_376_vector_cross_2_0);
  double r_378_transpose_0_0 = limi_rotation_2_0_0;
  double r_378_transpose_0_1 = limi_rotation_2_1_0;
  double r_378_transpose_0_2 = limi_rotation_2_2_0;
  double r_378_transpose_1_0 = limi_rotation_2_0_1;
  double r_378_transpose_1_1 = limi_rotation_2_1_1;
  double r_378_transpose_1_2 = limi_rotation_2_2_1;
  double r_378_transpose_2_0 = limi_rotation_2_0_2;
  double r_378_transpose_2_1 = limi_rotation_2_1_2;
  double r_378_transpose_2_2 = limi_rotation_2_2_2;
  double r_379_mul_0_0 = (((r_378_transpose_0_0 * r_377_sub_0_0) + (r_378_transpose_0_1 * r_377_sub_1_0)) + (r_378_transpose_0_2 * r_377_sub_2_0));
  double r_379_mul_1_0 = (((r_378_transpose_1_0 * r_377_sub_0_0) + (r_378_transpose_1_1 * r_377_sub_1_0)) + (r_378_transpose_1_2 * r_377_sub_2_0));
  double r_379_mul_2_0 = (((r_378_transpose_2_0 * r_377_sub_0_0) + (r_378_transpose_2_1 * r_377_sub_1_0)) + (r_378_transpose_2_2 * r_377_sub_2_0));
  double r_380_mul_0_0 = (((r_378_transpose_0_0 * r_375_0_0) + (r_378_transpose_0_1 * r_375_1_0)) + (r_378_transpose_0_2 * r_375_2_0));
  double r_380_mul_1_0 = (((r_378_transpose_1_0 * r_375_0_0) + (r_378_transpose_1_1 * r_375_1_0)) + (r_378_transpose_1_2 * r_375_2_0));
  double r_380_mul_2_0 = (((r_378_transpose_2_0 * r_375_0_0) + (r_378_transpose_2_1 * r_375_1_0)) + (r_378_transpose_2_2 * r_375_2_0));
  double r_381_scalar_0_0 = r_379_mul_0_0;
  double r_382_scalar_0_0 = r_379_mul_1_0;
  double r_383_scalar_0_0 = r_379_mul_2_0;
  double r_384_scalar_0_0 = r_380_mul_0_0;
  double r_385_scalar_0_0 = r_380_mul_1_0;
  double r_386_scalar_0_0 = r_380_mul_2_0;
  double r_387_0_0 = r_381_scalar_0_0;
  double r_387_1_0 = r_382_scalar_0_0;
  double r_387_2_0 = r_383_scalar_0_0;
  double r_387_3_0 = r_384_scalar_0_0;
  double r_387_4_0 = r_385_scalar_0_0;
  double r_387_5_0 = r_386_scalar_0_0;
  double act_inv_2_0_0 = r_387_0_0;
  double act_inv_2_1_0 = r_387_1_0;
  double act_inv_2_2_0 = r_387_2_0;
  double act_inv_2_3_0 = r_387_3_0;
  double act_inv_2_4_0 = r_387_4_0;
  double act_inv_2_5_0 = r_387_5_0;
  double r_388_add_0_0 = (r_367_0_0 + act_inv_2_0_0);
  double r_388_add_1_0 = (r_367_1_0 + act_inv_2_1_0);
  double r_388_add_2_0 = (r_367_2_0 + act_inv_2_2_0);
  double r_388_add_3_0 = (r_367_3_0 + act_inv_2_3_0);
  double r_388_add_4_0 = (r_367_4_0 + act_inv_2_4_0);
  double r_388_add_5_0 = (r_367_5_0 + act_inv_2_5_0);
  double r_389_scalar_0_0 = qcos_3_0;
  double r_390_scalar_0_0 = qsin_3_0;
  double r_391_matrix_negate_0_0 = -(r_390_scalar_0_0);
  double r_392_0_0 = 0;
  double r_393_scalar_0_0 = qsin_3_0;
  double r_394_scalar_0_0 = qcos_3_0;
  double r_395_0_0 = 0;
  double r_396_0_0 = 0;
  double r_397_0_0 = 0;
  double r_398_0_0 = 1;
  double r_399_0_0 = r_389_scalar_0_0;
  double r_399_0_1 = r_391_matrix_negate_0_0;
  double r_399_0_2 = r_392_0_0;
  double r_399_1_0 = r_393_scalar_0_0;
  double r_399_1_1 = r_394_scalar_0_0;
  double r_399_1_2 = r_395_0_0;
  double r_399_2_0 = r_396_0_0;
  double r_399_2_1 = r_397_0_0;
  double r_399_2_2 = r_398_0_0;
  double r_400_0_0 = 0;
  double r_401_0_0 = -1;
  double r_402_0_0 = 1;
  double r_403_0_0 = 0;
  double r_404_0_0 = 0;
  double r_405_0_0 = 1;
  double r_406_mul_0_0 = (r_404_0_0 * r_402_0_0);
  double r_407_mul_0_0 = (r_404_0_0 * r_403_0_0);
  double r_408_mul_0_0 = (r_407_mul_0_0 * r_401_0_0);
  double r_409_mul_0_0 = (r_405_0_0 * r_400_0_0);
  double r_410_sub_0_0 = (r_408_mul_0_0 - r_409_mul_0_0);
  double r_411_mul_0_0 = (r_404_0_0 * r_403_0_0);
  double r_412_mul_0_0 = (r_411_mul_0_0 * r_400_0_0);
  double r_413_mul_0_0 = (r_405_0_0 * r_401_0_0);
  double r_414_add_0_0 = (r_412_mul_0_0 + r_413_mul_0_0);
  double r_415_mul_0_0 = (r_405_0_0 * r_402_0_0);
  double r_416_mul_0_0 = (r_405_0_0 * r_403_0_0);
  double r_417_mul_0_0 = (r_416_mul_0_0 * r_401_0_0);
  double r_418_mul_0_0 = (r_404_0_0 * r_400_0_0);
  double r_419_add_0_0 = (r_417_mul_0_0 + r_418_mul_0_0);
  double r_420_mul_0_0 = (r_405_0_0 * r_403_0_0);
  double r_421_mul_0_0 = (r_420_mul_0_0 * r_400_0_0);
  double r_422_mul_0_0 = (r_404_0_0 * r_401_0_0);
  double r_423_sub_0_0 = (r_421_mul_0_0 - r_422_mul_0_0);
  double r_424_matrix_negate_0_0 = -(r_403_0_0);
  double r_425_mul_0_0 = (r_402_0_0 * r_401_0_0);
  double r_426_mul_0_0 = (r_402_0_0 * r_400_0_0);
  double r_427_0_0 = r_406_mul_0_0;
  double r_427_0_1 = r_410_sub_0_0;
  double r_427_0_2 = r_414_add_0_0;
  double r_427_1_0 = r_415_mul_0_0;
  double r_427_1_1 = r_419_add_0_0;
  double r_427_1_2 = r_423_sub_0_0;
  double r_427_2_0 = r_424_matrix_negate_0_0;
  double r_427_2_1 = r_425_mul_0_0;
  double r_427_2_2 = r_426_mul_0_0;
  double r_428_mul_0_0 = (((r_427_0_0 * r_399_0_0) + (r_427_0_1 * r_399_1_0)) + (r_427_0_2 * r_399_2_0));
  double r_428_mul_0_1 = (((r_427_0_0 * r_399_0_1) + (r_427_0_1 * r_399_1_1)) + (r_427_0_2 * r_399_2_1));
  double r_428_mul_0_2 = (((r_427_0_0 * r_399_0_2) + (r_427_0_1 * r_399_1_2)) + (r_427_0_2 * r_399_2_2));
  double r_428_mul_1_0 = (((r_427_1_0 * r_399_0_0) + (r_427_1_1 * r_399_1_0)) + (r_427_1_2 * r_399_2_0));
  double r_428_mul_1_1 = (((r_427_1_0 * r_399_0_1) + (r_427_1_1 * r_399_1_1)) + (r_427_1_2 * r_399_2_1));
  double r_428_mul_1_2 = (((r_427_1_0 * r_399_0_2) + (r_427_1_1 * r_399_1_2)) + (r_427_1_2 * r_399_2_2));
  double r_428_mul_2_0 = (((r_427_2_0 * r_399_0_0) + (r_427_2_1 * r_399_1_0)) + (r_427_2_2 * r_399_2_0));
  double r_428_mul_2_1 = (((r_427_2_0 * r_399_0_1) + (r_427_2_1 * r_399_1_1)) + (r_427_2_2 * r_399_2_1));
  double r_428_mul_2_2 = (((r_427_2_0 * r_399_0_2) + (r_427_2_1 * r_399_1_2)) + (r_427_2_2 * r_399_2_2));
  double limi_rotation_3_0_0 = r_428_mul_0_0;
  double limi_rotation_3_0_1 = r_428_mul_0_1;
  double limi_rotation_3_0_2 = r_428_mul_0_2;
  double limi_rotation_3_1_0 = r_428_mul_1_0;
  double limi_rotation_3_1_1 = r_428_mul_1_1;
  double limi_rotation_3_1_2 = r_428_mul_1_2;
  double limi_rotation_3_2_0 = r_428_mul_2_0;
  double limi_rotation_3_2_1 = r_428_mul_2_1;
  double limi_rotation_3_2_2 = r_428_mul_2_2;
  double r_429_mul_0_0 = (((r_288_mul_0_0 * limi_rotation_3_0_0) + (r_288_mul_0_1 * limi_rotation_3_1_0)) + (r_288_mul_0_2 * limi_rotation_3_2_0));
  double r_429_mul_0_1 = (((r_288_mul_0_0 * limi_rotation_3_0_1) + (r_288_mul_0_1 * limi_rotation_3_1_1)) + (r_288_mul_0_2 * limi_rotation_3_2_1));
  double r_429_mul_0_2 = (((r_288_mul_0_0 * limi_rotation_3_0_2) + (r_288_mul_0_1 * limi_rotation_3_1_2)) + (r_288_mul_0_2 * limi_rotation_3_2_2));
  double r_429_mul_1_0 = (((r_288_mul_1_0 * limi_rotation_3_0_0) + (r_288_mul_1_1 * limi_rotation_3_1_0)) + (r_288_mul_1_2 * limi_rotation_3_2_0));
  double r_429_mul_1_1 = (((r_288_mul_1_0 * limi_rotation_3_0_1) + (r_288_mul_1_1 * limi_rotation_3_1_1)) + (r_288_mul_1_2 * limi_rotation_3_2_1));
  double r_429_mul_1_2 = (((r_288_mul_1_0 * limi_rotation_3_0_2) + (r_288_mul_1_1 * limi_rotation_3_1_2)) + (r_288_mul_1_2 * limi_rotation_3_2_2));
  double r_429_mul_2_0 = (((r_288_mul_2_0 * limi_rotation_3_0_0) + (r_288_mul_2_1 * limi_rotation_3_1_0)) + (r_288_mul_2_2 * limi_rotation_3_2_0));
  double r_429_mul_2_1 = (((r_288_mul_2_0 * limi_rotation_3_0_1) + (r_288_mul_2_1 * limi_rotation_3_1_1)) + (r_288_mul_2_2 * limi_rotation_3_2_1));
  double r_429_mul_2_2 = (((r_288_mul_2_0 * limi_rotation_3_0_2) + (r_288_mul_2_1 * limi_rotation_3_1_2)) + (r_288_mul_2_2 * limi_rotation_3_2_2));
  double r_430_mul_0_0 = (((r_288_mul_0_0 * limi_translation_3_0_0) + (r_288_mul_0_1 * limi_translation_3_1_0)) + (r_288_mul_0_2 * limi_translation_3_2_0));
  double r_430_mul_1_0 = (((r_288_mul_1_0 * limi_translation_3_0_0) + (r_288_mul_1_1 * limi_translation_3_1_0)) + (r_288_mul_1_2 * limi_translation_3_2_0));
  double r_430_mul_2_0 = (((r_288_mul_2_0 * limi_translation_3_0_0) + (r_288_mul_2_1 * limi_translation_3_1_0)) + (r_288_mul_2_2 * limi_translation_3_2_0));
  double r_431_add_0_0 = (r_290_add_0_0 + r_430_mul_0_0);
  double r_431_add_1_0 = (r_290_add_1_0 + r_430_mul_1_0);
  double r_431_add_2_0 = (r_290_add_2_0 + r_430_mul_2_0);
  double r_432_0_0 = 0;
  double r_433_0_0 = 0;
  double r_434_0_0 = 0;
  double r_435_0_0 = 0;
  double r_436_0_0 = 0;
  double r_437_scalar_0_0 = v_3_0;
  double r_438_0_0 = r_432_0_0;
  double r_438_1_0 = r_433_0_0;
  double r_438_2_0 = r_434_0_0;
  double r_438_3_0 = r_435_0_0;
  double r_438_4_0 = r_436_0_0;
  double r_438_5_0 = r_437_scalar_0_0;
  double r_439_scalar_0_0 = act_motion_inv_2_0_0;
  double r_440_scalar_0_0 = act_motion_inv_2_1_0;
  double r_441_scalar_0_0 = act_motion_inv_2_2_0;
  double r_442_0_0 = r_439_scalar_0_0;
  double r_442_1_0 = r_440_scalar_0_0;
  double r_442_2_0 = r_441_scalar_0_0;
  double r_443_scalar_0_0 = act_motion_inv_2_3_0;
  double r_444_scalar_0_0 = act_motion_inv_2_4_0;
  double r_445_scalar_0_0 = act_motion_inv_2_5_0;
  double r_446_0_0 = r_443_scalar_0_0;
  double r_446_1_0 = r_444_scalar_0_0;
  double r_446_2_0 = r_445_scalar_0_0;
  double r_447_scalar_0_0 = r_438_0_0;
  double r_448_scalar_0_0 = r_438_1_0;
  double r_449_scalar_0_0 = r_438_2_0;
  double r_450_0_0 = r_447_scalar_0_0;
  double r_450_1_0 = r_448_scalar_0_0;
  double r_450_2_0 = r_449_scalar_0_0;
  double r_451_scalar_0_0 = r_438_3_0;
  double r_452_scalar_0_0 = r_438_4_0;
  double r_453_scalar_0_0 = r_438_5_0;
  double r_454_0_0 = r_451_scalar_0_0;
  double r_454_1_0 = r_452_scalar_0_0;
  double r_454_2_0 = r_453_scalar_0_0;
  double r_455_vector_cross_0_0 = ((limi_translation_3_1_0 * r_446_2_0) - (limi_translation_3_2_0 * r_446_1_0));
  double r_455_vector_cross_1_0 = ((limi_translation_3_2_0 * r_446_0_0) - (limi_translation_3_0_0 * r_446_2_0));
  double r_455_vector_cross_2_0 = ((limi_translation_3_0_0 * r_446_1_0) - (limi_translation_3_1_0 * r_446_0_0));
  double r_456_sub_0_0 = (r_442_0_0 - r_455_vector_cross_0_0);
  double r_456_sub_1_0 = (r_442_1_0 - r_455_vector_cross_1_0);
  double r_456_sub_2_0 = (r_442_2_0 - r_455_vector_cross_2_0);
  double r_457_transpose_0_0 = limi_rotation_3_0_0;
  double r_457_transpose_0_1 = limi_rotation_3_1_0;
  double r_457_transpose_0_2 = limi_rotation_3_2_0;
  double r_457_transpose_1_0 = limi_rotation_3_0_1;
  double r_457_transpose_1_1 = limi_rotation_3_1_1;
  double r_457_transpose_1_2 = limi_rotation_3_2_1;
  double r_457_transpose_2_0 = limi_rotation_3_0_2;
  double r_457_transpose_2_1 = limi_rotation_3_1_2;
  double r_457_transpose_2_2 = limi_rotation_3_2_2;
  double r_458_mul_0_0 = (((r_457_transpose_0_0 * r_456_sub_0_0) + (r_457_transpose_0_1 * r_456_sub_1_0)) + (r_457_transpose_0_2 * r_456_sub_2_0));
  double r_458_mul_1_0 = (((r_457_transpose_1_0 * r_456_sub_0_0) + (r_457_transpose_1_1 * r_456_sub_1_0)) + (r_457_transpose_1_2 * r_456_sub_2_0));
  double r_458_mul_2_0 = (((r_457_transpose_2_0 * r_456_sub_0_0) + (r_457_transpose_2_1 * r_456_sub_1_0)) + (r_457_transpose_2_2 * r_456_sub_2_0));
  double r_459_add_0_0 = (r_450_0_0 + r_458_mul_0_0);
  double r_459_add_1_0 = (r_450_1_0 + r_458_mul_1_0);
  double r_459_add_2_0 = (r_450_2_0 + r_458_mul_2_0);
  double r_460_mul_0_0 = (((r_457_transpose_0_0 * r_446_0_0) + (r_457_transpose_0_1 * r_446_1_0)) + (r_457_transpose_0_2 * r_446_2_0));
  double r_460_mul_1_0 = (((r_457_transpose_1_0 * r_446_0_0) + (r_457_transpose_1_1 * r_446_1_0)) + (r_457_transpose_1_2 * r_446_2_0));
  double r_460_mul_2_0 = (((r_457_transpose_2_0 * r_446_0_0) + (r_457_transpose_2_1 * r_446_1_0)) + (r_457_transpose_2_2 * r_446_2_0));
  double r_461_add_0_0 = (r_454_0_0 + r_460_mul_0_0);
  double r_461_add_1_0 = (r_454_1_0 + r_460_mul_1_0);
  double r_461_add_2_0 = (r_454_2_0 + r_460_mul_2_0);
  double r_462_scalar_0_0 = r_459_add_0_0;
  double r_463_scalar_0_0 = r_459_add_1_0;
  double r_464_scalar_0_0 = r_459_add_2_0;
  double r_465_scalar_0_0 = r_461_add_0_0;
  double r_466_scalar_0_0 = r_461_add_1_0;
  double r_467_scalar_0_0 = r_461_add_2_0;
  double r_468_0_0 = r_462_scalar_0_0;
  double r_468_1_0 = r_463_scalar_0_0;
  double r_468_2_0 = r_464_scalar_0_0;
  double r_468_3_0 = r_465_scalar_0_0;
  double r_468_4_0 = r_466_scalar_0_0;
  double r_468_5_0 = r_467_scalar_0_0;
  double act_motion_inv_3_0_0 = r_468_0_0;
  double act_motion_inv_3_1_0 = r_468_1_0;
  double act_motion_inv_3_2_0 = r_468_2_0;
  double act_motion_inv_3_3_0 = r_468_3_0;
  double act_motion_inv_3_4_0 = r_468_4_0;
  double act_motion_inv_3_5_0 = r_468_5_0;
  double r_469_scalar_0_0 = v_3_0;
  double r_470_matrix_negate_0_0 = -(r_469_scalar_0_0);
  double r_471_scalar_0_0 = act_motion_inv_3_0_0;
  double r_472_scalar_0_0 = act_motion_inv_3_1_0;
  double r_473_scalar_0_0 = act_motion_inv_3_2_0;
  double r_474_0_0 = r_471_scalar_0_0;
  double r_474_1_0 = r_472_scalar_0_0;
  double r_474_2_0 = r_473_scalar_0_0;
  double r_475_scalar_0_0 = act_motion_inv_3_3_0;
  double r_476_scalar_0_0 = act_motion_inv_3_4_0;
  double r_477_scalar_0_0 = act_motion_inv_3_5_0;
  double r_478_0_0 = r_475_scalar_0_0;
  double r_478_1_0 = r_476_scalar_0_0;
  double r_478_2_0 = r_477_scalar_0_0;
  double r_479_matrix_negate_0_0 = -(r_470_matrix_negate_0_0);
  double r_480_scalar_0_0 = r_474_1_0;
  double r_481_mul_0_0 = (r_479_matrix_negate_0_0 * r_480_scalar_0_0);
  double r_482_scalar_0_0 = r_474_0_0;
  double r_483_mul_0_0 = (r_470_matrix_negate_0_0 * r_482_scalar_0_0);
  double r_484_0_0 = 0;
  double r_485_0_0 = r_481_mul_0_0;
  double r_485_1_0 = r_483_mul_0_0;
  double r_485_2_0 = r_484_0_0;
  double alpha_cross_linear_3_0_0 = r_485_0_0;
  double alpha_cross_linear_3_1_0 = r_485_1_0;
  double alpha_cross_linear_3_2_0 = r_485_2_0;
  double r_486_matrix_negate_0_0 = -(r_470_matrix_negate_0_0);
  double r_487_scalar_0_0 = r_478_1_0;
  double r_488_mul_0_0 = (r_486_matrix_negate_0_0 * r_487_scalar_0_0);
  double r_489_scalar_0_0 = r_478_0_0;
  double r_490_mul_0_0 = (r_470_matrix_negate_0_0 * r_489_scalar_0_0);
  double r_491_0_0 = 0;
  double r_492_0_0 = r_488_mul_0_0;
  double r_492_1_0 = r_490_mul_0_0;
  double r_492_2_0 = r_491_0_0;
  double alpha_cross_angular_3_0_0 = r_492_0_0;
  double alpha_cross_angular_3_1_0 = r_492_1_0;
  double alpha_cross_angular_3_2_0 = r_492_2_0;
  double r_493_scalar_0_0 = alpha_cross_linear_3_0_0;
  double r_494_scalar_0_0 = alpha_cross_linear_3_1_0;
  double r_495_scalar_0_0 = alpha_cross_linear_3_2_0;
  double r_496_scalar_0_0 = alpha_cross_angular_3_0_0;
  double r_497_scalar_0_0 = alpha_cross_angular_3_1_0;
  double r_498_scalar_0_0 = alpha_cross_angular_3_2_0;
  double r_499_0_0 = r_493_scalar_0_0;
  double r_499_1_0 = r_494_scalar_0_0;
  double r_499_2_0 = r_495_scalar_0_0;
  double r_499_3_0 = r_496_scalar_0_0;
  double r_499_4_0 = r_497_scalar_0_0;
  double r_499_5_0 = r_498_scalar_0_0;
  double alpha_cross_3_0_0 = r_499_0_0;
  double alpha_cross_3_1_0 = r_499_1_0;
  double alpha_cross_3_2_0 = r_499_2_0;
  double alpha_cross_3_3_0 = r_499_3_0;
  double alpha_cross_3_4_0 = r_499_4_0;
  double alpha_cross_3_5_0 = r_499_5_0;
  double r_500_scalar_0_0 = a_3_0;
  double r_501_scalar_0_0 = alpha_cross_3_5_0;
  double r_502_add_0_0 = (r_500_scalar_0_0 + r_501_scalar_0_0);
  double r_503_scalar_0_0 = alpha_cross_3_0_0;
  double r_504_scalar_0_0 = alpha_cross_3_1_0;
  double r_505_scalar_0_0 = alpha_cross_3_2_0;
  double r_506_scalar_0_0 = alpha_cross_3_3_0;
  double r_507_scalar_0_0 = alpha_cross_3_4_0;
  double r_508_0_0 = r_503_scalar_0_0;
  double r_508_1_0 = r_504_scalar_0_0;
  double r_508_2_0 = r_505_scalar_0_0;
  double r_508_3_0 = r_506_scalar_0_0;
  double r_508_4_0 = r_507_scalar_0_0;
  double r_508_5_0 = r_502_add_0_0;
  double r_509_scalar_0_0 = r_388_add_0_0;
  double r_510_scalar_0_0 = r_388_add_1_0;
  double r_511_scalar_0_0 = r_388_add_2_0;
  double r_512_0_0 = r_509_scalar_0_0;
  double r_512_1_0 = r_510_scalar_0_0;
  double r_512_2_0 = r_511_scalar_0_0;
  double r_513_scalar_0_0 = r_388_add_3_0;
  double r_514_scalar_0_0 = r_388_add_4_0;
  double r_515_scalar_0_0 = r_388_add_5_0;
  double r_516_0_0 = r_513_scalar_0_0;
  double r_516_1_0 = r_514_scalar_0_0;
  double r_516_2_0 = r_515_scalar_0_0;
  double r_517_vector_cross_0_0 = ((limi_translation_3_1_0 * r_516_2_0) - (limi_translation_3_2_0 * r_516_1_0));
  double r_517_vector_cross_1_0 = ((limi_translation_3_2_0 * r_516_0_0) - (limi_translation_3_0_0 * r_516_2_0));
  double r_517_vector_cross_2_0 = ((limi_translation_3_0_0 * r_516_1_0) - (limi_translation_3_1_0 * r_516_0_0));
  double r_518_sub_0_0 = (r_512_0_0 - r_517_vector_cross_0_0);
  double r_518_sub_1_0 = (r_512_1_0 - r_517_vector_cross_1_0);
  double r_518_sub_2_0 = (r_512_2_0 - r_517_vector_cross_2_0);
  double r_519_transpose_0_0 = limi_rotation_3_0_0;
  double r_519_transpose_0_1 = limi_rotation_3_1_0;
  double r_519_transpose_0_2 = limi_rotation_3_2_0;
  double r_519_transpose_1_0 = limi_rotation_3_0_1;
  double r_519_transpose_1_1 = limi_rotation_3_1_1;
  double r_519_transpose_1_2 = limi_rotation_3_2_1;
  double r_519_transpose_2_0 = limi_rotation_3_0_2;
  double r_519_transpose_2_1 = limi_rotation_3_1_2;
  double r_519_transpose_2_2 = limi_rotation_3_2_2;
  double r_520_mul_0_0 = (((r_519_transpose_0_0 * r_518_sub_0_0) + (r_519_transpose_0_1 * r_518_sub_1_0)) + (r_519_transpose_0_2 * r_518_sub_2_0));
  double r_520_mul_1_0 = (((r_519_transpose_1_0 * r_518_sub_0_0) + (r_519_transpose_1_1 * r_518_sub_1_0)) + (r_519_transpose_1_2 * r_518_sub_2_0));
  double r_520_mul_2_0 = (((r_519_transpose_2_0 * r_518_sub_0_0) + (r_519_transpose_2_1 * r_518_sub_1_0)) + (r_519_transpose_2_2 * r_518_sub_2_0));
  double r_521_mul_0_0 = (((r_519_transpose_0_0 * r_516_0_0) + (r_519_transpose_0_1 * r_516_1_0)) + (r_519_transpose_0_2 * r_516_2_0));
  double r_521_mul_1_0 = (((r_519_transpose_1_0 * r_516_0_0) + (r_519_transpose_1_1 * r_516_1_0)) + (r_519_transpose_1_2 * r_516_2_0));
  double r_521_mul_2_0 = (((r_519_transpose_2_0 * r_516_0_0) + (r_519_transpose_2_1 * r_516_1_0)) + (r_519_transpose_2_2 * r_516_2_0));
  double r_522_scalar_0_0 = r_520_mul_0_0;
  double r_523_scalar_0_0 = r_520_mul_1_0;
  double r_524_scalar_0_0 = r_520_mul_2_0;
  double r_525_scalar_0_0 = r_521_mul_0_0;
  double r_526_scalar_0_0 = r_521_mul_1_0;
  double r_527_scalar_0_0 = r_521_mul_2_0;
  double r_528_0_0 = r_522_scalar_0_0;
  double r_528_1_0 = r_523_scalar_0_0;
  double r_528_2_0 = r_524_scalar_0_0;
  double r_528_3_0 = r_525_scalar_0_0;
  double r_528_4_0 = r_526_scalar_0_0;
  double r_528_5_0 = r_527_scalar_0_0;
  double act_inv_3_0_0 = r_528_0_0;
  double act_inv_3_1_0 = r_528_1_0;
  double act_inv_3_2_0 = r_528_2_0;
  double act_inv_3_3_0 = r_528_3_0;
  double act_inv_3_4_0 = r_528_4_0;
  double act_inv_3_5_0 = r_528_5_0;
  double r_529_add_0_0 = (r_508_0_0 + act_inv_3_0_0);
  double r_529_add_1_0 = (r_508_1_0 + act_inv_3_1_0);
  double r_529_add_2_0 = (r_508_2_0 + act_inv_3_2_0);
  double r_529_add_3_0 = (r_508_3_0 + act_inv_3_3_0);
  double r_529_add_4_0 = (r_508_4_0 + act_inv_3_4_0);
  double r_529_add_5_0 = (r_508_5_0 + act_inv_3_5_0);
  double r_530_scalar_0_0 = qcos_4_0;
  double r_531_scalar_0_0 = qsin_4_0;
  double r_532_matrix_negate_0_0 = -(r_531_scalar_0_0);
  double r_533_0_0 = 0;
  double r_534_scalar_0_0 = qsin_4_0;
  double r_535_scalar_0_0 = qcos_4_0;
  double r_536_0_0 = 0;
  double r_537_0_0 = 0;
  double r_538_0_0 = 0;
  double r_539_0_0 = 1;
  double r_540_0_0 = r_530_scalar_0_0;
  double r_540_0_1 = r_532_matrix_negate_0_0;
  double r_540_0_2 = r_533_0_0;
  double r_540_1_0 = r_534_scalar_0_0;
  double r_540_1_1 = r_535_scalar_0_0;
  double r_540_1_2 = r_536_0_0;
  double r_540_2_0 = r_537_0_0;
  double r_540_2_1 = r_538_0_0;
  double r_540_2_2 = r_539_0_0;
  double r_541_0_0 = 0;
  double r_542_0_0 = 1;
  double r_543_0_0 = 0;
  double r_544_0_0 = 1;
  double r_545_0_0 = 1;
  double r_546_0_0 = 0;
  double r_547_mul_0_0 = (r_545_0_0 * r_543_0_0);
  double r_548_mul_0_0 = (r_545_0_0 * r_544_0_0);
  double r_549_mul_0_0 = (r_548_mul_0_0 * r_542_0_0);
  double r_550_mul_0_0 = (r_546_0_0 * r_541_0_0);
  double r_551_sub_0_0 = (r_549_mul_0_0 - r_550_mul_0_0);
  double r_552_mul_0_0 = (r_545_0_0 * r_544_0_0);
  double r_553_mul_0_0 = (r_552_mul_0_0 * r_541_0_0);
  double r_554_mul_0_0 = (r_546_0_0 * r_542_0_0);
  double r_555_add_0_0 = (r_553_mul_0_0 + r_554_mul_0_0);
  double r_556_mul_0_0 = (r_546_0_0 * r_543_0_0);
  double r_557_mul_0_0 = (r_546_0_0 * r_544_0_0);
  double r_558_mul_0_0 = (r_557_mul_0_0 * r_542_0_0);
  double r_559_mul_0_0 = (r_545_0_0 * r_541_0_0);
  double r_560_add_0_0 = (r_558_mul_0_0 + r_559_mul_0_0);
  double r_561_mul_0_0 = (r_546_0_0 * r_544_0_0);
  double r_562_mul_0_0 = (r_561_mul_0_0 * r_541_0_0);
  double r_563_mul_0_0 = (r_545_0_0 * r_542_0_0);
  double r_564_sub_0_0 = (r_562_mul_0_0 - r_563_mul_0_0);
  double r_565_matrix_negate_0_0 = -(r_544_0_0);
  double r_566_mul_0_0 = (r_543_0_0 * r_542_0_0);
  double r_567_mul_0_0 = (r_543_0_0 * r_541_0_0);
  double r_568_0_0 = r_547_mul_0_0;
  double r_568_0_1 = r_551_sub_0_0;
  double r_568_0_2 = r_555_add_0_0;
  double r_568_1_0 = r_556_mul_0_0;
  double r_568_1_1 = r_560_add_0_0;
  double r_568_1_2 = r_564_sub_0_0;
  double r_568_2_0 = r_565_matrix_negate_0_0;
  double r_568_2_1 = r_566_mul_0_0;
  double r_568_2_2 = r_567_mul_0_0;
  double r_569_mul_0_0 = (((r_568_0_0 * r_540_0_0) + (r_568_0_1 * r_540_1_0)) + (r_568_0_2 * r_540_2_0));
  double r_569_mul_0_1 = (((r_568_0_0 * r_540_0_1) + (r_568_0_1 * r_540_1_1)) + (r_568_0_2 * r_540_2_1));
  double r_569_mul_0_2 = (((r_568_0_0 * r_540_0_2) + (r_568_0_1 * r_540_1_2)) + (r_568_0_2 * r_540_2_2));
  double r_569_mul_1_0 = (((r_568_1_0 * r_540_0_0) + (r_568_1_1 * r_540_1_0)) + (r_568_1_2 * r_540_2_0));
  double r_569_mul_1_1 = (((r_568_1_0 * r_540_0_1) + (r_568_1_1 * r_540_1_1)) + (r_568_1_2 * r_540_2_1));
  double r_569_mul_1_2 = (((r_568_1_0 * r_540_0_2) + (r_568_1_1 * r_540_1_2)) + (r_568_1_2 * r_540_2_2));
  double r_569_mul_2_0 = (((r_568_2_0 * r_540_0_0) + (r_568_2_1 * r_540_1_0)) + (r_568_2_2 * r_540_2_0));
  double r_569_mul_2_1 = (((r_568_2_0 * r_540_0_1) + (r_568_2_1 * r_540_1_1)) + (r_568_2_2 * r_540_2_1));
  double r_569_mul_2_2 = (((r_568_2_0 * r_540_0_2) + (r_568_2_1 * r_540_1_2)) + (r_568_2_2 * r_540_2_2));
  double limi_rotation_4_0_0 = r_569_mul_0_0;
  double limi_rotation_4_0_1 = r_569_mul_0_1;
  double limi_rotation_4_0_2 = r_569_mul_0_2;
  double limi_rotation_4_1_0 = r_569_mul_1_0;
  double limi_rotation_4_1_1 = r_569_mul_1_1;
  double limi_rotation_4_1_2 = r_569_mul_1_2;
  double limi_rotation_4_2_0 = r_569_mul_2_0;
  double limi_rotation_4_2_1 = r_569_mul_2_1;
  double limi_rotation_4_2_2 = r_569_mul_2_2;
  double r_570_mul_0_0 = (((r_429_mul_0_0 * limi_rotation_4_0_0) + (r_429_mul_0_1 * limi_rotation_4_1_0)) + (r_429_mul_0_2 * limi_rotation_4_2_0));
  double r_570_mul_0_1 = (((r_429_mul_0_0 * limi_rotation_4_0_1) + (r_429_mul_0_1 * limi_rotation_4_1_1)) + (r_429_mul_0_2 * limi_rotation_4_2_1));
  double r_570_mul_0_2 = (((r_429_mul_0_0 * limi_rotation_4_0_2) + (r_429_mul_0_1 * limi_rotation_4_1_2)) + (r_429_mul_0_2 * limi_rotation_4_2_2));
  double r_570_mul_1_0 = (((r_429_mul_1_0 * limi_rotation_4_0_0) + (r_429_mul_1_1 * limi_rotation_4_1_0)) + (r_429_mul_1_2 * limi_rotation_4_2_0));
  double r_570_mul_1_1 = (((r_429_mul_1_0 * limi_rotation_4_0_1) + (r_429_mul_1_1 * limi_rotation_4_1_1)) + (r_429_mul_1_2 * limi_rotation_4_2_1));
  double r_570_mul_1_2 = (((r_429_mul_1_0 * limi_rotation_4_0_2) + (r_429_mul_1_1 * limi_rotation_4_1_2)) + (r_429_mul_1_2 * limi_rotation_4_2_2));
  double r_570_mul_2_0 = (((r_429_mul_2_0 * limi_rotation_4_0_0) + (r_429_mul_2_1 * limi_rotation_4_1_0)) + (r_429_mul_2_2 * limi_rotation_4_2_0));
  double r_570_mul_2_1 = (((r_429_mul_2_0 * limi_rotation_4_0_1) + (r_429_mul_2_1 * limi_rotation_4_1_1)) + (r_429_mul_2_2 * limi_rotation_4_2_1));
  double r_570_mul_2_2 = (((r_429_mul_2_0 * limi_rotation_4_0_2) + (r_429_mul_2_1 * limi_rotation_4_1_2)) + (r_429_mul_2_2 * limi_rotation_4_2_2));
  double r_571_mul_0_0 = (((r_429_mul_0_0 * limi_translation_4_0_0) + (r_429_mul_0_1 * limi_translation_4_1_0)) + (r_429_mul_0_2 * limi_translation_4_2_0));
  double r_571_mul_1_0 = (((r_429_mul_1_0 * limi_translation_4_0_0) + (r_429_mul_1_1 * limi_translation_4_1_0)) + (r_429_mul_1_2 * limi_translation_4_2_0));
  double r_571_mul_2_0 = (((r_429_mul_2_0 * limi_translation_4_0_0) + (r_429_mul_2_1 * limi_translation_4_1_0)) + (r_429_mul_2_2 * limi_translation_4_2_0));
  double r_572_add_0_0 = (r_431_add_0_0 + r_571_mul_0_0);
  double r_572_add_1_0 = (r_431_add_1_0 + r_571_mul_1_0);
  double r_572_add_2_0 = (r_431_add_2_0 + r_571_mul_2_0);
  double r_573_0_0 = 0;
  double r_574_0_0 = 0;
  double r_575_0_0 = 0;
  double r_576_0_0 = 0;
  double r_577_0_0 = 0;
  double r_578_scalar_0_0 = v_4_0;
  double r_579_0_0 = r_573_0_0;
  double r_579_1_0 = r_574_0_0;
  double r_579_2_0 = r_575_0_0;
  double r_579_3_0 = r_576_0_0;
  double r_579_4_0 = r_577_0_0;
  double r_579_5_0 = r_578_scalar_0_0;
  double r_580_scalar_0_0 = act_motion_inv_3_0_0;
  double r_581_scalar_0_0 = act_motion_inv_3_1_0;
  double r_582_scalar_0_0 = act_motion_inv_3_2_0;
  double r_583_0_0 = r_580_scalar_0_0;
  double r_583_1_0 = r_581_scalar_0_0;
  double r_583_2_0 = r_582_scalar_0_0;
  double r_584_scalar_0_0 = act_motion_inv_3_3_0;
  double r_585_scalar_0_0 = act_motion_inv_3_4_0;
  double r_586_scalar_0_0 = act_motion_inv_3_5_0;
  double r_587_0_0 = r_584_scalar_0_0;
  double r_587_1_0 = r_585_scalar_0_0;
  double r_587_2_0 = r_586_scalar_0_0;
  double r_588_scalar_0_0 = r_579_0_0;
  double r_589_scalar_0_0 = r_579_1_0;
  double r_590_scalar_0_0 = r_579_2_0;
  double r_591_0_0 = r_588_scalar_0_0;
  double r_591_1_0 = r_589_scalar_0_0;
  double r_591_2_0 = r_590_scalar_0_0;
  double r_592_scalar_0_0 = r_579_3_0;
  double r_593_scalar_0_0 = r_579_4_0;
  double r_594_scalar_0_0 = r_579_5_0;
  double r_595_0_0 = r_592_scalar_0_0;
  double r_595_1_0 = r_593_scalar_0_0;
  double r_595_2_0 = r_594_scalar_0_0;
  double r_596_vector_cross_0_0 = ((limi_translation_4_1_0 * r_587_2_0) - (limi_translation_4_2_0 * r_587_1_0));
  double r_596_vector_cross_1_0 = ((limi_translation_4_2_0 * r_587_0_0) - (limi_translation_4_0_0 * r_587_2_0));
  double r_596_vector_cross_2_0 = ((limi_translation_4_0_0 * r_587_1_0) - (limi_translation_4_1_0 * r_587_0_0));
  double r_597_sub_0_0 = (r_583_0_0 - r_596_vector_cross_0_0);
  double r_597_sub_1_0 = (r_583_1_0 - r_596_vector_cross_1_0);
  double r_597_sub_2_0 = (r_583_2_0 - r_596_vector_cross_2_0);
  double r_598_transpose_0_0 = limi_rotation_4_0_0;
  double r_598_transpose_0_1 = limi_rotation_4_1_0;
  double r_598_transpose_0_2 = limi_rotation_4_2_0;
  double r_598_transpose_1_0 = limi_rotation_4_0_1;
  double r_598_transpose_1_1 = limi_rotation_4_1_1;
  double r_598_transpose_1_2 = limi_rotation_4_2_1;
  double r_598_transpose_2_0 = limi_rotation_4_0_2;
  double r_598_transpose_2_1 = limi_rotation_4_1_2;
  double r_598_transpose_2_2 = limi_rotation_4_2_2;
  double r_599_mul_0_0 = (((r_598_transpose_0_0 * r_597_sub_0_0) + (r_598_transpose_0_1 * r_597_sub_1_0)) + (r_598_transpose_0_2 * r_597_sub_2_0));
  double r_599_mul_1_0 = (((r_598_transpose_1_0 * r_597_sub_0_0) + (r_598_transpose_1_1 * r_597_sub_1_0)) + (r_598_transpose_1_2 * r_597_sub_2_0));
  double r_599_mul_2_0 = (((r_598_transpose_2_0 * r_597_sub_0_0) + (r_598_transpose_2_1 * r_597_sub_1_0)) + (r_598_transpose_2_2 * r_597_sub_2_0));
  double r_600_add_0_0 = (r_591_0_0 + r_599_mul_0_0);
  double r_600_add_1_0 = (r_591_1_0 + r_599_mul_1_0);
  double r_600_add_2_0 = (r_591_2_0 + r_599_mul_2_0);
  double r_601_mul_0_0 = (((r_598_transpose_0_0 * r_587_0_0) + (r_598_transpose_0_1 * r_587_1_0)) + (r_598_transpose_0_2 * r_587_2_0));
  double r_601_mul_1_0 = (((r_598_transpose_1_0 * r_587_0_0) + (r_598_transpose_1_1 * r_587_1_0)) + (r_598_transpose_1_2 * r_587_2_0));
  double r_601_mul_2_0 = (((r_598_transpose_2_0 * r_587_0_0) + (r_598_transpose_2_1 * r_587_1_0)) + (r_598_transpose_2_2 * r_587_2_0));
  double r_602_add_0_0 = (r_595_0_0 + r_601_mul_0_0);
  double r_602_add_1_0 = (r_595_1_0 + r_601_mul_1_0);
  double r_602_add_2_0 = (r_595_2_0 + r_601_mul_2_0);
  double r_603_scalar_0_0 = r_600_add_0_0;
  double r_604_scalar_0_0 = r_600_add_1_0;
  double r_605_scalar_0_0 = r_600_add_2_0;
  double r_606_scalar_0_0 = r_602_add_0_0;
  double r_607_scalar_0_0 = r_602_add_1_0;
  double r_608_scalar_0_0 = r_602_add_2_0;
  double r_609_0_0 = r_603_scalar_0_0;
  double r_609_1_0 = r_604_scalar_0_0;
  double r_609_2_0 = r_605_scalar_0_0;
  double r_609_3_0 = r_606_scalar_0_0;
  double r_609_4_0 = r_607_scalar_0_0;
  double r_609_5_0 = r_608_scalar_0_0;
  double act_motion_inv_4_0_0 = r_609_0_0;
  double act_motion_inv_4_1_0 = r_609_1_0;
  double act_motion_inv_4_2_0 = r_609_2_0;
  double act_motion_inv_4_3_0 = r_609_3_0;
  double act_motion_inv_4_4_0 = r_609_4_0;
  double act_motion_inv_4_5_0 = r_609_5_0;
  double r_610_scalar_0_0 = v_4_0;
  double r_611_matrix_negate_0_0 = -(r_610_scalar_0_0);
  double r_612_scalar_0_0 = act_motion_inv_4_0_0;
  double r_613_scalar_0_0 = act_motion_inv_4_1_0;
  double r_614_scalar_0_0 = act_motion_inv_4_2_0;
  double r_615_0_0 = r_612_scalar_0_0;
  double r_615_1_0 = r_613_scalar_0_0;
  double r_615_2_0 = r_614_scalar_0_0;
  double r_616_scalar_0_0 = act_motion_inv_4_3_0;
  double r_617_scalar_0_0 = act_motion_inv_4_4_0;
  double r_618_scalar_0_0 = act_motion_inv_4_5_0;
  double r_619_0_0 = r_616_scalar_0_0;
  double r_619_1_0 = r_617_scalar_0_0;
  double r_619_2_0 = r_618_scalar_0_0;
  double r_620_matrix_negate_0_0 = -(r_611_matrix_negate_0_0);
  double r_621_scalar_0_0 = r_615_1_0;
  double r_622_mul_0_0 = (r_620_matrix_negate_0_0 * r_621_scalar_0_0);
  double r_623_scalar_0_0 = r_615_0_0;
  double r_624_mul_0_0 = (r_611_matrix_negate_0_0 * r_623_scalar_0_0);
  double r_625_0_0 = 0;
  double r_626_0_0 = r_622_mul_0_0;
  double r_626_1_0 = r_624_mul_0_0;
  double r_626_2_0 = r_625_0_0;
  double alpha_cross_linear_4_0_0 = r_626_0_0;
  double alpha_cross_linear_4_1_0 = r_626_1_0;
  double alpha_cross_linear_4_2_0 = r_626_2_0;
  double r_627_matrix_negate_0_0 = -(r_611_matrix_negate_0_0);
  double r_628_scalar_0_0 = r_619_1_0;
  double r_629_mul_0_0 = (r_627_matrix_negate_0_0 * r_628_scalar_0_0);
  double r_630_scalar_0_0 = r_619_0_0;
  double r_631_mul_0_0 = (r_611_matrix_negate_0_0 * r_630_scalar_0_0);
  double r_632_0_0 = 0;
  double r_633_0_0 = r_629_mul_0_0;
  double r_633_1_0 = r_631_mul_0_0;
  double r_633_2_0 = r_632_0_0;
  double alpha_cross_angular_4_0_0 = r_633_0_0;
  double alpha_cross_angular_4_1_0 = r_633_1_0;
  double alpha_cross_angular_4_2_0 = r_633_2_0;
  double r_634_scalar_0_0 = alpha_cross_linear_4_0_0;
  double r_635_scalar_0_0 = alpha_cross_linear_4_1_0;
  double r_636_scalar_0_0 = alpha_cross_linear_4_2_0;
  double r_637_scalar_0_0 = alpha_cross_angular_4_0_0;
  double r_638_scalar_0_0 = alpha_cross_angular_4_1_0;
  double r_639_scalar_0_0 = alpha_cross_angular_4_2_0;
  double r_640_0_0 = r_634_scalar_0_0;
  double r_640_1_0 = r_635_scalar_0_0;
  double r_640_2_0 = r_636_scalar_0_0;
  double r_640_3_0 = r_637_scalar_0_0;
  double r_640_4_0 = r_638_scalar_0_0;
  double r_640_5_0 = r_639_scalar_0_0;
  double alpha_cross_4_0_0 = r_640_0_0;
  double alpha_cross_4_1_0 = r_640_1_0;
  double alpha_cross_4_2_0 = r_640_2_0;
  double alpha_cross_4_3_0 = r_640_3_0;
  double alpha_cross_4_4_0 = r_640_4_0;
  double alpha_cross_4_5_0 = r_640_5_0;
  double r_641_scalar_0_0 = a_4_0;
  double r_642_scalar_0_0 = alpha_cross_4_5_0;
  double r_643_add_0_0 = (r_641_scalar_0_0 + r_642_scalar_0_0);
  double r_644_scalar_0_0 = alpha_cross_4_0_0;
  double r_645_scalar_0_0 = alpha_cross_4_1_0;
  double r_646_scalar_0_0 = alpha_cross_4_2_0;
  double r_647_scalar_0_0 = alpha_cross_4_3_0;
  double r_648_scalar_0_0 = alpha_cross_4_4_0;
  double r_649_0_0 = r_644_scalar_0_0;
  double r_649_1_0 = r_645_scalar_0_0;
  double r_649_2_0 = r_646_scalar_0_0;
  double r_649_3_0 = r_647_scalar_0_0;
  double r_649_4_0 = r_648_scalar_0_0;
  double r_649_5_0 = r_643_add_0_0;
  double r_650_scalar_0_0 = r_529_add_0_0;
  double r_651_scalar_0_0 = r_529_add_1_0;
  double r_652_scalar_0_0 = r_529_add_2_0;
  double r_653_0_0 = r_650_scalar_0_0;
  double r_653_1_0 = r_651_scalar_0_0;
  double r_653_2_0 = r_652_scalar_0_0;
  double r_654_scalar_0_0 = r_529_add_3_0;
  double r_655_scalar_0_0 = r_529_add_4_0;
  double r_656_scalar_0_0 = r_529_add_5_0;
  double r_657_0_0 = r_654_scalar_0_0;
  double r_657_1_0 = r_655_scalar_0_0;
  double r_657_2_0 = r_656_scalar_0_0;
  double r_658_vector_cross_0_0 = ((limi_translation_4_1_0 * r_657_2_0) - (limi_translation_4_2_0 * r_657_1_0));
  double r_658_vector_cross_1_0 = ((limi_translation_4_2_0 * r_657_0_0) - (limi_translation_4_0_0 * r_657_2_0));
  double r_658_vector_cross_2_0 = ((limi_translation_4_0_0 * r_657_1_0) - (limi_translation_4_1_0 * r_657_0_0));
  double r_659_sub_0_0 = (r_653_0_0 - r_658_vector_cross_0_0);
  double r_659_sub_1_0 = (r_653_1_0 - r_658_vector_cross_1_0);
  double r_659_sub_2_0 = (r_653_2_0 - r_658_vector_cross_2_0);
  double r_660_transpose_0_0 = limi_rotation_4_0_0;
  double r_660_transpose_0_1 = limi_rotation_4_1_0;
  double r_660_transpose_0_2 = limi_rotation_4_2_0;
  double r_660_transpose_1_0 = limi_rotation_4_0_1;
  double r_660_transpose_1_1 = limi_rotation_4_1_1;
  double r_660_transpose_1_2 = limi_rotation_4_2_1;
  double r_660_transpose_2_0 = limi_rotation_4_0_2;
  double r_660_transpose_2_1 = limi_rotation_4_1_2;
  double r_660_transpose_2_2 = limi_rotation_4_2_2;
  double r_661_mul_0_0 = (((r_660_transpose_0_0 * r_659_sub_0_0) + (r_660_transpose_0_1 * r_659_sub_1_0)) + (r_660_transpose_0_2 * r_659_sub_2_0));
  double r_661_mul_1_0 = (((r_660_transpose_1_0 * r_659_sub_0_0) + (r_660_transpose_1_1 * r_659_sub_1_0)) + (r_660_transpose_1_2 * r_659_sub_2_0));
  double r_661_mul_2_0 = (((r_660_transpose_2_0 * r_659_sub_0_0) + (r_660_transpose_2_1 * r_659_sub_1_0)) + (r_660_transpose_2_2 * r_659_sub_2_0));
  double r_662_mul_0_0 = (((r_660_transpose_0_0 * r_657_0_0) + (r_660_transpose_0_1 * r_657_1_0)) + (r_660_transpose_0_2 * r_657_2_0));
  double r_662_mul_1_0 = (((r_660_transpose_1_0 * r_657_0_0) + (r_660_transpose_1_1 * r_657_1_0)) + (r_660_transpose_1_2 * r_657_2_0));
  double r_662_mul_2_0 = (((r_660_transpose_2_0 * r_657_0_0) + (r_660_transpose_2_1 * r_657_1_0)) + (r_660_transpose_2_2 * r_657_2_0));
  double r_663_scalar_0_0 = r_661_mul_0_0;
  double r_664_scalar_0_0 = r_661_mul_1_0;
  double r_665_scalar_0_0 = r_661_mul_2_0;
  double r_666_scalar_0_0 = r_662_mul_0_0;
  double r_667_scalar_0_0 = r_662_mul_1_0;
  double r_668_scalar_0_0 = r_662_mul_2_0;
  double r_669_0_0 = r_663_scalar_0_0;
  double r_669_1_0 = r_664_scalar_0_0;
  double r_669_2_0 = r_665_scalar_0_0;
  double r_669_3_0 = r_666_scalar_0_0;
  double r_669_4_0 = r_667_scalar_0_0;
  double r_669_5_0 = r_668_scalar_0_0;
  double act_inv_4_0_0 = r_669_0_0;
  double act_inv_4_1_0 = r_669_1_0;
  double act_inv_4_2_0 = r_669_2_0;
  double act_inv_4_3_0 = r_669_3_0;
  double act_inv_4_4_0 = r_669_4_0;
  double act_inv_4_5_0 = r_669_5_0;
  double r_670_add_0_0 = (r_649_0_0 + act_inv_4_0_0);
  double r_670_add_1_0 = (r_649_1_0 + act_inv_4_1_0);
  double r_670_add_2_0 = (r_649_2_0 + act_inv_4_2_0);
  double r_670_add_3_0 = (r_649_3_0 + act_inv_4_3_0);
  double r_670_add_4_0 = (r_649_4_0 + act_inv_4_4_0);
  double r_670_add_5_0 = (r_649_5_0 + act_inv_4_5_0);
  double r_671_scalar_0_0 = qcos_5_0;
  double r_672_scalar_0_0 = qsin_5_0;
  double r_673_matrix_negate_0_0 = -(r_672_scalar_0_0);
  double r_674_0_0 = 0;
  double r_675_scalar_0_0 = qsin_5_0;
  double r_676_scalar_0_0 = qcos_5_0;
  double r_677_0_0 = 0;
  double r_678_0_0 = 0;
  double r_679_0_0 = 0;
  double r_680_0_0 = 1;
  double r_681_0_0 = r_671_scalar_0_0;
  double r_681_0_1 = r_673_matrix_negate_0_0;
  double r_681_0_2 = r_674_0_0;
  double r_681_1_0 = r_675_scalar_0_0;
  double r_681_1_1 = r_676_scalar_0_0;
  double r_681_1_2 = r_677_0_0;
  double r_681_2_0 = r_678_0_0;
  double r_681_2_1 = r_679_0_0;
  double r_681_2_2 = r_680_0_0;
  double r_682_0_0 = 0;
  double r_683_0_0 = -1;
  double r_684_0_0 = 1;
  double r_685_0_0 = 0;
  double r_686_0_0 = 0;
  double r_687_0_0 = 1;
  double r_688_mul_0_0 = (r_686_0_0 * r_684_0_0);
  double r_689_mul_0_0 = (r_686_0_0 * r_685_0_0);
  double r_690_mul_0_0 = (r_689_mul_0_0 * r_683_0_0);
  double r_691_mul_0_0 = (r_687_0_0 * r_682_0_0);
  double r_692_sub_0_0 = (r_690_mul_0_0 - r_691_mul_0_0);
  double r_693_mul_0_0 = (r_686_0_0 * r_685_0_0);
  double r_694_mul_0_0 = (r_693_mul_0_0 * r_682_0_0);
  double r_695_mul_0_0 = (r_687_0_0 * r_683_0_0);
  double r_696_add_0_0 = (r_694_mul_0_0 + r_695_mul_0_0);
  double r_697_mul_0_0 = (r_687_0_0 * r_684_0_0);
  double r_698_mul_0_0 = (r_687_0_0 * r_685_0_0);
  double r_699_mul_0_0 = (r_698_mul_0_0 * r_683_0_0);
  double r_700_mul_0_0 = (r_686_0_0 * r_682_0_0);
  double r_701_add_0_0 = (r_699_mul_0_0 + r_700_mul_0_0);
  double r_702_mul_0_0 = (r_687_0_0 * r_685_0_0);
  double r_703_mul_0_0 = (r_702_mul_0_0 * r_682_0_0);
  double r_704_mul_0_0 = (r_686_0_0 * r_683_0_0);
  double r_705_sub_0_0 = (r_703_mul_0_0 - r_704_mul_0_0);
  double r_706_matrix_negate_0_0 = -(r_685_0_0);
  double r_707_mul_0_0 = (r_684_0_0 * r_683_0_0);
  double r_708_mul_0_0 = (r_684_0_0 * r_682_0_0);
  double r_709_0_0 = r_688_mul_0_0;
  double r_709_0_1 = r_692_sub_0_0;
  double r_709_0_2 = r_696_add_0_0;
  double r_709_1_0 = r_697_mul_0_0;
  double r_709_1_1 = r_701_add_0_0;
  double r_709_1_2 = r_705_sub_0_0;
  double r_709_2_0 = r_706_matrix_negate_0_0;
  double r_709_2_1 = r_707_mul_0_0;
  double r_709_2_2 = r_708_mul_0_0;
  double r_710_mul_0_0 = (((r_709_0_0 * r_681_0_0) + (r_709_0_1 * r_681_1_0)) + (r_709_0_2 * r_681_2_0));
  double r_710_mul_0_1 = (((r_709_0_0 * r_681_0_1) + (r_709_0_1 * r_681_1_1)) + (r_709_0_2 * r_681_2_1));
  double r_710_mul_0_2 = (((r_709_0_0 * r_681_0_2) + (r_709_0_1 * r_681_1_2)) + (r_709_0_2 * r_681_2_2));
  double r_710_mul_1_0 = (((r_709_1_0 * r_681_0_0) + (r_709_1_1 * r_681_1_0)) + (r_709_1_2 * r_681_2_0));
  double r_710_mul_1_1 = (((r_709_1_0 * r_681_0_1) + (r_709_1_1 * r_681_1_1)) + (r_709_1_2 * r_681_2_1));
  double r_710_mul_1_2 = (((r_709_1_0 * r_681_0_2) + (r_709_1_1 * r_681_1_2)) + (r_709_1_2 * r_681_2_2));
  double r_710_mul_2_0 = (((r_709_2_0 * r_681_0_0) + (r_709_2_1 * r_681_1_0)) + (r_709_2_2 * r_681_2_0));
  double r_710_mul_2_1 = (((r_709_2_0 * r_681_0_1) + (r_709_2_1 * r_681_1_1)) + (r_709_2_2 * r_681_2_1));
  double r_710_mul_2_2 = (((r_709_2_0 * r_681_0_2) + (r_709_2_1 * r_681_1_2)) + (r_709_2_2 * r_681_2_2));
  double limi_rotation_5_0_0 = r_710_mul_0_0;
  double limi_rotation_5_0_1 = r_710_mul_0_1;
  double limi_rotation_5_0_2 = r_710_mul_0_2;
  double limi_rotation_5_1_0 = r_710_mul_1_0;
  double limi_rotation_5_1_1 = r_710_mul_1_1;
  double limi_rotation_5_1_2 = r_710_mul_1_2;
  double limi_rotation_5_2_0 = r_710_mul_2_0;
  double limi_rotation_5_2_1 = r_710_mul_2_1;
  double limi_rotation_5_2_2 = r_710_mul_2_2;
  double r_711_mul_0_0 = (((r_570_mul_0_0 * limi_rotation_5_0_0) + (r_570_mul_0_1 * limi_rotation_5_1_0)) + (r_570_mul_0_2 * limi_rotation_5_2_0));
  double r_711_mul_0_1 = (((r_570_mul_0_0 * limi_rotation_5_0_1) + (r_570_mul_0_1 * limi_rotation_5_1_1)) + (r_570_mul_0_2 * limi_rotation_5_2_1));
  double r_711_mul_0_2 = (((r_570_mul_0_0 * limi_rotation_5_0_2) + (r_570_mul_0_1 * limi_rotation_5_1_2)) + (r_570_mul_0_2 * limi_rotation_5_2_2));
  double r_711_mul_1_0 = (((r_570_mul_1_0 * limi_rotation_5_0_0) + (r_570_mul_1_1 * limi_rotation_5_1_0)) + (r_570_mul_1_2 * limi_rotation_5_2_0));
  double r_711_mul_1_1 = (((r_570_mul_1_0 * limi_rotation_5_0_1) + (r_570_mul_1_1 * limi_rotation_5_1_1)) + (r_570_mul_1_2 * limi_rotation_5_2_1));
  double r_711_mul_1_2 = (((r_570_mul_1_0 * limi_rotation_5_0_2) + (r_570_mul_1_1 * limi_rotation_5_1_2)) + (r_570_mul_1_2 * limi_rotation_5_2_2));
  double r_711_mul_2_0 = (((r_570_mul_2_0 * limi_rotation_5_0_0) + (r_570_mul_2_1 * limi_rotation_5_1_0)) + (r_570_mul_2_2 * limi_rotation_5_2_0));
  double r_711_mul_2_1 = (((r_570_mul_2_0 * limi_rotation_5_0_1) + (r_570_mul_2_1 * limi_rotation_5_1_1)) + (r_570_mul_2_2 * limi_rotation_5_2_1));
  double r_711_mul_2_2 = (((r_570_mul_2_0 * limi_rotation_5_0_2) + (r_570_mul_2_1 * limi_rotation_5_1_2)) + (r_570_mul_2_2 * limi_rotation_5_2_2));
  double r_712_mul_0_0 = (((r_570_mul_0_0 * limi_translation_5_0_0) + (r_570_mul_0_1 * limi_translation_5_1_0)) + (r_570_mul_0_2 * limi_translation_5_2_0));
  double r_712_mul_1_0 = (((r_570_mul_1_0 * limi_translation_5_0_0) + (r_570_mul_1_1 * limi_translation_5_1_0)) + (r_570_mul_1_2 * limi_translation_5_2_0));
  double r_712_mul_2_0 = (((r_570_mul_2_0 * limi_translation_5_0_0) + (r_570_mul_2_1 * limi_translation_5_1_0)) + (r_570_mul_2_2 * limi_translation_5_2_0));
  double r_713_add_0_0 = (r_572_add_0_0 + r_712_mul_0_0);
  double r_713_add_1_0 = (r_572_add_1_0 + r_712_mul_1_0);
  double r_713_add_2_0 = (r_572_add_2_0 + r_712_mul_2_0);
  double r_714_0_0 = 0;
  double r_715_0_0 = 0;
  double r_716_0_0 = 0;
  double r_717_0_0 = 0;
  double r_718_0_0 = 0;
  double r_719_scalar_0_0 = v_5_0;
  double r_720_0_0 = r_714_0_0;
  double r_720_1_0 = r_715_0_0;
  double r_720_2_0 = r_716_0_0;
  double r_720_3_0 = r_717_0_0;
  double r_720_4_0 = r_718_0_0;
  double r_720_5_0 = r_719_scalar_0_0;
  double r_721_scalar_0_0 = act_motion_inv_4_0_0;
  double r_722_scalar_0_0 = act_motion_inv_4_1_0;
  double r_723_scalar_0_0 = act_motion_inv_4_2_0;
  double r_724_0_0 = r_721_scalar_0_0;
  double r_724_1_0 = r_722_scalar_0_0;
  double r_724_2_0 = r_723_scalar_0_0;
  double r_725_scalar_0_0 = act_motion_inv_4_3_0;
  double r_726_scalar_0_0 = act_motion_inv_4_4_0;
  double r_727_scalar_0_0 = act_motion_inv_4_5_0;
  double r_728_0_0 = r_725_scalar_0_0;
  double r_728_1_0 = r_726_scalar_0_0;
  double r_728_2_0 = r_727_scalar_0_0;
  double r_729_scalar_0_0 = r_720_0_0;
  double r_730_scalar_0_0 = r_720_1_0;
  double r_731_scalar_0_0 = r_720_2_0;
  double r_732_0_0 = r_729_scalar_0_0;
  double r_732_1_0 = r_730_scalar_0_0;
  double r_732_2_0 = r_731_scalar_0_0;
  double r_733_scalar_0_0 = r_720_3_0;
  double r_734_scalar_0_0 = r_720_4_0;
  double r_735_scalar_0_0 = r_720_5_0;
  double r_736_0_0 = r_733_scalar_0_0;
  double r_736_1_0 = r_734_scalar_0_0;
  double r_736_2_0 = r_735_scalar_0_0;
  double r_737_vector_cross_0_0 = ((limi_translation_5_1_0 * r_728_2_0) - (limi_translation_5_2_0 * r_728_1_0));
  double r_737_vector_cross_1_0 = ((limi_translation_5_2_0 * r_728_0_0) - (limi_translation_5_0_0 * r_728_2_0));
  double r_737_vector_cross_2_0 = ((limi_translation_5_0_0 * r_728_1_0) - (limi_translation_5_1_0 * r_728_0_0));
  double r_738_sub_0_0 = (r_724_0_0 - r_737_vector_cross_0_0);
  double r_738_sub_1_0 = (r_724_1_0 - r_737_vector_cross_1_0);
  double r_738_sub_2_0 = (r_724_2_0 - r_737_vector_cross_2_0);
  double r_739_transpose_0_0 = limi_rotation_5_0_0;
  double r_739_transpose_0_1 = limi_rotation_5_1_0;
  double r_739_transpose_0_2 = limi_rotation_5_2_0;
  double r_739_transpose_1_0 = limi_rotation_5_0_1;
  double r_739_transpose_1_1 = limi_rotation_5_1_1;
  double r_739_transpose_1_2 = limi_rotation_5_2_1;
  double r_739_transpose_2_0 = limi_rotation_5_0_2;
  double r_739_transpose_2_1 = limi_rotation_5_1_2;
  double r_739_transpose_2_2 = limi_rotation_5_2_2;
  double r_740_mul_0_0 = (((r_739_transpose_0_0 * r_738_sub_0_0) + (r_739_transpose_0_1 * r_738_sub_1_0)) + (r_739_transpose_0_2 * r_738_sub_2_0));
  double r_740_mul_1_0 = (((r_739_transpose_1_0 * r_738_sub_0_0) + (r_739_transpose_1_1 * r_738_sub_1_0)) + (r_739_transpose_1_2 * r_738_sub_2_0));
  double r_740_mul_2_0 = (((r_739_transpose_2_0 * r_738_sub_0_0) + (r_739_transpose_2_1 * r_738_sub_1_0)) + (r_739_transpose_2_2 * r_738_sub_2_0));
  double r_741_add_0_0 = (r_732_0_0 + r_740_mul_0_0);
  double r_741_add_1_0 = (r_732_1_0 + r_740_mul_1_0);
  double r_741_add_2_0 = (r_732_2_0 + r_740_mul_2_0);
  double r_742_mul_0_0 = (((r_739_transpose_0_0 * r_728_0_0) + (r_739_transpose_0_1 * r_728_1_0)) + (r_739_transpose_0_2 * r_728_2_0));
  double r_742_mul_1_0 = (((r_739_transpose_1_0 * r_728_0_0) + (r_739_transpose_1_1 * r_728_1_0)) + (r_739_transpose_1_2 * r_728_2_0));
  double r_742_mul_2_0 = (((r_739_transpose_2_0 * r_728_0_0) + (r_739_transpose_2_1 * r_728_1_0)) + (r_739_transpose_2_2 * r_728_2_0));
  double r_743_add_0_0 = (r_736_0_0 + r_742_mul_0_0);
  double r_743_add_1_0 = (r_736_1_0 + r_742_mul_1_0);
  double r_743_add_2_0 = (r_736_2_0 + r_742_mul_2_0);
  double r_744_scalar_0_0 = r_741_add_0_0;
  double r_745_scalar_0_0 = r_741_add_1_0;
  double r_746_scalar_0_0 = r_741_add_2_0;
  double r_747_scalar_0_0 = r_743_add_0_0;
  double r_748_scalar_0_0 = r_743_add_1_0;
  double r_749_scalar_0_0 = r_743_add_2_0;
  double r_750_0_0 = r_744_scalar_0_0;
  double r_750_1_0 = r_745_scalar_0_0;
  double r_750_2_0 = r_746_scalar_0_0;
  double r_750_3_0 = r_747_scalar_0_0;
  double r_750_4_0 = r_748_scalar_0_0;
  double r_750_5_0 = r_749_scalar_0_0;
  double act_motion_inv_5_0_0 = r_750_0_0;
  double act_motion_inv_5_1_0 = r_750_1_0;
  double act_motion_inv_5_2_0 = r_750_2_0;
  double act_motion_inv_5_3_0 = r_750_3_0;
  double act_motion_inv_5_4_0 = r_750_4_0;
  double act_motion_inv_5_5_0 = r_750_5_0;
  double r_751_scalar_0_0 = v_5_0;
  double r_752_matrix_negate_0_0 = -(r_751_scalar_0_0);
  double r_753_scalar_0_0 = act_motion_inv_5_0_0;
  double r_754_scalar_0_0 = act_motion_inv_5_1_0;
  double r_755_scalar_0_0 = act_motion_inv_5_2_0;
  double r_756_0_0 = r_753_scalar_0_0;
  double r_756_1_0 = r_754_scalar_0_0;
  double r_756_2_0 = r_755_scalar_0_0;
  double r_757_scalar_0_0 = act_motion_inv_5_3_0;
  double r_758_scalar_0_0 = act_motion_inv_5_4_0;
  double r_759_scalar_0_0 = act_motion_inv_5_5_0;
  double r_760_0_0 = r_757_scalar_0_0;
  double r_760_1_0 = r_758_scalar_0_0;
  double r_760_2_0 = r_759_scalar_0_0;
  double r_761_matrix_negate_0_0 = -(r_752_matrix_negate_0_0);
  double r_762_scalar_0_0 = r_756_1_0;
  double r_763_mul_0_0 = (r_761_matrix_negate_0_0 * r_762_scalar_0_0);
  double r_764_scalar_0_0 = r_756_0_0;
  double r_765_mul_0_0 = (r_752_matrix_negate_0_0 * r_764_scalar_0_0);
  double r_766_0_0 = 0;
  double r_767_0_0 = r_763_mul_0_0;
  double r_767_1_0 = r_765_mul_0_0;
  double r_767_2_0 = r_766_0_0;
  double alpha_cross_linear_5_0_0 = r_767_0_0;
  double alpha_cross_linear_5_1_0 = r_767_1_0;
  double alpha_cross_linear_5_2_0 = r_767_2_0;
  double r_768_matrix_negate_0_0 = -(r_752_matrix_negate_0_0);
  double r_769_scalar_0_0 = r_760_1_0;
  double r_770_mul_0_0 = (r_768_matrix_negate_0_0 * r_769_scalar_0_0);
  double r_771_scalar_0_0 = r_760_0_0;
  double r_772_mul_0_0 = (r_752_matrix_negate_0_0 * r_771_scalar_0_0);
  double r_773_0_0 = 0;
  double r_774_0_0 = r_770_mul_0_0;
  double r_774_1_0 = r_772_mul_0_0;
  double r_774_2_0 = r_773_0_0;
  double alpha_cross_angular_5_0_0 = r_774_0_0;
  double alpha_cross_angular_5_1_0 = r_774_1_0;
  double alpha_cross_angular_5_2_0 = r_774_2_0;
  double r_775_scalar_0_0 = alpha_cross_linear_5_0_0;
  double r_776_scalar_0_0 = alpha_cross_linear_5_1_0;
  double r_777_scalar_0_0 = alpha_cross_linear_5_2_0;
  double r_778_scalar_0_0 = alpha_cross_angular_5_0_0;
  double r_779_scalar_0_0 = alpha_cross_angular_5_1_0;
  double r_780_scalar_0_0 = alpha_cross_angular_5_2_0;
  double r_781_0_0 = r_775_scalar_0_0;
  double r_781_1_0 = r_776_scalar_0_0;
  double r_781_2_0 = r_777_scalar_0_0;
  double r_781_3_0 = r_778_scalar_0_0;
  double r_781_4_0 = r_779_scalar_0_0;
  double r_781_5_0 = r_780_scalar_0_0;
  double alpha_cross_5_0_0 = r_781_0_0;
  double alpha_cross_5_1_0 = r_781_1_0;
  double alpha_cross_5_2_0 = r_781_2_0;
  double alpha_cross_5_3_0 = r_781_3_0;
  double alpha_cross_5_4_0 = r_781_4_0;
  double alpha_cross_5_5_0 = r_781_5_0;
  double r_782_scalar_0_0 = a_5_0;
  double r_783_scalar_0_0 = alpha_cross_5_5_0;
  double r_784_add_0_0 = (r_782_scalar_0_0 + r_783_scalar_0_0);
  double r_785_scalar_0_0 = alpha_cross_5_0_0;
  double r_786_scalar_0_0 = alpha_cross_5_1_0;
  double r_787_scalar_0_0 = alpha_cross_5_2_0;
  double r_788_scalar_0_0 = alpha_cross_5_3_0;
  double r_789_scalar_0_0 = alpha_cross_5_4_0;
  double r_790_0_0 = r_785_scalar_0_0;
  double r_790_1_0 = r_786_scalar_0_0;
  double r_790_2_0 = r_787_scalar_0_0;
  double r_790_3_0 = r_788_scalar_0_0;
  double r_790_4_0 = r_789_scalar_0_0;
  double r_790_5_0 = r_784_add_0_0;
  double r_791_scalar_0_0 = r_670_add_0_0;
  double r_792_scalar_0_0 = r_670_add_1_0;
  double r_793_scalar_0_0 = r_670_add_2_0;
  double r_794_0_0 = r_791_scalar_0_0;
  double r_794_1_0 = r_792_scalar_0_0;
  double r_794_2_0 = r_793_scalar_0_0;
  double r_795_scalar_0_0 = r_670_add_3_0;
  double r_796_scalar_0_0 = r_670_add_4_0;
  double r_797_scalar_0_0 = r_670_add_5_0;
  double r_798_0_0 = r_795_scalar_0_0;
  double r_798_1_0 = r_796_scalar_0_0;
  double r_798_2_0 = r_797_scalar_0_0;
  double r_799_vector_cross_0_0 = ((limi_translation_5_1_0 * r_798_2_0) - (limi_translation_5_2_0 * r_798_1_0));
  double r_799_vector_cross_1_0 = ((limi_translation_5_2_0 * r_798_0_0) - (limi_translation_5_0_0 * r_798_2_0));
  double r_799_vector_cross_2_0 = ((limi_translation_5_0_0 * r_798_1_0) - (limi_translation_5_1_0 * r_798_0_0));
  double r_800_sub_0_0 = (r_794_0_0 - r_799_vector_cross_0_0);
  double r_800_sub_1_0 = (r_794_1_0 - r_799_vector_cross_1_0);
  double r_800_sub_2_0 = (r_794_2_0 - r_799_vector_cross_2_0);
  double r_801_transpose_0_0 = limi_rotation_5_0_0;
  double r_801_transpose_0_1 = limi_rotation_5_1_0;
  double r_801_transpose_0_2 = limi_rotation_5_2_0;
  double r_801_transpose_1_0 = limi_rotation_5_0_1;
  double r_801_transpose_1_1 = limi_rotation_5_1_1;
  double r_801_transpose_1_2 = limi_rotation_5_2_1;
  double r_801_transpose_2_0 = limi_rotation_5_0_2;
  double r_801_transpose_2_1 = limi_rotation_5_1_2;
  double r_801_transpose_2_2 = limi_rotation_5_2_2;
  double r_802_mul_0_0 = (((r_801_transpose_0_0 * r_800_sub_0_0) + (r_801_transpose_0_1 * r_800_sub_1_0)) + (r_801_transpose_0_2 * r_800_sub_2_0));
  double r_802_mul_1_0 = (((r_801_transpose_1_0 * r_800_sub_0_0) + (r_801_transpose_1_1 * r_800_sub_1_0)) + (r_801_transpose_1_2 * r_800_sub_2_0));
  double r_802_mul_2_0 = (((r_801_transpose_2_0 * r_800_sub_0_0) + (r_801_transpose_2_1 * r_800_sub_1_0)) + (r_801_transpose_2_2 * r_800_sub_2_0));
  double r_803_mul_0_0 = (((r_801_transpose_0_0 * r_798_0_0) + (r_801_transpose_0_1 * r_798_1_0)) + (r_801_transpose_0_2 * r_798_2_0));
  double r_803_mul_1_0 = (((r_801_transpose_1_0 * r_798_0_0) + (r_801_transpose_1_1 * r_798_1_0)) + (r_801_transpose_1_2 * r_798_2_0));
  double r_803_mul_2_0 = (((r_801_transpose_2_0 * r_798_0_0) + (r_801_transpose_2_1 * r_798_1_0)) + (r_801_transpose_2_2 * r_798_2_0));
  double r_804_scalar_0_0 = r_802_mul_0_0;
  double r_805_scalar_0_0 = r_802_mul_1_0;
  double r_806_scalar_0_0 = r_802_mul_2_0;
  double r_807_scalar_0_0 = r_803_mul_0_0;
  double r_808_scalar_0_0 = r_803_mul_1_0;
  double r_809_scalar_0_0 = r_803_mul_2_0;
  double r_810_0_0 = r_804_scalar_0_0;
  double r_810_1_0 = r_805_scalar_0_0;
  double r_810_2_0 = r_806_scalar_0_0;
  double r_810_3_0 = r_807_scalar_0_0;
  double r_810_4_0 = r_808_scalar_0_0;
  double r_810_5_0 = r_809_scalar_0_0;
  double act_inv_5_0_0 = r_810_0_0;
  double act_inv_5_1_0 = r_810_1_0;
  double act_inv_5_2_0 = r_810_2_0;
  double act_inv_5_3_0 = r_810_3_0;
  double act_inv_5_4_0 = r_810_4_0;
  double act_inv_5_5_0 = r_810_5_0;
  double r_811_add_0_0 = (r_790_0_0 + act_inv_5_0_0);
  double r_811_add_1_0 = (r_790_1_0 + act_inv_5_1_0);
  double r_811_add_2_0 = (r_790_2_0 + act_inv_5_2_0);
  double r_811_add_3_0 = (r_790_3_0 + act_inv_5_3_0);
  double r_811_add_4_0 = (r_790_4_0 + act_inv_5_4_0);
  double r_811_add_5_0 = (r_790_5_0 + act_inv_5_5_0);
  double final_omi_translations_0_0_0 = limi_translation_0_0_0;
  double final_omi_translations_0_1_0 = limi_translation_0_1_0;
  double final_omi_translations_0_2_0 = limi_translation_0_2_0;
  double final_omi_rotations_0_0_0 = limi_rotation_0_0_0;
  double final_omi_rotations_0_0_1 = limi_rotation_0_0_1;
  double final_omi_rotations_0_0_2 = limi_rotation_0_0_2;
  double final_omi_rotations_0_1_0 = limi_rotation_0_1_0;
  double final_omi_rotations_0_1_1 = limi_rotation_0_1_1;
  double final_omi_rotations_0_1_2 = limi_rotation_0_1_2;
  double final_omi_rotations_0_2_0 = limi_rotation_0_2_0;
  double final_omi_rotations_0_2_1 = limi_rotation_0_2_1;
  double final_omi_rotations_0_2_2 = limi_rotation_0_2_2;
  double final_v_0_0_0 = r_66_0_0;
  double final_v_0_1_0 = r_66_1_0;
  double final_v_0_2_0 = r_66_2_0;
  double final_v_0_3_0 = r_66_3_0;
  double final_v_0_4_0 = r_66_4_0;
  double final_v_0_5_0 = r_66_5_0;
  double final_a_0_0_0 = r_106_0_0;
  double final_a_0_1_0 = r_106_1_0;
  double final_a_0_2_0 = r_106_2_0;
  double final_a_0_3_0 = r_106_3_0;
  double final_a_0_4_0 = r_106_4_0;
  double final_a_0_5_0 = r_106_5_0;
  double final_omi_translations_1_0_0 = r_149_add_0_0;
  double final_omi_translations_1_1_0 = r_149_add_1_0;
  double final_omi_translations_1_2_0 = r_149_add_2_0;
  double final_omi_rotations_1_0_0 = r_147_mul_0_0;
  double final_omi_rotations_1_0_1 = r_147_mul_0_1;
  double final_omi_rotations_1_0_2 = r_147_mul_0_2;
  double final_omi_rotations_1_1_0 = r_147_mul_1_0;
  double final_omi_rotations_1_1_1 = r_147_mul_1_1;
  double final_omi_rotations_1_1_2 = r_147_mul_1_2;
  double final_omi_rotations_1_2_0 = r_147_mul_2_0;
  double final_omi_rotations_1_2_1 = r_147_mul_2_1;
  double final_omi_rotations_1_2_2 = r_147_mul_2_2;
  double final_v_1_0_0 = act_motion_inv_1_0_0;
  double final_v_1_1_0 = act_motion_inv_1_1_0;
  double final_v_1_2_0 = act_motion_inv_1_2_0;
  double final_v_1_3_0 = act_motion_inv_1_3_0;
  double final_v_1_4_0 = act_motion_inv_1_4_0;
  double final_v_1_5_0 = act_motion_inv_1_5_0;
  double final_a_1_0_0 = r_247_add_0_0;
  double final_a_1_1_0 = r_247_add_1_0;
  double final_a_1_2_0 = r_247_add_2_0;
  double final_a_1_3_0 = r_247_add_3_0;
  double final_a_1_4_0 = r_247_add_4_0;
  double final_a_1_5_0 = r_247_add_5_0;
  double final_omi_translations_2_0_0 = r_290_add_0_0;
  double final_omi_translations_2_1_0 = r_290_add_1_0;
  double final_omi_translations_2_2_0 = r_290_add_2_0;
  double final_omi_rotations_2_0_0 = r_288_mul_0_0;
  double final_omi_rotations_2_0_1 = r_288_mul_0_1;
  double final_omi_rotations_2_0_2 = r_288_mul_0_2;
  double final_omi_rotations_2_1_0 = r_288_mul_1_0;
  double final_omi_rotations_2_1_1 = r_288_mul_1_1;
  double final_omi_rotations_2_1_2 = r_288_mul_1_2;
  double final_omi_rotations_2_2_0 = r_288_mul_2_0;
  double final_omi_rotations_2_2_1 = r_288_mul_2_1;
  double final_omi_rotations_2_2_2 = r_288_mul_2_2;
  double final_v_2_0_0 = act_motion_inv_2_0_0;
  double final_v_2_1_0 = act_motion_inv_2_1_0;
  double final_v_2_2_0 = act_motion_inv_2_2_0;
  double final_v_2_3_0 = act_motion_inv_2_3_0;
  double final_v_2_4_0 = act_motion_inv_2_4_0;
  double final_v_2_5_0 = act_motion_inv_2_5_0;
  double final_a_2_0_0 = r_388_add_0_0;
  double final_a_2_1_0 = r_388_add_1_0;
  double final_a_2_2_0 = r_388_add_2_0;
  double final_a_2_3_0 = r_388_add_3_0;
  double final_a_2_4_0 = r_388_add_4_0;
  double final_a_2_5_0 = r_388_add_5_0;
  double final_omi_translations_3_0_0 = r_431_add_0_0;
  double final_omi_translations_3_1_0 = r_431_add_1_0;
  double final_omi_translations_3_2_0 = r_431_add_2_0;
  double final_omi_rotations_3_0_0 = r_429_mul_0_0;
  double final_omi_rotations_3_0_1 = r_429_mul_0_1;
  double final_omi_rotations_3_0_2 = r_429_mul_0_2;
  double final_omi_rotations_3_1_0 = r_429_mul_1_0;
  double final_omi_rotations_3_1_1 = r_429_mul_1_1;
  double final_omi_rotations_3_1_2 = r_429_mul_1_2;
  double final_omi_rotations_3_2_0 = r_429_mul_2_0;
  double final_omi_rotations_3_2_1 = r_429_mul_2_1;
  double final_omi_rotations_3_2_2 = r_429_mul_2_2;
  double final_v_3_0_0 = act_motion_inv_3_0_0;
  double final_v_3_1_0 = act_motion_inv_3_1_0;
  double final_v_3_2_0 = act_motion_inv_3_2_0;
  double final_v_3_3_0 = act_motion_inv_3_3_0;
  double final_v_3_4_0 = act_motion_inv_3_4_0;
  double final_v_3_5_0 = act_motion_inv_3_5_0;
  double final_a_3_0_0 = r_529_add_0_0;
  double final_a_3_1_0 = r_529_add_1_0;
  double final_a_3_2_0 = r_529_add_2_0;
  double final_a_3_3_0 = r_529_add_3_0;
  double final_a_3_4_0 = r_529_add_4_0;
  double final_a_3_5_0 = r_529_add_5_0;
  double final_omi_translations_4_0_0 = r_572_add_0_0;
  double final_omi_translations_4_1_0 = r_572_add_1_0;
  double final_omi_translations_4_2_0 = r_572_add_2_0;
  double final_omi_rotations_4_0_0 = r_570_mul_0_0;
  double final_omi_rotations_4_0_1 = r_570_mul_0_1;
  double final_omi_rotations_4_0_2 = r_570_mul_0_2;
  double final_omi_rotations_4_1_0 = r_570_mul_1_0;
  double final_omi_rotations_4_1_1 = r_570_mul_1_1;
  double final_omi_rotations_4_1_2 = r_570_mul_1_2;
  double final_omi_rotations_4_2_0 = r_570_mul_2_0;
  double final_omi_rotations_4_2_1 = r_570_mul_2_1;
  double final_omi_rotations_4_2_2 = r_570_mul_2_2;
  double final_v_4_0_0 = act_motion_inv_4_0_0;
  double final_v_4_1_0 = act_motion_inv_4_1_0;
  double final_v_4_2_0 = act_motion_inv_4_2_0;
  double final_v_4_3_0 = act_motion_inv_4_3_0;
  double final_v_4_4_0 = act_motion_inv_4_4_0;
  double final_v_4_5_0 = act_motion_inv_4_5_0;
  double final_a_4_0_0 = r_670_add_0_0;
  double final_a_4_1_0 = r_670_add_1_0;
  double final_a_4_2_0 = r_670_add_2_0;
  double final_a_4_3_0 = r_670_add_3_0;
  double final_a_4_4_0 = r_670_add_4_0;
  double final_a_4_5_0 = r_670_add_5_0;
  double final_omi_translations_5_0_0 = r_713_add_0_0;
  double final_omi_translations_5_1_0 = r_713_add_1_0;
  double final_omi_translations_5_2_0 = r_713_add_2_0;
  double final_omi_rotations_5_0_0 = r_711_mul_0_0;
  double final_omi_rotations_5_0_1 = r_711_mul_0_1;
  double final_omi_rotations_5_0_2 = r_711_mul_0_2;
  double final_omi_rotations_5_1_0 = r_711_mul_1_0;
  double final_omi_rotations_5_1_1 = r_711_mul_1_1;
  double final_omi_rotations_5_1_2 = r_711_mul_1_2;
  double final_omi_rotations_5_2_0 = r_711_mul_2_0;
  double final_omi_rotations_5_2_1 = r_711_mul_2_1;
  double final_omi_rotations_5_2_2 = r_711_mul_2_2;
  double final_v_5_0_0 = act_motion_inv_5_0_0;
  double final_v_5_1_0 = act_motion_inv_5_1_0;
  double final_v_5_2_0 = act_motion_inv_5_2_0;
  double final_v_5_3_0 = act_motion_inv_5_3_0;
  double final_v_5_4_0 = act_motion_inv_5_4_0;
  double final_v_5_5_0 = act_motion_inv_5_5_0;
  double final_a_5_0_0 = r_811_add_0_0;
  double final_a_5_1_0 = r_811_add_1_0;
  double final_a_5_2_0 = r_811_add_2_0;
  double final_a_5_3_0 = r_811_add_3_0;
  double final_a_5_4_0 = r_811_add_4_0;
  double final_a_5_5_0 = r_811_add_5_0;

    fk_return result; // Create the struct

    // --- Copy oMis ---
    result.oMis[0] = oMi{ /* ... final_omi_rotations_0_... , final_omi_translations_0_... */
         { {final_omi_rotations_0_0_0, final_omi_rotations_0_0_1, final_omi_rotations_0_0_2},
           {final_omi_rotations_0_1_0, final_omi_rotations_0_1_1, final_omi_rotations_0_1_2},
           {final_omi_rotations_0_2_0, final_omi_rotations_0_2_1, final_omi_rotations_0_2_2} },
         {final_omi_translations_0_0_0, final_omi_translations_0_1_0, final_omi_translations_0_2_0}
    };
    result.oMis[1] = oMi{ /* ... final_omi_rotations_1_... , final_omi_translations_1_... */
         { {final_omi_rotations_1_0_0, final_omi_rotations_1_0_1, final_omi_rotations_1_0_2},
           {final_omi_rotations_1_1_0, final_omi_rotations_1_1_1, final_omi_rotations_1_1_2},
           {final_omi_rotations_1_2_0, final_omi_rotations_1_2_1, final_omi_rotations_1_2_2} },
         {final_omi_translations_1_0_0, final_omi_translations_1_1_0, final_omi_translations_1_2_0}
    };
     result.oMis[2] = oMi{ /* ... final_omi_rotations_2_... , final_omi_translations_2_... */
         { {final_omi_rotations_2_0_0, final_omi_rotations_2_0_1, final_omi_rotations_2_0_2},
           {final_omi_rotations_2_1_0, final_omi_rotations_2_1_1, final_omi_rotations_2_1_2},
           {final_omi_rotations_2_2_0, final_omi_rotations_2_2_1, final_omi_rotations_2_2_2} },
         {final_omi_translations_2_0_0, final_omi_translations_2_1_0, final_omi_translations_2_2_0}
    };
     result.oMis[3] = oMi{ /* ... final_omi_rotations_3_... , final_omi_translations_3_... */
         { {final_omi_rotations_3_0_0, final_omi_rotations_3_0_1, final_omi_rotations_3_0_2},
           {final_omi_rotations_3_1_0, final_omi_rotations_3_1_1, final_omi_rotations_3_1_2},
           {final_omi_rotations_3_2_0, final_omi_rotations_3_2_1, final_omi_rotations_3_2_2} },
         {final_omi_translations_3_0_0, final_omi_translations_3_1_0, final_omi_translations_3_2_0}
    };
     result.oMis[4] = oMi{ /* ... final_omi_rotations_4_... , final_omi_translations_4_... */
         { {final_omi_rotations_4_0_0, final_omi_rotations_4_0_1, final_omi_rotations_4_0_2},
           {final_omi_rotations_4_1_0, final_omi_rotations_4_1_1, final_omi_rotations_4_1_2},
           {final_omi_rotations_4_2_0, final_omi_rotations_4_2_1, final_omi_rotations_4_2_2} },
         {final_omi_translations_4_0_0, final_omi_translations_4_1_0, final_omi_translations_4_2_0}
    };
    result.oMis[5] = oMi{ /* ... final_omi_rotations_5_... , final_omi_translations_5_... */
        { {final_omi_rotations_5_0_0, final_omi_rotations_5_0_1, final_omi_rotations_5_0_2},
        {final_omi_rotations_5_1_0, final_omi_rotations_5_1_1, final_omi_rotations_5_1_2},
        {final_omi_rotations_5_2_0, final_omi_rotations_5_2_1, final_omi_rotations_5_2_2} },
        {final_omi_translations_5_0_0, final_omi_translations_5_1_0, final_omi_translations_5_2_0}
    };

    // --- Copy v ---
    result.v[0][0] = final_v_0_0_0; result.v[0][1] = final_v_0_1_0; result.v[0][2] = final_v_0_2_0;
    result.v[0][3] = final_v_0_3_0; result.v[0][4] = final_v_0_4_0; result.v[0][5] = final_v_0_5_0;
    result.v[1][0] = final_v_1_0_0; result.v[1][1] = final_v_1_1_0; result.v[1][2] = final_v_1_2_0;
    result.v[1][3] = final_v_1_3_0; result.v[1][4] = final_v_1_4_0; result.v[1][5] = final_v_1_5_0;
    result.v[2][0] = final_v_2_0_0; result.v[2][1] = final_v_2_1_0; result.v[2][2] = final_v_2_2_0;
    result.v[2][3] = final_v_2_3_0; result.v[2][4] = final_v_2_4_0; result.v[2][5] = final_v_2_5_0;
    result.v[3][0] = final_v_3_0_0; result.v[3][1] = final_v_3_1_0; result.v[3][2] = final_v_3_2_0;
    result.v[3][3] = final_v_3_3_0; result.v[3][4] = final_v_3_4_0; result.v[3][5] = final_v_3_5_0;
    result.v[4][0] = final_v_4_0_0; result.v[4][1] = final_v_4_1_0; result.v[4][2] = final_v_4_2_0;
    result.v[4][3] = final_v_4_3_0; result.v[4][4] = final_v_4_4_0; result.v[4][5] = final_v_4_5_0;
    result.v[5][0] = final_v_5_0_0; result.v[5][1] = final_v_5_1_0; result.v[5][2] = final_v_5_2_0;
    result.v[5][3] = final_v_5_3_0; result.v[5][4] = final_v_5_4_0; result.v[5][5] = final_v_5_5_0;

    // --- Copy a ---
    result.a[0][0] = final_a_0_0_0; result.a[0][1] = final_a_0_1_0; result.a[0][2] = final_a_0_2_0;
    result.a[0][3] = final_a_0_3_0; result.a[0][4] = final_a_0_4_0; result.a[0][5] = final_a_0_5_0;
    result.a[1][0] = final_a_1_0_0; result.a[1][1] = final_a_1_1_0; result.a[1][2] = final_a_1_2_0;
    result.a[1][3] = final_a_1_3_0; result.a[1][4] = final_a_1_4_0; result.a[1][5] = final_a_1_5_0;
    result.a[2][0] = final_a_2_0_0; result.a[2][1] = final_a_2_1_0; result.a[2][2] = final_a_2_2_0;
    result.a[2][3] = final_a_2_3_0; result.a[2][4] = final_a_2_4_0; result.a[2][5] = final_a_2_5_0;
    result.a[3][0] = final_a_3_0_0; result.a[3][1] = final_a_3_1_0; result.a[3][2] = final_a_3_2_0;
    result.a[3][3] = final_a_3_3_0; result.a[3][4] = final_a_3_4_0; result.a[3][5] = final_a_3_5_0;
    result.a[4][0] = final_a_4_0_0; result.a[4][1] = final_a_4_1_0; result.a[4][2] = final_a_4_2_0;
    result.a[4][3] = final_a_4_3_0; result.a[4][4] = final_a_4_4_0; result.a[4][5] = final_a_4_5_0;
    result.a[5][0] = final_a_5_0_0; result.a[5][1] = final_a_5_1_0; result.a[5][2] = final_a_5_2_0;
    result.a[5][3] = final_a_5_3_0; result.a[5][4] = final_a_5_4_0; result.a[5][5] = final_a_5_5_0;

    return result; // Return the fully populated struct
}

